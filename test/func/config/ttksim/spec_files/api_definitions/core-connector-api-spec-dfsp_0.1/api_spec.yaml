openapi: 3.0.3
info:
    title: Mifos Core Connector for DFSP Operations App
    version: 0.0.1
    description: >
        API Specification for the Mifos Core Connector from the Dfsp Operations App.

        This API is to be implemented by the DFSP
    license:
        name: Apache License Version 2.0, January 2004
        url: http://www.apache.org/licenses/

paths:
    /transfers:
        post:
            tags:
                - Transfer Request
            summary: Request to make a receiveTransfer from a fineract account to a beneficiary in a mojaloop scheme
            description: Request to make a receiveTransfer
            operationId: transfers
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/TransferRequest'
            responses:
                '200':
                    $ref: '#/components/responses/transferSuccess'
                '400':
                    description: Malformed or missing required body, headers or parameters
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        example: "3200"
                                    message:
                                        type: string
                                        example: "Account No Invalid"

                '404':
                    description: Resource Not Found
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        example: "2000"
                                    message:
                                        type: string
                                        example: "Account Not Found"

                '500':
                    description: Internal Server Error
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        example: "2000"
                                    message:
                                        type: string
                                        example: "Failed to Initiate transaction"

    /transfers/{transferId}:
        put:
            tags:
                - Update a Transfer
            summary: Update a Transfer that was initiated by /transfers to either accept the quote or not.
            description: Update a receiveTransfer
            operationId: updateTransfer
            parameters:
                - name: transferId
                  in: path
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                acceptQuote:
                                    type: boolean
                                    example: true
                                fineractTransaction:
                                    type: object
                                    properties:
                                        fineractAccountId:
                                            type: number
                                            example: 1
                                        totalAmount:
                                            type: number
                                            example: 882.3
                                        routingCode:
                                            type: string
                                            example: "12445"
                                        receiptNumber:
                                            type: string
                                            example: "23249993"
                                        bankNumber:
                                            type: string
                                            example: "7823"
            responses:
                '200':
                    $ref: '#/components/responses/transferSuccess'
                '404':
                    description: Resource Not Found
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        example: "2000"
                                    message:
                                        type: string
                                        example: "Account Not Found"

                '500':
                    description: Internal Server Error
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        example: "2000"
                                    message:
                                        type: string
                                        example: "Failed to Withdraw funds"
                                    refundDetails:
                                        type: object
                                        properties:
                                            amount:
                                                type: number
                                                example: 300
                                            fineractAccountId:
                                                type: number
                                                example: 4

components:
    schemas:
        AmountType:
            title: AmountType
            type: string
            enum:
                - SEND
                - RECEIVE
            description: >-
                Below are the allowed values for the enumeration AmountType.

                - SEND - Amount the Payer would like to send, that is, the amount that
                should be withdrawn from the Payer account including any fees.

                - RECEIVE - Amount the Payer would like the Payee to receive, that is,
                the amount that should be sent to the receiver exclusive of any fees.
            example: RECEIVE
        Amount:
            title: Amount
            type: string
            pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$
            description: >-
                The API data type Amount is a JSON String in a canonical format that is
                restricted by a regular expression for interoperability reasons. This
                pattern does not allow any trailing zeroes at all, but allows an amount
                without a minor currency unit. It also only allows four digits in the
                minor currency unit; a negative value is not allowed. Using more than 18
                digits in the major currency unit is not allowed.
            example: '123.45'
        transferTransactionType:
            title: transferTransactionType
            type: string
            enum:
                - TRANSFER
            description: Type of transaction.
        TransactionSubScenario:
            title: TransactionSubScenario
            type: string
            pattern: ^[A-Z_]{1,32}$
            description: >-
                Possible sub-scenario, defined locally within the scheme (UndefinedEnum
                Type).
            example: LOCALLY_DEFINED_SUBSCENARIO
        Note:
            title: Note
            type: string
            minLength: 1
            maxLength: 128
            description: Memo assigned to transaction.
            example: Note sent to Payee.
        PartyIdType:
            title: PartyIdType
            type: string
            enum:
                - MSISDN
                - EMAIL
                - PERSONAL_ID
                - BUSINESS
                - DEVICE
                - ACCOUNT_ID
                - IBAN
                - ALIAS
            description: >-
                Below are the allowed values for the enumeration.

                - MSISDN - An MSISDN (Mobile Station International Subscriber Directory
                Number, that is, the phone number) is used as reference to a
                participant. The MSISDN identifier should be in international format
                according to the [ITU-T E.164
                standard](https://www.itu.int/rec/T-REC-E.164/en). Optionally, the
                MSISDN may be prefixed by a single plus sign, indicating the
                international prefix.

                - EMAIL - An email is used as reference to a participant. The format of
                the email should be according to the informational [RFC
                3696](https://tools.ietf.org/html/rfc3696).

                - PERSONAL_ID - A personal identifier is used as reference to a
                participant. Examples of personal identification are passport number,
                birth certificate number, and national registration number. The
                identifier number is added in the PartyIdentifier element. The personal
                identifier type is added in the PartySubIdOrType element.

                - BUSINESS - A specific Business (for example, an organization or a
                company) is used as reference to a participant. The BUSINESS identifier
                can be in any format. To make a transaction connected to a specific
                username or bill number in a Business, the PartySubIdOrType element
                should be used.

                - DEVICE - A specific device (for example, a POS or ATM) ID connected to
                a specific business or organization is used as reference to a Party. For
                referencing a specific device under a specific business or organization,
                use the PartySubIdOrType element.

                - ACCOUNT_ID - A bank account number or FSP account ID should be used as
                reference to a participant. The ACCOUNT_ID identifier can be in any
                format, as formats can greatly differ depending on country and FSP.

                - IBAN - A bank account number or FSP account ID is used as reference to
                a participant. The IBAN identifier can consist of up to 34 alphanumeric
                characters and should be entered without whitespace.

                - ALIAS An alias is used as reference to a participant. The alias should
                be created in the FSP as an alternative reference to an account owner.
                Another example of an alias is a username in the FSP system. The ALIAS
                identifier can be in any format. It is also possible to use the
                PartySubIdOrType element for identifying an account under an Alias
                defined by the PartyIdentifier.
        PartyIdentifier:
            title: PartyIdentifier
            type: string
            minLength: 1
            maxLength: 128
            description: Identifier of the Party.
            example: '16135551212'
        PartySubIdOrType:
            title: PartySubIdOrType
            type: string
            minLength: 1
            maxLength: 128
            description: >-
                Either a sub-identifier of a PartyIdentifier, or a sub-type of the
                PartyIdType, normally a PersonalIdentifierType.
        ExtensionKey:
            title: ExtensionKey
            type: string
            minLength: 1
            maxLength: 32
            description: Extension key.

        ExtensionValue:
            title: ExtensionValue
            type: string
            minLength: 1
            maxLength: 128
            description: Extension value.

        Extension:
            title: Extension
            type: object
            description: Data model for the complex type Extension.
            properties:
                key:
                    $ref: '#/components/schemas/ExtensionKey'
                value:
                    $ref: '#/components/schemas/ExtensionValue'
            required:
                - key
                - value

        Currency:
            title: Currency
            description: >-
                The currency codes defined in [ISO
                4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter
                alphabetic codes are used as the standard naming representation for
                currencies.
            type: string
            minLength: 3
            maxLength: 3
            enum:
                - AED
                - AFN
                - ALL
                - AMD
                - ANG
                - AOA
                - ARS
                - AUD
                - AWG
                - AZN
                - BAM
                - BBD
                - BDT
                - BGN
                - BHD
                - BIF
                - BMD
                - BND
                - BOB
                - BRL
                - BSD
                - BTN
                - BWP
                - BYN
                - BZD
                - CAD
                - CDF
                - CHF
                - CLP
                - CNY
                - COP
                - CRC
                - CUC
                - CUP
                - CVE
                - CZK
                - DJF
                - DKK
                - DOP
                - DZD
                - EGP
                - ERN
                - ETB
                - EUR
                - FJD
                - FKP
                - GBP
                - GEL
                - GGP
                - GHS
                - GIP
                - GMD
                - GNF
                - GTQ
                - GYD
                - HKD
                - HNL
                - HRK
                - HTG
                - HUF
                - IDR
                - ILS
                - IMP
                - INR
                - IQD
                - IRR
                - ISK
                - JEP
                - JMD
                - JOD
                - JPY
                - KES
                - KGS
                - KHR
                - KMF
                - KPW
                - KRW
                - KWD
                - KYD
                - KZT
                - LAK
                - LBP
                - LKR
                - LRD
                - LSL
                - LYD
                - MAD
                - MDL
                - MGA
                - MKD
                - MMK
                - MNT
                - MOP
                - MRO
                - MUR
                - MVR
                - MWK
                - MXN
                - MYR
                - MZN
                - NAD
                - NGN
                - NIO
                - NOK
                - NPR
                - NZD
                - OMR
                - PAB
                - PEN
                - PGK
                - PHP
                - PKR
                - PLN
                - PYG
                - QAR
                - RON
                - RSD
                - RUB
                - RWF
                - SAR
                - SBD
                - SCR
                - SDG
                - SEK
                - SGD
                - SHP
                - SLL
                - SOS
                - SPL
                - SRD
                - STD
                - SVC
                - SYP
                - SZL
                - THB
                - TJS
                - TMT
                - TND
                - TOP
                - TRY
                - TTD
                - TVD
                - TWD
                - TZS
                - UAH
                - UGX
                - USD
                - UYU
                - UZS
                - VEF
                - VND
                - VUV
                - WST
                - XAF
                - XCD
                - XDR
                - XOF
                - XPF
                - XTS
                - XXX
                - YER
                - ZAR
                - ZMW
                - ZWD

        CorrelationId:
            title: CorrelationId
            type: string
            pattern: >-
                ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
            description: >-
                Identifier that correlates all messages of the same sequence. The API
                data type UUID (Universally Unique Identifier) is a JSON String in
                canonical format, conforming to [RFC
                4122](https://tools.ietf.org/html/rfc4122), that is restricted by a
                regular expression for interoperability reasons. A UUID is always 36
                characters long, 32 hexadecimal symbols and 4 dashes (‘-‘).
            example: b51ec534-ee48-4575-b6a9-ead2955b8069

        transferStatus:
            type: string
            enum:
                - ERROR_OCCURRED
                - WAITING_FOR_PARTY_ACCEPTANCE
                - WAITING_FOR_QUOTE_ACCEPTANCE
                - COMPLETED

        TransactionInitiatorType:
            title: TransactionInitiatorType
            type: string
            enum:
                - CONSUMER
                - AGENT
                - BUSINESS
                - DEVICE
            description: |-
                Below are the allowed values for the enumeration.
                - CONSUMER - Consumer is the initiator of the transaction.
                - AGENT - Agent is the initiator of the transaction.
                - BUSINESS - Business is the initiator of the transaction.
                - DEVICE - Device is the initiator of the transaction.
            example: CONSUMER
        Name:
            title: Name
            type: string
            pattern: ^(?!\s*$)[\w .,'-]{1,128}$
            description: >-
                The API data type Name is a JSON String, restricted by a regular
                expression to avoid characters which are generally not used in a name.


                Regular Expression - The regular expression for restricting the Name
                type is "^(?!\s*$)[\w .,'-]{1,128}$". The restriction does not allow a
                string consisting of whitespace only, all Unicode characters are
                allowed, as well as the period (.) (apostrophe (‘), dash (-), comma (,)
                and space characters ( ).


                **Note:** In some programming languages, Unicode support must be
                specifically enabled. For example, if Java is used, the flag
                UNICODE_CHARACTER_CLASS must be enabled to allow Unicode characters.
        FirstName:
            title: FirstName
            type: string
            minLength: 1
            maxLength: 128
            pattern: >-
                ^(?!\s*$)[\p{L}\p{gc=Mark}\p{digit}\p{gc=Connector_Punctuation}\p{Join_Control}
                .,''-]{1,128}$
            description: First name of the Party (Name Type).
            example: Henrik
        MiddleName:
            title: MiddleName
            type: string
            minLength: 1
            maxLength: 128
            pattern: >-
                ^(?!\s*$)[\p{L}\p{gc=Mark}\p{digit}\p{gc=Connector_Punctuation}\p{Join_Control}
                .,''-]{1,128}$
            description: Middle name of the Party (Name Type).
            example: Johannes
        LastName:
            title: LastName
            type: string
            minLength: 1
            maxLength: 128
            pattern: >-
                ^(?!\s*$)[\p{L}\p{gc=Mark}\p{digit}\p{gc=Connector_Punctuation}\p{Join_Control}
                .,''-]{1,128}$
            description: Last name of the Party (Name Type).
            example: Karlsson
        DateOfBirth:
            title: DateofBirth (type Date)
            type: string
            pattern: >-
                ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$
            description: Date of Birth of the Party.
            example: '1966-06-16'
        MerchantClassificationCode:
            title: MerchantClassificationCode
            type: string
            pattern: ^[\d]{1,4}$
            description: >-
                A limited set of pre-defined numbers. This list would be a limited set
                of numbers identifying a set of popular merchant types like School Fees,
                Pubs and Restaurants, Groceries, etc.
        FspId:
            title: FspId
            type: string
            minLength: 1
            maxLength: 32
            description: FSP identifier.
        extensionListEmptiable:
            type: array
            items:
                $ref: '#/components/schemas/Extension'
            minItems: 0
            maxItems: 16

        transferParty:
            type: object
            required:
                - idType
                - idValue
            properties:
                type:
                    $ref: '#/components/schemas/TransactionInitiatorType'
                idType:
                    $ref: '#/components/schemas/PartyIdType'
                idValue:
                    $ref: '#/components/schemas/PartyIdentifier'
                idSubValue:
                    $ref: '#/components/schemas/PartySubIdOrType'
                displayName:
                    $ref: '#/components/schemas/Name'
                firstName:
                    $ref: '#/components/schemas/FirstName'
                middleName:
                    $ref: '#/components/schemas/MiddleName'
                lastName:
                    $ref: '#/components/schemas/LastName'
                dateOfBirth:
                    $ref: '#/components/schemas/DateOfBirth'
                merchantClassificationCode:
                    $ref: '#/components/schemas/MerchantClassificationCode'
                fspId:
                    $ref: '#/components/schemas/FspId'
                extensionList:
                    $ref: '#/components/schemas/extensionListEmptiable'

        IdType:
            type: string
            enum:
                - MSISDN
                - ACCOUNT_NO
                - EMAIL
                - PERSONAL_ID
                - BUSINESS
                - DEVICE
                - ACCOUNT_ID
                - IBAN
                - ALIAS

        PartyInfo:
            type: object
            required:
                - idType
                - idValue
            properties:
                dateOfBirth:
                    type: string
                    example: '8477-05-21'
                displayName:
                    type: string
                extensionList:
                    type: array
                    items:
                        type: object
                        properties:
                            key:
                                type: string
                            value:
                                type: string
                firstName:
                    type: string
                    description: 'First Name'
                fspId:
                    type: string
                    description: 'FSP Id'
                idSubValue:
                    type: string
                    description: 'Id Sub Value'
                idType:
                    $ref: '#/components/schemas/IdType'
                idValue:
                    type: string
                    description: 'ID Value'
                lastName:
                    type: string
                merchantClassificationCode:
                    type: string
                middleName:
                    type: string
                type:
                    type: string

        TransferRequest:
            type: object
            required:
                - to
                - from
            properties:
                homeTransactionId:
                    type: string
                    example: 'string'
                amount:
                    type: string
                    example: '0.347'
                amountType:
                    type: string
                    example: 'SEND'
                currency:
                    type: string
                    example: 'AED'
                from:
                    type: object
                    properties:
                        fineractAccountId:
                            type: number
                            example: 1
                        payer:
                            $ref: '#/components/schemas/PartyInfo'
                to:
                    $ref: '#/components/schemas/PartyInfo'
                note:
                    type: string
                quoteRequestExtensions:
                    type: array
                    items:
                        type: object
                        properties:
                            key:
                                type: string
                            value:
                                type: string
                subScenario:
                    type: string
                transactionType:
                    type: string

        TransferResponse:
            type: object
            properties:
                completedTimestamp:
                    type: string
                fulfilment:
                    type: string
                homeTransactionId:
                    type: string
                transferState:
                    type: string

        IlpFulfilment:
            title: IlpFulfilment
            type: string
            pattern: ^[A-Za-z0-9-_]{43}$
            maxLength: 48
            description: Fulfilment that must be attached to the receiveTransfer by the Payee.
            example: WLctttbu2HvTsa1XWvUoGRcQozHsqeu9Ahl2JW9Bsu8

        DateTime:
            title: DateTime
            type: string
            pattern: >-
                ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:(\.\d{3}))(?:Z|[+-][01]\d:[0-5]\d)$
            description: >-
                The API data type DateTime is a JSON String in a lexical format that is
                restricted by a regular expression for interoperability reasons. The
                format is according to [ISO
                8601](https://www.iso.org/iso-8601-date-and-time-format.html), expressed
                in a combined date, time and time zone format. A more readable version
                of the format is yyyy-MM-ddTHH:mm:ss.SSS[-HH:MM]. Examples are
                "2016-05-24T08:38:08.699-04:00", "2016-05-24T08:38:08.699Z" (where Z
                indicates Zulu time zone, same as UTC).
            example: '2016-05-24T08:38:08.699-04:00'

        TransferState:
            title: TransferState
            type: string
            enum:
                - RECEIVED
                - RESERVED
                - COMMITTED
                - ABORTED
            description: >-
                Below are the allowed values for the enumeration.

                - RECEIVED - Next ledger has received the transfer.

                - RESERVED - Next ledger has reserved the transfer.

                - COMMITTED - Next ledger has successfully performed the transfer.

                - ABORTED - Next ledger has aborted the transfer due to a rejection or
                failure to perform the transfer.
            example: RESERVED
        ExtensionList:
            title: ExtensionList
            type: object
            description: >-
                Data model for the complex type ExtensionList. An optional list of
                extensions, specific to deployment.
            properties:
                extension:
                    type: array
                    items:
                        $ref: '#/components/schemas/Extension'
                    minItems: 1
                    maxItems: 16
                    description: Number of Extension elements.
            required:
                - extension

        TransfersIDPutResponse:
            title: TransfersIDPutResponse
            type: object
            description: The object sent in the PUT /transfers/{ID} callback.
            properties:
                fulfilment:
                    $ref: '#/components/schemas/IlpFulfilment'
                completedTimestamp:
                    $ref: '#/components/schemas/DateTime'
                transferState:
                    $ref: '#/components/schemas/TransferState'
                extensionList:
                    $ref: '#/components/schemas/ExtensionList'
            required:
                - transferState

        ErrorCode:
            title: ErrorCode
            type: string
            pattern: ^[1-9]\d{3}$
            description: >-
                The API data type ErrorCode is a JSON String of four characters,
                consisting of digits only. Negative numbers are not allowed. A leading
                zero is not allowed. Each error code in the API is a four-digit number,
                for example, 1234, where the first number (1 in the example) represents
                the high-level error category, the second number (2 in the example)
                represents the low-level error category, and the last two numbers (34 in
                the example) represent the specific error.
            example: '5100'
        ErrorDescription:
            title: ErrorDescription
            type: string
            minLength: 1
            maxLength: 128
            description: Error description string.

        ErrorInformation:
            title: ErrorInformation
            type: object
            description: Data model for the complex type ErrorInformation.
            properties:
                errorCode:
                    $ref: '#/components/schemas/ErrorCode'
                errorDescription:
                    $ref: '#/components/schemas/ErrorDescription'
                extensionList:
                    $ref: '#/components/schemas/ExtensionList'
            required:
                - errorCode
                - errorDescription
        mojaloopError:
            type: object
            properties:
                errorInformation:
                    $ref: '#/components/schemas/ErrorInformation'

        transferError:
            type: object
            description: >-
                This may be a Mojaloop API error returned from another entity in the
                scheme or an object representing other types of error e.g. exceptions
                that may occur inside the scheme adapter.
            properties:
                httpStatusCode:
                    type: integer
                    description: >-
                        The HTTP status code returned to the caller. This is the same as the
                        actual HTTP status code returned with the response.
                mojaloopError:
                    $ref: '#/components/schemas/mojaloopError'

        fineractTransferResponse:
            type: object
            properties:
                totalAmountFromFineract:
                    type: string
                    example: "8834.4"
                transferResponse:
                    type: object
                    properties:
                        transferResponse:
                            $ref: "#/components/schemas/transferResponse"

        transferResponse:
            type: object
            required:
                - homeTransactionId
                - from
                - to
                - amountType
                - currency
                - amount
                - transactionType
            properties:
                transferId:
                    $ref: '#/components/schemas/CorrelationId'
                homeTransactionId:
                    type: string
                    description: >-
                        Transaction ID from the DFSP backend, used to reconcile transactions
                        between the Switch and DFSP backend systems.
                from:
                    $ref: '#/components/schemas/transferParty'
                to:
                    $ref: '#/components/schemas/transferParty'
                amountType:
                    $ref: '#/components/schemas/AmountType'
                currency:
                    $ref: '#/components/schemas/Currency'
                amount:
                    $ref: '#/components/schemas/Amount'
                transactionType:
                    $ref: '#/components/schemas/transferTransactionType'
                subScenario:
                    $ref: '#/components/schemas/TransactionSubScenario'
                note:
                    $ref: '#/components/schemas/Note'
                currentState:
                    $ref: '#/components/schemas/transferStatus'
                quoteId:
                    $ref: '#/components/schemas/CorrelationId'
                getPartiesResponse:
                    type: object
                    required:
                        - body
                    properties:
                        body:
                            type: object
                        headers:
                            type: object
                quoteResponse:
                    type: object
                    required:
                        - body
                    properties:
                        body:
                            $ref: '#/components/schemas/QuotesIDPutResponse'
                        headers:
                            type: object
                quoteResponseSource:
                    type: string
                    description: >
                        FSPID of the entity that supplied the quote response. This may not
                        be the same as the FSPID of the entity which owns the end user
                        account in the case of a FOREX transfer. i.e. it may be a FOREX
                        gateway.
                fulfil:
                    type: object
                    required:
                        - body
                    properties:
                        body:
                            $ref: '#/components/schemas/TransfersIDPutResponse'
                        headers:
                            type: object
                lastError:
                    $ref: '#/components/schemas/transferError'
                skipPartyLookup:
                    description: >-
                        Set to true if supplying an FSPID for the payee party and no party
                        resolution is needed. This may be useful is a previous party
                        resolution has been performed.
                    type: boolean
        errorResponse:
            type: object
            properties:
                statusCode:
                    type: string
                    description: Error code as string.
                message:
                    type: string
                    description: Error message text.

        errorTransferResponse:
            allOf:
                - $ref: '#/components/schemas/errorResponse'
                - type: object
                  required:
                      - transferState
                  properties:
                      transferState:
                          $ref: '#/components/schemas/transferResponse'
        Money:
            title: Money
            type: object
            description: Data model for the complex type Money.
            properties:
                currency:
                    $ref: '#/components/schemas/Currency'
                amount:
                    $ref: '#/components/schemas/Amount'
            required:
                - currency
                - amount
        Latitude:
            title: Latitude
            type: string
            pattern: >-
                ^(\+|-)?(?:90(?:(?:\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\.[0-9]{1,6})?))$
            description: >-
                The API data type Latitude is a JSON String in a lexical format that is
                restricted by a regular expression for interoperability reasons.
            example: '+45.4215'

        Longitude:
            title: Longitude
            type: string
            pattern: >-
                ^(\+|-)?(?:180(?:(?:\.0{1,6})?)|(?:[0-9]|[1-9][0-9]|1[0-7][0-9])(?:(?:\.[0-9]{1,6})?))$
            description: >-
                The API data type Longitude is a JSON String in a lexical format that is
                restricted by a regular expression for interoperability reasons.
            example: '+75.6972'

        GeoCode:
            title: GeoCode
            type: object
            description: >-
                Data model for the complex type GeoCode. Indicates the geographic
                location from where the transaction was initiated.
            properties:
                latitude:
                    $ref: '#/components/schemas/Latitude'
                longitude:
                    $ref: '#/components/schemas/Longitude'
            required:
                - latitude
                - longitude

        IlpPacket:
            title: IlpPacket
            type: string
            pattern: ^[A-Za-z0-9-_]+[=]{0,2}$
            minLength: 1
            maxLength: 32768
            description: Information for recipient (transport layer information).
            example: >-
                AYIBgQAAAAAAAASwNGxldmVsb25lLmRmc3AxLm1lci45T2RTOF81MDdqUUZERmZlakgyOVc4bXFmNEpLMHlGTFGCAUBQU0svMS4wCk5vbmNlOiB1SXlweUYzY3pYSXBFdzVVc05TYWh3CkVuY3J5cHRpb246IG5vbmUKUGF5bWVudC1JZDogMTMyMzZhM2ItOGZhOC00MTYzLTg0NDctNGMzZWQzZGE5OGE3CgpDb250ZW50LUxlbmd0aDogMTM1CkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbgpTZW5kZXItSWRlbnRpZmllcjogOTI4MDYzOTEKCiJ7XCJmZWVcIjowLFwidHJhbnNmZXJDb2RlXCI6XCJpbnZvaWNlXCIsXCJkZWJpdE5hbWVcIjpcImFsaWNlIGNvb3BlclwiLFwiY3JlZGl0TmFtZVwiOlwibWVyIGNoYW50XCIsXCJkZWJpdElkZW50aWZpZXJcIjpcIjkyODA2MzkxXCJ9IgA

        IlpCondition:
            title: IlpCondition
            type: string
            pattern: ^[A-Za-z0-9-_]{43}$
            maxLength: 48
            description: Condition that must be attached to the receiveTransfer by the Payer.

        QuotesIDPutResponse:
            title: QuotesIDPutResponse
            type: object
            description: The object sent in the PUT /quotes/{ID} callback.
            properties:
                transferAmount:
                    $ref: '#/components/schemas/Money'
                payeeReceiveAmount:
                    $ref: '#/components/schemas/Money'
                payeeFspFee:
                    $ref: '#/components/schemas/Money'
                payeeFspCommission:
                    $ref: '#/components/schemas/Money'
                expiration:
                    $ref: '#/components/schemas/DateTime'
                geoCode:
                    $ref: '#/components/schemas/GeoCode'
                ilpPacket:
                    $ref: '#/components/schemas/IlpPacket'
                condition:
                    $ref: '#/components/schemas/IlpCondition'
                extensionList:
                    $ref: '#/components/schemas/ExtensionList'
            required:
                - transferAmount
                - expiration
                - ilpPacket
                - condition

    responses:
        transferSuccess:
            description: Transfer completed successfully
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/fineractTransferResponse'

        transferBadRequest:
            description: Malformed or missing required body, headers or parameters
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/errorTransferResponse'

        transferServerError:
            description: An error occurred processing the receiveTransfer
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/errorTransferResponse'

        transferTimeout:
            description: Timeout occurred processing the receiveTransfer
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/errorTransferResponse'
