openapi: 3.0.3
info:
  contact:
    email: dev@fineract.apache.org
  description: |-
    Apache Fineract is a secure, multi-tenanted microfinance platform.
    The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform.
    The https://cui.fineract.dev[reference app] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation.
    Until we complete the new REST API documentation you still have the legacy documentation available https://fineract.apache.org/legacy-docs/apiLive.htm[here].
    Please check https://fineract.apache.org/docs/current[the Fineract documentation] for more information.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Apache Fineract REST API
  version: 1.10.0-SNAPSHOT
servers:
- url: /fineract-provider/api/v1
- url: https://demo.fineract.dev/fineract-provider/api/v1
security:
- basicAuth: []
  tenantid: []
tags:
- description: |
    Periodic Accrual is to accrue the loan income till the specific date or till batch job scheduled time.
  name: Periodic Accrual Accounting
- description: |-
    An accounting closure indicates that no more journal entries may be logged (or reversed) in the system, either manually or via the portfolio with an entry date prior to the defined closure date

    Field Descriptions
    closingDate
    The date for which the accounting closure is defined
    officeId
    The identifer of the branch for which accounting has been closed
    comments
    Description associated with an Accounting closure
  name: Accounting Closure
- description: |-
    Organization Level Financial Activities like Asset and Liability Transfer can be mapped to GL Account. Integrated accounting takes these accounts into consideration when an Account transfer is made between a savings to loan/savings account and vice-versa

    Field Descriptions
    financialActivityId
    The identifier of the Financial Activity
    glAccountId
    The identifier of a GL Account ( Ledger Account) which shall be used as the default account for the selected Financial Activity
  name: Mapping Financial Activities to Accounts
- description: "Ledger accounts represent an Individual account within an Organizations\
    \ Chart Of Accounts(COA) and are assigned a name and unique number by which they\
    \ can be identified. \nAll transactions relating to a company's assets, liabilities,\
    \ owners' equity, revenue and expenses are recorded against these accounts"
  name: General Ledger Account
- description: "A journal entry refers to the logging of transactions against general\
    \ ledger accounts. A journal entry may consist of several line items, each of\
    \ which is either a \"debit\" or a \"credit\". The total amount of the debits\
    \ must equal the total amount of the credits or the journal entry is said to be\
    \ \"unbalanced\" \n\nA journal entry directly changes the account balances on\
    \ the general ledger"
  name: Journal Entries
- description: |
    This defines the Provisioning Entries for all active loan products

    Field Descriptions
    date
    Date on which day provisioning entries should be created
    createjournalentries
    Boolean variable whether to add journal entries for generated provisioning entries
  name: Provisioning Entries
- description: |-
    It is typical scenario in MFI's that non accountants pass journal entries on a regular basis. For Ex: A branch office might deposit their entire cash at hand to their Bank account at the end of a working day. The branch office users might not understand enough of accounting to figure out which account needs to get credited and which account needs to be debited to represent this transaction.

    Enter accounting rules, an abstraction on top of manual Journal entires for enabling simpler data entry. An accounting rule can define any of the following abstractions

    A Simple journal entry where both the credit and debit account have been preselected
    A Simple journal entry where either credit or debit accounts have been limited to a pre-selected list of accounts (Ex: Debit account should be one of "Bank of America" of "JP Morgan" and credit account should be "Cash")
    A Compound journal entry where multiple debits and / or multiple credits may be made amongst a set of preselected list of accounts (Ex: Credit account should be either "Bank Of America" or "Cash" and debit account can be "Employee Salary" and/or "Miscellenous Expenses")
    An accounting rule can also be optionally associated with a branch, so that only a particular Branch's users have access to the rule
  name: Accounting Rules
- description: |-
    The Apache Fineract Batch API enables a consumer to access significant amounts of data in a single call or to make changes to several objects at once. Batching allows a consumer to pass instructions for several operations in a single HTTP request. A consumer can also specify dependencies between related operations. Once all operations have been completed, a consolidated response will be passed back and the HTTP connection will be closed.

    The Batch API takes in an array of logical HTTP requests represented as JSON arrays - each request has a requestId (the id of a request used to specify the sequence and as a dependency between requests), a method (corresponding to HTTP method GET/PUT/POST/DELETE etc.), a relativeUrl (the portion of the URL after https://example.org/api/v2/), optional headers array (corresponding to HTTP headers), optional reference parameter if a request is dependent on another request and an optional body (for POST and PUT requests). The Batch API returns an array of logical HTTP responses represented as JSON arrays - each response has a requestId, a status code, an optional headers array and an optional body (which is a JSON encoded string).

    Batch API uses Json Path to handle dependent parameters. For example, if request '2' is referencing request '1' and in the "body" or in "relativeUrl" of request '2', there is a dependent parameter (which will look like "$.parameter_name"), then Batch API will internally substitute this dependent parameter from the response body of request '1'.

    Batch API is able to handle deeply nested dependent requests as well nested parameters. As shown in the example, requests are dependent on each other as, 1<--2<--6, i.e a nested dependency, where request '6' is not directly dependent on request '1' but still it is one of the nested child of request '1'. In the same way Batch API could handle a deeply nested dependent value, such as {..[..{..,$.parameter_name,..}..]}.
  name: Batch API
- description: |-
    Every non-read Mifos API request is audited. A fully processed request can not be changed or deleted. See maker checker api for situations where an audit is not fully processed.

    Permissions: To search and look at audit entries a user needs to be attached to a role that has one of the ALL_FUNCTIONS, ALL_FUNCTIONS_READ or READ_AUDIT permissions.

    Data Scope: A user can only see audits that are within their data scope. However, 'head office' users can see all audits including those that aren't office/branch related e.g. Loan Product changes.")
  name: Audits
- description: "Account number preferences are used to describe custom formats for\
    \ account numbers associated with Customer, Loan and Savings accounts."
  name: Account number format
- description: "Business date management enables you to set up, fetch and adjust organisation\
    \ business dates"
  name: Business Date Management
- description: |-
    The following settings are possible for cache:

    No Caching: caching turned off
    Single node: caching on for single instance deployments of platorm (works for multiple tenants but only one tomcat)
    By default caching is set to No Caching. Switching between caches results in the cache been clear e.g. from Single node to No cache and back again would clear down the single node cache.
  name: Cache
- description: |-
    Code and code values: Codes represent a specific category of data, their code values are a specific instance of that category.

    Codes are mostly system defined which means the code itself comes out of the box and cannot be modified however its code values can be. e.g. 'Customer Identifier', it defaults to a code value of 'Passport' but could be 'Drivers License, National Id' etc
  name: Code Values
- description: |-
    Code and code values: Codes represent a specific category of data, their code values are a specific instance of that category.

    Codes are mostly system defined which means the code itself comes out of the box and cannot be modified however its code values can be. e.g. 'Customer Identifier', it defaults to a code value of 'Passport' but could be 'Drivers License, National Id' etc
  name: Codes
- description: |-
    External Services Configuration related to set of supported configurations for third party services like Amazon S3 and SMTP:

    S3 (Amazon S3):
    s3_access_key -
    s3_bucket_name -
    s3_secret_key -


    SMTP (Email Service):
    username -
    password -
    host -
    port -
    useTLS -
  name: External Services
- description: |-
    Global configuration related to set of supported enable/disable configurations:

    maker-checker - defaults to false - if true turns on maker-checker functionality
    reschedule-future-repayments - defaults to false - if true reschedules repayemnts which falls on a non-working day to configured repayment rescheduling rule
    allow-transactions-on-non_workingday - defaults to false - if true allows transactions on non-working days
    reschedule-repayments-on-holidays - defaults to false - if true reschedules repayemnts which falls on a non-working day to defined reschedule date
    allow-transactions-on-holiday - defaults to false - if true allows transactions on holidays
    savings-interest-posting-current-period-end - Set it at the database level before any savings interest is posted. When set as false(default), interest will be posted on the first date of next period. If set as true, interest will be posted on last date of current period. There is no difference in the interest amount posted.
    financial-year-beginning-month - Set it at the database level before any savings interest is posted. Allowed values 1 - 12 (January - December). Interest posting periods are evaluated based on this configuration.
    meetings-mandatory-for-jlg-loans - if set to true, enforces all JLG loans to follow a meeting schedule belonging to either the parent group or Center.
  name: Global Configuration
- description: |-
    The datatables API allows you to plug-in your own tables (MySql) that have a relationship to a Apache Fineract core table. For example, you might want to add some extra client fields and record information about each of the clients' family members. Via the API you can create, read, update and delete entries for each 'plugged-in' table. The API checks for permission and for 'data scoping' (only data within the users' office hierarchy can be managed by the user).

    The Apache Fineract Reference App uses a JQuery plug-in called stretchydatatables (which in turn uses this datatables resource) to provide a pretty flexible CRUD (Create, Read, Update, Delete) User Interface.
  name: Data Tables
- description: This defines Entity-Datatable Check.
  name: Entity Data Table
- description: "Non-core reports can be added, updated and deleted."
  name: Reports
- description: |-
    Multiple Documents (a combination of a name, description and a file) may be attached to different Entities like Clients, Groups, Staff, Loans, Savings and Client Identifiers in the system

    Note: The currently allowed Entities are

    Clients: URL Pattern as clients
    Staff: URL Pattern as staff
    Loans: URL Pattern as loans
    Savings: URL Pattern as savings
    Client Identifiers: URL Pattern as client_identifiers
    Groups: URL Pattern as groups
  name: Documents
- description: External event configuration enables user to enable/disable event posting
    to downstream message channel
  name: External event configuration
- description: 'Hooks are a mechanism to trigger custom code on the occurence of events. '
  name: Hooks
- description: Instance mode changing API
  name: Instance Mode
- description: |-
    Batch jobs (also known as cron jobs on Unix-based systems) are a series of back-end jobs executed on a computer at a particular time defined in job's cron expression.

     At any point, you can view the list of batch jobs scheduled to run along with other details specific to each job. Manually you can execute the jobs at any point of time.

     The scheduler status can be either "Active" or "Standby". If the scheduler status is Active, it indicates that all batch jobs are running/ will run as per the specified schedule.If the scheduler status is Standby, it will ensure all scheduled batch runs are suspended.
  name: SCHEDULER JOB
- description: |-
    This resource allows you to create a scheduled job that runs a report and sents it by email to specified email addresses.

    The scheduled job can be configured to run once or on a regular basis (once a day, twice a week, etc)
  name: Report Mailing Jobs
- description: An API capability that allows client applications to verify authentication
    details using HTTP Basic Authentication.
  name: Authentication HTTP Basic
- description: External Asset Owners
  name: External Asset Owners
- description: |-
    Some MFI's span large regions where different branch offices might observe different holidays. They need the ability to define holidays for specific branch offices and be able to set the repayment rule to follow during those holidays.

    The reschedule of repayments to repaymentsRescheduledTo date during defined holidays is turned on/off by enabling/disabling reschedule-repayments-on-holidays in Global configurations.

    Allow Repayment transactions on a defined holidays is turned on/off by enabling/disabling allow-transactions-on-holiday in Global configurations.
  name: Holidays
- description: Application related configuration around viewing/updating the currencies
    permitted for use within the MFI.
  name: Currency
- description: Offices are used to model an MFIs structure. A hierarchical representation
    of offices is supported. There will always be at least one office (which represents
    the MFI or an MFIs head office). All subsequent offices added must have a parent
    office.
  name: Offices
- description: This defines the Provisioning Criteria
  name: Provisioning Criteria
- description: Allows you to model staff members. At present the key role of significance
    is whether this staff member is a loan officer or not.
  name: Staff
- description: Teller cash management which will allow an organization to manage their
    cash transactions at branches or head office more effectively.
  name: Teller Cash Management
- description: |-
    The days of the week that are workdays.

    Rescheduling of repayments when it falls on a non-working is turned on /off by enable/disable reschedule-future-repayments parameter in Global configurations

    Allow transactions on non-working days is configurable by enabling/disbaling the allow-transactions-on-non_workingday parameter in Global configurations.
  name: Working days
- description: |-
    Ability to be able to transfer monetary funds from one account to another.

    Note: At present only savings account to savings account transfers are supported.
  name: Account Transfers
- description: |-
    Standing instructions (or standing orders) refer to instructions a bank account holder ("the payer") gives to his or her bank to pay a set amount at regular intervals to another's ("the payee's") account.

    Note: At present only savings account to savings account and savings account to Loan account transfers are permitted.
  name: Standing Instructions
- description: The list capability of history can support pagination and sorting.
  name: Standing Instructions History
- description: Share accounts are instances of a praticular share product created
    for an individual. An application process around the creation of accounts is also
    supported.
  name: Share Account
- description: "Entity Field configuration API is a generic and extensible \nwherein\
    \ various entities and subentities can be related.\nAlso it gives the user an\
    \ ability to enable/disable fields,\nadd regular expression for validation"
  name: Entity Field Configuration
- description: |-
    Its typical for MFIs to add extra costs for their financial products. These are typically Fees or Penalties.

    A Charge on fineract platform is what we use to model both Fees and Penalties.

    At present we support defining charges for use with Client accounts and both loan and saving products.
  name: Charges
- description: "Address module is an optional module and can be configured into the\
    \ system by using GlobalConfiguration setting: enable-address. In order to activate\
    \ Address module, we need to enable the configuration, enable-address by setting\
    \ its value to true."
  name: Clients Address
- description: |-
    It is typical for MFI's to directly associate charges with an implicit Client account. These can be either fees or penalties

    Client Charges are client specific instances of Charges. Refer Charges for documentation of the various properties of a charge, Only additional properties ( specific to the context of a Charge being associated with a Client account) are described here
  name: Client Charges
- description: "Client Identifiers refer to documents that are used to uniquely identify\
    \ a customer\nEx: Drivers License, Passport, Ration card etc "
  name: Client Identifier
- description: "Client Transactions refer to transactions made directly against a\
    \ Client's internal account. Currently, these transactions are only created as\
    \ a result of charge payments/waivers. You are allowed to undo a transaction,\
    \ however you cannot explicitly create one. "
  name: Client Transaction
- description: |-
    Clients are people and businesses that have applied (or may apply) to an MFI for loans.

    Clients can be created in Pending or straight into Active state.
  name: Client
- description: "In lending agreements, collateral is a borrower's pledge of specific\
    \ property to a lender, to secure repayment of a loan. The collateral serves as\
    \ protection for a lender against a borrower's default - that is, any borrower\
    \ failing to pay the principal and interest under the terms of a loan obligation.\
    \ If a borrower does default on a loan (due to insolvency or other event), that\
    \ borrower forfeits (gives up) the property pledged as collateral - and the lender\
    \ then becomes the owner of the collateral"
  name: Loan Collateral
- description: Client Collateral Management is for managing collateral operations
  name: Client Collateral Management
- description: Collateral Management is for managing collateral operations
  name: Collateral Management
- description: Loan Collateral Management is for managing collateral operations
  name: Loan Collateral Management
- description: "Delinquency Range and Buckets management enables you to set up, fetch\
    \ and adjust Delinquency overdue ranges"
  name: Delinquency Range and Buckets Management
- description: "It lets you create, list, retrieve and upload the floating rates"
  name: Floating Rates
- description: Centers along with Groups are used to provided a distinctive banking
    distribution channel used in microfinance. Its common in areas such as Southern
    Asia to use Centers and Group as administrative units in grameen style lending.
    Typically groups will contain one to five people and centers themselves will be
    made of anywhere between 2-10 groups.
  name: Centers
- description: |-
    Groups are used to provide a distinctive banking distribution channel used in microfinances throughout the world. The Group is an administrative unit. It can contain as few as 5 people or as many as 40 depending on how its used.

    Different styles of group lending - Joint-Liability Group, Grameen Model (Center-Group), Self-Help Groups, Village/Communal Banks)
  name: Groups
- description: The slabs a.k.a interest bands are associated with Interest Rate Chart.
    These bands allow to define different interest rates for different deposit term
    periods.
  name: Interest Rate Slab (A.K.A interest bands)
- description: This defines an interest rate scheme that can be associated to a term
    deposit product. This will have a slab (band or range) of deposit periods and
    the associated interest rates applicable along with incentives for each band.
  name: Interest Rate Chart
- description: |-
    Its typical for MFIs to add extra costs for their loan products. They can be either Fees or Penalties.

    Loan Charges are instances of Charges and represent either fees and penalties for loan products. Refer Charges for documentation of the various properties of a charge, Only additional properties ( specific to the context of a Charge being associated with a Loan) are described here
  name: Loan Charges
- description: "Loan Term Variations provides the ability to change due dates, amounts\
    \ and number of instalments before loan approval."
  name: Loan Rescheduling
- description: "Capabilities include loan repayment's, interest waivers and the ability\
    \ to 'adjust' an existing transaction. An 'adjustment' of a transaction is really\
    \ a 'reversal' of existing transaction followed by creation of a new transaction\
    \ with the provided details."
  name: Loan Transactions
- description: "The API concept of loans models the loan application process and the\
    \ loan contract/monitoring process.\n\nField Descriptions\naccountNo\nThe account\
    \ no. associated with this loan. Is auto generated if not provided at loan application\
    \ creation time.\nexternalId\nA place to put an external reference for this loan\
    \ e.g. The ID another system uses.\nIf provided, it must be unique.\nfundId\n\
    Optional: For associating a loan with a given fund.\nloanOfficerId\nOptional:\
    \ For associating a loan with a given staff member who is a loan officer.\nloanPurposeId\n\
    Optional: For marking a loan with a given loan purpose option. Loan purposes are\
    \ configurable and can be setup by system admin through code/code values screens.\n\
    principal\nThe loan amount to be disbursed to through loan.\nloanTermFrequency\n\
    The length of loan term\nUsed like: loanTermFrequency loanTermFrequencyType\n\
    e.g. 12 Months\nloanTermFrequencyType\nThe loan term period to use. Used like:\
    \ loanTermFrequency loanTermFrequencyType\ne.g. 12 Months Example Values: 0=Days,\
    \ 1=Weeks, 2=Months, 3=Years\nnumberOfRepayments\nNumber of installments to repay.\n\
    Used like: numberOfRepayments Every repaymentEvery repaymentFrequencyType\ne.g.\
    \ 10 (repayments) Every 12 Weeks\nrepaymentEvery\nUsed like: numberOfRepayments\
    \ Every repaymentEvery repaymentFrequencyType\ne.g. 10 (repayments) Every 12 Weeks\n\
    repaymentFrequencyType\nUsed like: numberOfRepayments Every repaymentEvery repaymentFrequencyType\n\
    e.g. 10 (repayments) Every 12 Weeks \nExample Values: 0=Days, 1=Weeks, 2=Months\n\
    interestRatePerPeriod\nInterest Rate.\nUsed like: interestRatePerPeriod % interestRateFrequencyType\
    \ - interestType\ne.g. 12.0000% Per year - Declining Balance\ninterestRateFrequencyType\n\
    Used like: interestRatePerPeriod% interestRateFrequencyType - interestType\ne.g.\
    \ 12.0000% Per year - Declining Balance \nExample Values: 2=Per month, 3=Per year\n\
    graceOnPrincipalPayment\nOptional: Integer - represents the number of repayment\
    \ periods that grace should apply to the principal component of a repayment period.\n\
    graceOnInterestPayment\nOptional: Integer - represents the number of repayment\
    \ periods that grace should apply to the interest component of a repayment period.\
    \ Interest is still calculated but offset to later repayment periods.\ngraceOnInterestCharged\n\
    Optional: Integer - represents the number of repayment periods that should be\
    \ interest-free.\ngraceOnArrearsAgeing\nOptional: Integer - Used in Arrears calculation\
    \ to only take into account loans that are more than graceOnArrearsAgeing days\
    \ overdue.\ninterestChargedFromDate\nOptional: Date - The date from with interest\
    \ is to start being charged.\nexpectedDisbursementDate\nThe proposed disbursement\
    \ date of the loan so a proposed repayment schedule can be provided.\nsubmittedOnDate\n\
    The date the loan application was submitted by applicant.\nlinkAccountId\nThe\
    \ Savings Account id for linking with loan account for payments.\namortizationType\n\
    Example Values: 0=Equal principle payments, 1=Equal installments\ninterestType\n\
    Used like: interestRatePerPeriod% interestRateFrequencyType - interestType\ne.g.\
    \ 12.0000% Per year - Declining Balance \nExample Values: 0=Declining Balance,\
    \ 1=Flat\ninterestCalculationPeriodType\nExample Values: 0=Daily, 1=Same as repayment\
    \ period\nallowPartialPeriodInterestCalcualtion\nThis value will be supported\
    \ along with interestCalculationPeriodType as Same as repayment period to calculate\
    \ interest for partial periods. Example: Interest charged from is 5th of April\
    \ , Principal is 10000 and interest is 1% per month then the interest will be\
    \ (10000 * 1%)* (25/30) , it calculates for the month first then calculates exact\
    \ periods between start date and end date(can be a decimal)\ninArrearsTolerance\n\
    The amount that can be 'waived' at end of all loan payments because it is too\
    \ small to worry about.\nThis is also the tolerance amount assessed when determining\
    \ if a loan is in arrears.\ntransactionProcessingStrategyCode\nAn enumeration\
    \ that indicates the type of transaction processing strategy to be used. This\
    \ relates to functionality that is also known as Payment Application Logic.\n\
    A number of out of the box approaches exist, some are custom to specific MFIs,\
    \ some are more general and indicate the order in which payments are processed.\n\
    \nRefer to the Payment Application Logic / Transaction Processing Strategy section\
    \ in the appendix for more detailed overview of each available payment application\
    \ logic provided out of the box.\n\nList of current approaches:\n1 = Mifos style\
    \ (Similar to Old Mifos)\n2 = Heavensfamily (Custom MFI approach)\n3 = Creocore\
    \ (Custom MFI approach)\n4 = RBI (India)\n5 = Principal Interest Penalties Fees\
    \ Order\n6 = Interest Principal Penalties Fees Order\n7 = Early Payment Strategy\n\
    loanType\nTo represent different type of loans.\nAt present there are three type\
    \ of loans are supported. \nAvailable loan types:\nindividual: Loan given to individual\
    \ member\ngroup: Loan given to group as a whole\njlg: Joint liability group loan\
    \ given to members in a group on individual basis. JLG loan can be given to one\
    \ or more members in a group.\nrecalculationRestFrequencyDate\nSpecifies rest\
    \ frequency start date for interest recalculation. This date must be before or\
    \ equal to disbursement date\nrecalculationCompoundingFrequencyDate\nSpecifies\
    \ compounding frequency start date for interest recalculation. This date must\
    \ be equal to disbursement date"
  name: Loans
- description: A Loan product is a template that is used when creating a loan. Much
    of the template definition can be overridden during loan creation.
  name: Loan Products
- description: Notes API allows to enter notes for supported resources.
  name: Notes
- description: This defines the payment type
  name: Payment Type
- description: Repay with post dated checks
  name: repayment with post dated checks
- description: Fixed Deposit accounts are instances of a praticular fixed deposit
    product created. An application process around the creation of accounts is also
    supported.
  name: Fixed Deposit Account
- description: |-
    This is one of the advanced term deposit product offered by MFI's. The Fixed Deposit Products (aka FD) product offerings are modeled using this API.

    The FD products are deposit accounts which are held for a fixed term – like 1 year, 2 years etc.

    When creating fixed deposit accounts, the details from the fixed deposit product are used to auto fill details of the fixed deposit account application process.
  name: Fixed Deposit Product
- description: Transactions possible on a recurring deposit account.
  name: Recurring Deposit Account Transactions
- description: Recurring Deposit accounts are instances of a praticular recurring
    deposit product created. An application process around the creation of accounts
    is also supported.
  name: Recurring Deposit Account
- description: |-
    Recurring Deposits are a special kind of Term Deposits offered by MFI's. The Recurring Deposit Products (aka RD) product offerings are modeled using this API.

    Recurring Deposits help people with regular incomes to deposit a fixed amount every month (specified recurring frequency) into their Recurring Deposit account.

    When creating recurring deposit accounts, the details from the recurring deposit product are used to auto fill details of the recurring deposit account application process.
  name: Recurring Deposit Product
- description: |-
    Its typical for MFIs to add maintenance and operating charges. They can be either Fees or Penalties.

    Savings Charges are instances of Charges and represent either fees and penalties for savings products. Refer Charges for documentation of the various properties of a charge, Only additional properties ( specific to the context of a Charge being associated with a Savings account) are described here
  name: Savings Charges
- description: Savings accounts are instances of a particular savings product created
    for an individual or group. An application process around the creation of accounts
    is also supported.
  name: Savings Account
- description: |-
    An MFIs savings product offerings are modeled using this API.
    When creating savings accounts, the details from the savings product are used to auto fill details of the savings account application process.
  name: Savings Product
- description: "Search API allows to search scoped resources clients, loans and groups\
    \ on specified fields."
  name: Search API
- description: "A Loan product is a template that is used when creating a loan. Much\
    \ of the template definition can be overridden during loan creation.\n\nField\
    \ Descriptions\nname\nName associated with loan product on system.\nshortName\n\
    Short name associated with a loan product. \nAn abbreviated version of the name,\
    \ used in reports or menus where space is limited, such as Collection Sheets.\n\
    description\nFor providing helpful description of product offering.\nfundId\n\
    For associating a loan product with a given fund by default.\nincludeInBorrowerCycle\n\
    It is a flag, Used to denote whether the loans should include in loan cycle counter\
    \ or not.\nuseBorrowerCycle\nIt is a flag, Used to denote whether the loans should\
    \ depend on \nborrower loan cycle counter or not.\ncurrencyCode\nA three letter\
    \ ISO code of currency.\ndigitsAfterDecimal\nOverride the currency default value\
    \ for digitsAfterDecimal.\ninMultiplesOf\nOverride the default value for rounding\
    \ currency to multiples of value provided.\ninstallmentAmountInMultiplesOf\nOverride\
    \ the default value for rounding instalment amount to multiples of value provided.\n\
    principal\nThe loan amount to be disbursed to through loan.\nnumberOfRepayments\n\
    Number of installments to repay.\nUsed like: numberOfRepayments Every repaymentEvery\
    \ repaymentFrequencyType\ne.g. 10 (repayments) Every 12 Weeks\nrepaymentEvery\n\
    Used like: numberOfRepayments Every repaymentEvery repaymentFrequencyType\ne.g.\
    \ 10 (repayments) Every 12 Weeks\nrepaymentFrequencyType\nUsed like: numberOfRepayments\
    \ Every repaymentEvery repaymentFrequencyType\ne.g. 10 (repayments) Every 12 Weeks\
    \ \nExample Values: 0=Days, 1=Weeks, 2=Months\ninterestRatePerPeriod\nInterest\
    \ Rate.\nUsed like: interestRatePerPeriod % interestRateFrequencyType - interestType\n\
    e.g. 12.0000% Per year - Declining Balance\ninterestRateFrequencyType\nUsed like:\
    \ interestRatePerPeriod% interestRateFrequencyType - interestType\ne.g. 12.0000%\
    \ Per year - Declining Balance \nExample Values: 2=Per month, 3=Per year\namortizationType\n\
    Example Values: 0=Equal principle payments, 1=Equal installments\ninterestType\n\
    Used like: interestRatePerPeriod% interestRateFrequencyType - interestType\ne.g.\
    \ 12.0000% Per year - Declining Balance \nExample Values: 0=Declining Balance,\
    \ 1=Flat\ninterestCalculationPeriodType\nExample Values: 0=Daily, 1=Same as repayment\
    \ period\nallowPartialPeriodInterestCalcualtion\nThis value will be supported\
    \ along with interestCalculationPeriodType as Same as repayment period to calculate\
    \ interest for partial periods. Example: Interest charged from is 5th of April\
    \ , Principal is 10000 and interest is 1% per month then the interest will be\
    \ (10000 * 1%)* (25/30) , it calculates for the month first then calculates exact\
    \ periods between start date and end date(can be a decimal)\ninArrearsTolerance\n\
    The amount that can be 'waived' at end of all loan payments because it is too\
    \ small to worry about.\nThis is also the tolerance amount assessed when determining\
    \ if a loan is in arrears.\nprincipalVariationsForBorrowerCycle,interestRateVariationsForBorrowerCycle,\n\
    numberOfRepaymentVariationsForBorrowerCycle\nVariations for loan, based on borrower\
    \ cycle number\nminimumDaysBetweenDisbursalAndFirstRepayment\nThe minimum number\
    \ of days allowed between a Loan disbursal and its first repayment.\nprincipalThresholdForLastInstalment\n\
    Field represents percentage of current instalment principal amount for comparing\
    \ against principal outstanding to add another repayment instalment. If the outstanding\
    \ principal amount is less then calculated amount, remaining outstanding amount\
    \ will be added to current instalment. Default value for multi disburse loan is\
    \ 50% and non-multi disburse loan is 0%\ncanDefineInstallmentAmount\nif provided\
    \ as true, then fixed instalment amount can be provided from loan account.\ntransactionProcessingStrategyCode\n\
    An enumeration that indicates the type of transaction processing strategy to be\
    \ used. This relates to functionality that is also known as Payment Application\
    \ Logic.\nA number of out of the box approaches exist, some are custom to specific\
    \ MFIs, some are more general and indicate the order in which payments are processed.\n\
    \nRefer to the Payment Application Logic / Transaction Processing Strategy section\
    \ in the appendix for more detailed overview of each available payment application\
    \ logic provided out of the box.\n\nList of current approaches:\n1 = Mifos style\
    \ (Similar to Old Mifos)\n2 = Heavensfamily (Custom MFI approach)\n3 = Creocore\
    \ (Custom MFI approach)\n4 = RBI (India)\n5 = Principal Interest Penalties Fees\
    \ Order\n6 = Interest Principal Penalties Fees Order\n7 = Early Payment Strategy\n\
    graceOnPrincipalPayment\nOptional: Integer - represents the number of repayment\
    \ periods that grace should apply to the principal component of a repayment period.\n\
    graceOnInterestPayment\nOptional: Integer - represents the number of repayment\
    \ periods that grace should apply to the interest component of a repayment period.\
    \ Interest is still calculated but offset to later repayment periods.\ngraceOnInterestCharged\n\
    Optional: Integer - represents the number of repayment periods that should be\
    \ interest-free.\ngraceOnArrearsAgeing\nOptional: Integer - Used in Arrears calculation\
    \ to only take into account loans that are more than graceOnArrearsAgeing days\
    \ overdue.\noverdueDaysForNPA\nOptional: Integer - represents the maximum number\
    \ of days a Loan may be overdue before being classified as a NPA (non performing\
    \ asset)\naccountMovesOutOfNPAOnlyOnArrearsCompletion\nOptional: Boolean - if\
    \ provided as true, Loan Account moves out of NPA state only when all arrears\
    \ are cleared\naccountingRule\nSpecifies if accounting is enabled for the particular\
    \ product and the type of the accounting rule to be used Example Values:1=NONE,\
    \ 2=CASH_BASED, 3=ACCRUAL_PERIODIC, 4=ACCRUAL_UPFRONT\nisInterestRecalculationEnabled\n\
    It is a flag, Used to denote whether interest recalculation is enabled or disabled\
    \ for the particular product\ndaysInYearType\nSpecifies the number of days in\
    \ a year. \nExample Values:1=ACTUAL(Actual number of days in year), 360=360 DAYS,\
    \ 364=364 DAYS(52 WEEKS), 365=365 DAYS\ndaysInMonthType\nSpecifies the number\
    \ of days in a month. \nExample Values:1=ACTUAL(Actual number of days in month),\
    \ 30=30 DAYS\ninterestRecalculationCompoundingMethod\nSpecifies which amount portion\
    \ should be added to principal for interest recalculation. \nExample Values:0=NONE(Only\
    \ on principal), 1=INTEREST(Principal+Interest), 2=FEE(Principal+Fee), 3=FEE And\
    \ INTEREST (Principal+Fee+Interest)\nrescheduleStrategyMethod\nSpecifies what\
    \ action should perform on loan repayment schedule for advance payments. \nExample\
    \ Values:1=Reschedule next repayments, 2=Reduce number of installments, 3=Reduce\
    \ EMI amount\nrecalculationCompoundingFrequencyType\nSpecifies effective date\
    \ from which the compounding of interest or fee amounts will be considered in\
    \ recalculation on late payment.\nExample Values:1=Same as repayment period, 2=Daily,\
    \ 3=Weekly, 4=Monthly\nrecalculationCompoundingFrequencyInterval\nSpecifies compounding\
    \ frequency interval for interest recalculation.\nrecalculationCompoundingFrequencyDate\n\
    Specifies compounding frequency start date for interest recalculation.\nrecalculationRestFrequencyType\n\
    Specifies effective date from which the late or advanced payment amounts will\
    \ be considered in recalculation.\nExample Values:1=Same as repayment period,\
    \ 2=Daily, 3=Weekly, 4=Monthly\nrecalculationRestFrequencyInterval\nSpecifies\
    \ rest frequency interval for interest recalculation.\nrecalculationRestFrequencyDate\n\
    Specifies rest frequency start date for interest recalculation.\npreClosureInterestCalculationStrategy\n\
    Specifies applicable days for interest calculation on pre closure of a loan.\n\
    Example Values:1=Calculate till pre closure date, 2=Calculate till rest frequency\
    \ date\nisArrearsBasedOnOriginalSchedule\nIf Specified as true, arrears will be\
    \ identified based on original schedule.\nallowAttributeOverrides\nSpecifies if\
    \ select attributes may be overridden for individual loan accounts."
  name: Self Loan Products
- description: |-
    This resource allows you to run and receive output from pre-defined Apache Fineract reports.

    The default output is a JSON formatted "Generic Resultset". The Generic Resultset contains Column Heading as well as Data information. However, you can export to CSV format by simply adding "&exportCSV=true" to the end of your URL.

    If Pentaho reports have been pre-defined, they can also be run through this resource. Pentaho reports can return HTML, PDF or CSV formats.

    The Apache Fineract reference application uses a JQuery plugin called stretchyreporting which, itself, uses this reports resource to provide a pretty flexible reporting User Interface (UI).

    ARGUMENTS
    R_'parameter names' ... optional, No defaults The number and names of the parameters depend on the specific report and how it has been configured. R_officeId is an example parameter name.Note: the prefix R_ stands for ReportinggenericResultSetoptional, defaults to true If 'true' an optimised JSON format is returned suitable for tabular display of data. If 'false' a simple JSON format is returned. parameterType optional, The only valid value is 'true'. If any other value is provided the argument will be ignored Determines whether the request looks in the list of reports or the list of parameters for its data. Doesn't apply to Pentaho reports.exportCSV optional, The only valid value is 'true'. If any other value is provided the argument will be ignored Output will be delivered as a CSV file instead of JSON. Doesn't apply to Pentaho reports.output-type optional, Defaults to HTML. Valid Values are HTML, XLS, XSLX, CSV and PDF for html, Excel, Excel 2007+, CSV and PDF formats respectively.Only applies to Pentaho reports.locale optional Any valid locale Ex: en_US, en_IN, fr_FR etcOnly applies to Pentaho reports.
  name: Self Run Report
- description: Authenticates the credentials provided and returns the set roles and
    permissions allowed
  name: Self Authentication
- description: This defines the Tax Components
  name: Tax Components
- description: This defines the Tax Group
  name: Tax Group
- description: The Apache Fineract SPM API provides the ability to create custom surveys
    to collect social performance measurentment data or any additional questionnaire
    a financial institute want to collect.
  name: SPM API - LookUp Table
- description: |-
    User Generated Documents(alternatively, Templates) are used for end-user features such as custom user defined document generation (AKA UGD). They are based on {{ moustache }} templates. Think of them as a sort of built-in "mail merge" functionality.

    User Generated Documents (and other types of templates) can aggregate data from several Apache Fineract back-end API calls via mappers. Mappers can even access non-Apache Fineract REST services from other servers. UGDs can render such data in tables, show images, etc. TBD: Please have a look at some of the Example UGDs included in Apache Fineract (or the Wiki page, for now.).

    UGDs can be assigned to an entity like client or loan and be of a type like Document or SMS. The entity and type of a UGD is only there for the convenience of user agents (UIs), in order to know where to show UGDs for the user (i.e. which tab). The Template Engine back-end runner does not actually need this metadata.
  name: User Generated Documents
- description: |-
    This API enables management of password policy for user administration.

    There is no Apache Fineract functionality for creating a validation policy. The validation policies come pre-installed.

    Validation policies may be updated
  name: Password preferences
- description: |-
    An API capability to support management of application permissions for user administration.

    There is no Apache Fineract functionality for creating or deleting permissions. Permissions come pre-installed.

    Permissions are not updated, except in the case of enabling or disabling non-read transactions for Maker Checker functionality
  name: Permissions
- description: An API capability to support management of application roles for user
    administration.
  name: Roles
- description: An API capability to support administration of application users.
  name: Users
paths:
  /application.wadl:
    get:
      operationId: getWadl
      responses:
        default:
          content:
            application/vnd.sun.wadl+xml: {}
            application/xml: {}
          description: default response
  /application.wadl/{path}:
    get:
      operationId: getExternalGrammar
      parameters:
      - in: path
        name: path
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/xml: {}
          description: default response
  /v1/CreditBureauConfiguration:
    get:
      operationId: getCreditBureau
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Credit Bureau Configuration
  /v1/CreditBureauConfiguration/config/{organisationCreditBureauId}:
    get:
      operationId: getConfiguration
      parameters:
      - in: path
        name: organisationCreditBureauId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Credit Bureau Configuration
  /v1/CreditBureauConfiguration/configuration/{configurationId}:
    put:
      operationId: updateCreditBureauConfiguration
      parameters:
      - in: path
        name: configurationId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Credit Bureau Configuration
  /v1/CreditBureauConfiguration/configuration/{creditBureauId}:
    post:
      operationId: createCreditBureauConfiguration
      parameters:
      - in: path
        name: creditBureauId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Credit Bureau Configuration
  /v1/CreditBureauConfiguration/loanProduct:
    get:
      operationId: fetchLoanProducts
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Credit Bureau Configuration
  /v1/CreditBureauConfiguration/loanProduct/{loanProductId}:
    get:
      operationId: fetchMappingByLoanProductId
      parameters:
      - in: path
        name: loanProductId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Credit Bureau Configuration
  /v1/CreditBureauConfiguration/mappings:
    get:
      operationId: getCreditBureauLoanProductMapping
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Credit Bureau Configuration
    put:
      operationId: updateCreditBureauLoanProductMapping
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Credit Bureau Configuration
  /v1/CreditBureauConfiguration/mappings/{organisationCreditBureauId}:
    post:
      operationId: createCreditBureauLoanProductMapping
      parameters:
      - in: path
        name: organisationCreditBureauId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Credit Bureau Configuration
  /v1/CreditBureauConfiguration/organisationCreditBureau:
    get:
      operationId: getOrganisationCreditBureau
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Credit Bureau Configuration
    put:
      operationId: updateCreditBureau
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Credit Bureau Configuration
  /v1/CreditBureauConfiguration/organisationCreditBureau/{organisationCreditBureauId}:
    post:
      operationId: addOrganisationCreditBureau
      parameters:
      - in: path
        name: organisationCreditBureauId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Credit Bureau Configuration
  /v1/accountingrules:
    get:
      description: |-
        Returns the list of defined accounting rules.

        Example Requests:

        accountingrules
      operationId: retrieveAllAccountingRules
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetAccountRulesResponse'
          description: OK
      summary: Retrieve Accounting Rules
      tags:
      - Accounting Rules
    post:
      description: |-
        Define a new Accounting rule.

        Mandatory Fields
        name, officeId,
        accountToDebit OR debitTags,
        accountToCredit OR creditTags.

        Optional Fields
        description
      operationId: createAccountingRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostAccountingRulesRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostAccountingRulesResponse'
          description: OK
      summary: Create/Define a Accounting rule
      tags:
      - Accounting Rules
  /v1/accountingrules/template:
    get:
      description: |-
        This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:

        Field Defaults
        Allowed Value Lists
        Example Request:

        accountingrules/template
      operationId: retrieveTemplate_1
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountRulesTemplateResponse'
          description: OK
      summary: Retrieve Accounting Rule Details Template
      tags:
      - Accounting Rules
  /v1/accountingrules/{accountingRuleId}:
    delete:
      description: Deletes a Accounting rule.
      operationId: deleteAccountingRule
      parameters:
      - description: accountingRuleId
        in: path
        name: accountingRuleId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAccountingRulesResponse'
          description: OK
      summary: Delete a Accounting Rule
      tags:
      - Accounting Rules
    get:
      description: |-
        Returns the details of a defined Accounting rule.

        Example Requests:

        accountingrules/1
      operationId: retreiveAccountingRule
      parameters:
      - description: accountingRuleId
        in: path
        name: accountingRuleId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountingRuleData'
          description: OK
      summary: Retrieve a Accounting rule
      tags:
      - Accounting Rules
    put:
      description: Updates the details of a Accounting rule.
      operationId: updateAccountingRule
      parameters:
      - description: accountingRuleId
        in: path
        name: accountingRuleId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutAccountingRulesRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutAccountingRulesResponse'
          description: OK
      summary: Update a Accounting Rule
      tags:
      - Accounting Rules
  /v1/accountnumberformats:
    get:
      description: |-
        Example Requests:

        accountnumberformats


        accountnumberformats?fields=accountType,prefixType
      operationId: retrieveAll_3
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetAccountNumberFormatsIdResponse'
          description: OK
      summary: List Account number formats
      tags:
      - Account number format
    post:
      description: |-
        Note: You may associate a single Account number format for a given account type
        Mandatory Fields for Account number formats
        accountType
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostAccountNumberFormatsRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostAccountNumberFormatsResponse'
          description: OK
      summary: Create an Account number format
      tags:
      - Account number format
  /v1/accountnumberformats/template:
    get:
      description: |-
        This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:

        Field Defaults
        Allowed Value Lists

        Example Request:

        accountnumberformats/template
      operationId: retrieveTemplate_2
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountNumberFormatsResponseTemplate'
          description: OK
      summary: Retrieve Account number format Template
      tags:
      - Account number format
  /v1/accountnumberformats/{accountNumberFormatId}:
    delete:
      description: "Note: Account numbers created while this format was active would\
        \ remain unchanged."
      operationId: delete
      parameters:
      - description: accountNumberFormatId
        in: path
        name: accountNumberFormatId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAccountNumberFormatsResponse'
          description: OK
      summary: Delete an Account number format
      tags:
      - Account number format
    get:
      description: |-
        Example Requests:

        accountnumberformats/1


        accountnumberformats/1?template=true


        accountnumberformats/1?fields=accountType,prefixType
      operationId: retrieveOne
      parameters:
      - description: accountNumberFormatId
        in: path
        name: accountNumberFormatId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountNumberFormatsIdResponse'
          description: OK
      summary: Retrieve an Account number format
      tags:
      - Account number format
    put:
      operationId: update_1
      parameters:
      - description: accountNumberFormatId
        in: path
        name: accountNumberFormatId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutAccountNumberFormatsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutAccountNumberFormatsResponse'
          description: OK
      summary: Update an Account number format
      tags:
      - Account number format
  /v1/accounts/{type}:
    get:
      description: |-
        Lists share applications/accounts

        Example Requests:

        shareaccount
      operationId: retrieveAllAccounts_1
      parameters:
      - description: type
        in: path
        name: type
        required: true
        schema:
          type: string
      - description: offset
        in: query
        name: offset
        schema:
          type: integer
          format: int32
      - description: limit
        in: query
        name: limit
        schema:
          type: integer
          format: int32
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountsTypeResponse'
          description: OK
      summary: List share applications/accounts
      tags:
      - Share Account
    post:
      description: |-
        Submits new share application

        Mandatory Fields: clientId, productId, submittedDate, savingsAccountId, requestedShares, applicationDate

        Optional Fields: accountNo, externalId

        Inherited from Product (if not provided): minimumActivePeriod, minimumActivePeriodFrequencyType, lockinPeriodFrequency, lockinPeriodFrequencyType
      operationId: createAccount
      parameters:
      - description: type
        in: path
        name: type
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostAccountsTypeRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostAccountsTypeResponse'
          description: OK
      summary: Submit new share application
      tags:
      - Share Account
  /v1/accounts/{type}/downloadtemplate:
    get:
      operationId: getSharedAccountsTemplate
      parameters:
      - in: query
        name: officeId
        schema:
          type: integer
          format: int64
      - in: query
        name: dateFormat
        schema:
          type: string
      - description: type
        in: path
        name: type
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/vnd.ms-excel: {}
          description: default response
      tags:
      - Share Account
  /v1/accounts/{type}/template:
    get:
      description: |-
        This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:

        Field Defaults
        Allowed Value Lists

        Example Requests:

        accounts/share/template?clientId=1


        accounts/share/template?clientId=1&productId=1
      operationId: template_7
      parameters:
      - description: type
        in: path
        name: type
        required: true
        schema:
          type: string
      - description: clientId
        in: query
        name: clientId
        schema:
          type: integer
          format: int64
      - description: productId
        in: query
        name: productId
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountsTypeTemplateResponse'
          description: OK
      summary: Retrieve Share Account Template
      tags:
      - Share Account
  /v1/accounts/{type}/uploadtemplate:
    post:
      operationId: postSharedAccountsTemplate
      parameters:
      - description: type
        in: path
        name: type
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadRequest'
        description: Upload shared accounts template
      responses:
        default:
          content:
            '*/*':
              schema:
                type: string
          description: default response
      tags:
      - Share Account
  /v1/accounts/{type}/{accountId}:
    get:
      description: |-
        Retrieves a share application/account

        Example Requests :

        shareaccount/1
      operationId: retrieveAccount
      parameters:
      - description: accountId
        in: path
        name: accountId
        required: true
        schema:
          type: integer
          format: int64
      - description: type
        in: path
        name: type
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountsTypeAccountIdResponse'
          description: OK
      summary: Retrieve a share application/account
      tags:
      - Share Account
    post:
      description: |-
        Approve share application:

        Approves share application so long as its in 'Submitted and pending approval' state.

        Undo approval share application:

        Will move 'approved' share application back to 'Submitted and pending approval' state.

        Reject share application:

        Rejects share application so long as its in 'Submitted and pending approval' state.

        Activate a share account:

        Results in an approved share application being converted into an 'active' share account.

        Close a share account:

        Results in an Activated share application being converted into an 'closed' share account.

        closedDate is closure date of share account

        Mandatory Fields: dateFormat,locale,closedDate

        Apply additional shares on a share account:

        requestedDate is requsted date of share purchase

        requestedShares is number of shares to be purchase

        Mandatory Fields: dateFormat,locale,requestedDate, requestedShares

        Approve additional shares request on a share account

        requestedShares is Share purchase transaction ids

        Mandatory Fields: requestedShares

        Reject additional shares request on a share account:

        requestedShares is Share purchase transaction ids

        Mandatory Fields: requestedShares

        Redeem shares on a share account:

        Results redeem some/all shares from share account.

        requestedDate is requsted date of shares redeem

        requestedShares is number of shares to be redeemed

        Mandatory Fields: dateFormat,locale,requestedDate,requestedShares

        Showing request/response for 'Reject additional shares request on a share account'

        For more info visit this link - https://fineract.apache.org/legacy-docs/apiLive.htm#shareaccounts
      operationId: handleCommands_2
      parameters:
      - description: type
        in: path
        name: type
        required: true
        schema:
          type: string
      - description: accountId
        in: path
        name: accountId
        required: true
        schema:
          type: integer
          format: int64
      - description: command
        in: query
        name: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostAccountsTypeAccountIdRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostAccountsTypeAccountIdResponse'
          description: OK
      summary: Approve share application | Undo approval share application | Reject
        share application | Activate a share account | Close a share account | Apply
        additional shares on a share account | Approve additional shares request on
        a share account | Reject additional shares request on a share account | Redeem
        shares on a share account
      tags:
      - Share Account
    put:
      description: "Share application can only be modified when in 'Submitted and\
        \ pending approval' state. Once the application is approved, the details cannot\
        \ be changed using this method. Specific api endpoints will be created to\
        \ allow change of interest detail such as rate, compounding period, posting\
        \ period etc"
      operationId: updateAccount
      parameters:
      - description: type
        in: path
        name: type
        required: true
        schema:
          type: string
      - description: accountId
        in: path
        name: accountId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutAccountsTypeAccountIdRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutAccountsTypeAccountIdResponse'
          description: OK
      summary: Modify a share application
      tags:
      - Share Account
  /v1/accounttransfers:
    get:
      description: |-
        Lists account's transfers

        Example Requests:



        accounttransfers
      operationId: retrieveAll_18
      parameters:
      - description: externalId
        in: query
        name: externalId
        schema:
          type: string
      - description: offset
        in: query
        name: offset
        schema:
          type: integer
          format: int32
      - example: limit
        in: query
        name: limit
        schema:
          type: integer
          format: int32
      - description: orderBy
        in: query
        name: orderBy
        schema:
          type: string
      - description: sortOrder
        in: query
        name: sortOrder
        schema:
          type: string
      - description: accountDetailId
        in: query
        name: accountDetailId
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountTransfersResponse'
          description: OK
      summary: List account transfers
      tags:
      - Account Transfers
    post:
      description: Ability to create new receiveTransfer of monetary funds from one account
        to another.
      operationId: create_4
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostAccountTransfersRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostAccountTransfersResponse'
          description: OK
      summary: Create new Transfer
      tags:
      - Account Transfers
  /v1/accounttransfers/refundByTransfer:
    post:
      description: Ability to refund an active loan by transferring to a savings account.
      operationId: templateRefundByTransferPost
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostAccountTransfersRefundByTransferRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostAccountTransfersRefundByTransferResponse'
          description: OK
      summary: Refund of an Active Loan by Transfer
      tags:
      - Account Transfers
  /v1/accounttransfers/template:
    get:
      description: |-
        This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:



        Field Defaults

        Allowed Value Lists

        Example Requests:



        accounttransfers/template?fromAccountType=2&fromOfficeId=1



        accounttransfers/template?fromAccountType=2&fromOfficeId=1&fromClientId=1



        accounttransfers/template?fromClientId=1&fromAccountType=2&fromAccountId=1
      operationId: template_5
      parameters:
      - description: fromOfficeId
        in: query
        name: fromOfficeId
        schema:
          type: integer
          format: int64
      - description: fromClientId
        in: query
        name: fromClientId
        schema:
          type: integer
          format: int64
      - description: fromAccountId
        in: query
        name: fromAccountId
        schema:
          type: integer
          format: int64
      - description: fromAccountType
        in: query
        name: fromAccountType
        schema:
          type: integer
          format: int32
      - description: toOfficeId
        in: query
        name: toOfficeId
        schema:
          type: integer
          format: int64
      - description: toClientId
        in: query
        name: toClientId
        schema:
          type: integer
          format: int64
      - description: toAccountId
        in: query
        name: toAccountId
        schema:
          type: integer
          format: int64
      - description: toAccountType
        in: query
        name: toAccountType
        schema:
          type: integer
          format: int32
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountTransfersTemplateResponse'
          description: OK
      summary: Retrieve Account Transfer Template
      tags:
      - Account Transfers
  /v1/accounttransfers/templateRefundByTransfer:
    get:
      description: |-
        Retrieves Refund of an Active Loan by Transfer TemplateExample Requests :



        accounttransfers/templateRefundByTransfer?fromAccountId=2&fromAccountType=1& toAccountId=1&toAccountType=2&toClientId=1&toOfficeId=1
      operationId: templateRefundByTransfer
      parameters:
      - description: fromOfficeId
        in: query
        name: fromOfficeId
        schema:
          type: integer
          format: int64
      - description: fromClientId
        in: query
        name: fromClientId
        schema:
          type: integer
          format: int64
      - description: fromAccountId
        in: query
        name: fromAccountId
        schema:
          type: integer
          format: int64
      - description: fromAccountType
        in: query
        name: fromAccountType
        schema:
          type: integer
          format: int32
      - description: toOfficeId
        in: query
        name: toOfficeId
        schema:
          type: integer
          format: int64
      - description: toClientId
        in: query
        name: toClientId
        schema:
          type: integer
          format: int64
      - description: toAccountId
        in: query
        name: toAccountId
        schema:
          type: integer
          format: int64
      - description: toAccountType
        in: query
        name: toAccountType
        schema:
          type: integer
          format: int32
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountTransfersTemplateRefundByTransferResponse'
          description: OK
      summary: Retrieve Refund of an Active Loan by Transfer Template
      tags:
      - Account Transfers
  /v1/accounttransfers/{transferId}:
    get:
      description: |-
        Retrieves account transfer

        Example Requests :



        accounttransfers/1
      operationId: retrieveOne_9
      parameters:
      - description: transferId
        in: path
        name: transferId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountTransfersPageItems'
          description: OK
      summary: Retrieve account receiveTransfer
      tags:
      - Account Transfers
  /v1/adhocquery:
    get:
      operationId: retrieveAll_2
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - AdhocQuery Api
    post:
      operationId: createAdHocQuery
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - AdhocQuery Api
  /v1/adhocquery/template:
    get:
      operationId: template
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - AdhocQuery Api
  /v1/adhocquery/{adHocId}:
    delete:
      operationId: deleteAdHocQuery
      parameters:
      - description: adHocId
        in: path
        name: adHocId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - AdhocQuery Api
    get:
      operationId: retrieveAdHocQuery
      parameters:
      - description: adHocId
        in: path
        name: adHocId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - AdhocQuery Api
    put:
      operationId: update
      parameters:
      - description: adHocId
        in: path
        name: adHocId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - AdhocQuery Api
  /v1/audits:
    get:
      description: |-
        Get a 200 list of audits that match the criteria supplied and sorted by audit id in descending order, and are within the requestors' data scope. Also it supports pagination and sorting

        Example Requests:

        audits

        audits?fields=madeOnDate,maker,processingResult

        audits?makerDateTimeFrom=2013-03-25 08:00:00&makerDateTimeTo=2013-04-04 18:00:00

        audits?officeId=1

        audits?officeId=1&includeJson=true
      operationId: retrieveAuditEntries
      parameters:
      - description: actionName
        in: query
        name: actionName
        schema:
          type: string
      - description: entityName
        in: query
        name: entityName
        schema:
          type: string
      - description: resourceId
        in: query
        name: resourceId
        schema:
          type: integer
          format: int64
      - description: makerId
        in: query
        name: makerId
        schema:
          type: integer
          format: int64
      - description: makerDateTimeFrom
        in: query
        name: makerDateTimeFrom
        schema:
          type: string
      - description: makerDateTimeTo
        in: query
        name: makerDateTimeTo
        schema:
          type: string
      - description: checkerId
        in: query
        name: checkerId
        schema:
          type: integer
          format: int64
      - description: checkerDateTimeFrom
        in: query
        name: checkerDateTimeFrom
        schema:
          type: string
      - description: checkerDateTimeTo
        in: query
        name: checkerDateTimeTo
        schema:
          type: string
      - description: processingResult
        in: query
        name: processingResult
        schema:
          type: integer
          format: int32
      - description: officeId
        in: query
        name: officeId
        schema:
          type: integer
          format: int32
      - description: groupId
        in: query
        name: groupId
        schema:
          type: integer
          format: int32
      - description: clientId
        in: query
        name: clientId
        schema:
          type: integer
          format: int32
      - description: loanid
        in: query
        name: loanid
        schema:
          type: integer
          format: int32
      - description: savingsAccountId
        in: query
        name: savingsAccountId
        schema:
          type: integer
          format: int32
      - description: paged
        in: query
        name: paged
        schema:
          type: boolean
      - description: offset
        in: query
        name: offset
        schema:
          type: integer
          format: int32
      - description: limit
        in: query
        name: limit
        schema:
          type: integer
          format: int32
      - description: orderBy
        in: query
        name: orderBy
        schema:
          type: string
      - description: sortOrder
        in: query
        name: sortOrder
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetMakerCheckerResponse'
          description: OK
      summary: List Audits
      tags:
      - Audits
  /v1/audits/searchtemplate:
    get:
      description: |-
        This is a convenience resource. It can be useful when building an Audit Search UI. "appUsers" are data scoped to the office/branch the requestor is associated with.

        Example Requests:

        audits/searchtemplate
        audits/searchtemplate?fields=actionNames
      operationId: retrieveAuditSearchTemplate
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMakerCheckersSearchTemplateResponse'
          description: OK
      summary: Audit Search Template
      tags:
      - Audits
  /v1/audits/{auditId}:
    get:
      description: |-
        Example Requests:

        audits/20
        audits/20?fields=madeOnDate,maker,processingResult
      operationId: retrieveAuditEntry
      parameters:
      - description: auditId
        in: path
        name: auditId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMakerCheckerResponse'
          description: OK
      summary: Retrieve an Audit Entry
      tags:
      - Audits
  /v1/authentication:
    post:
      description: Authenticates the credentials provided and returns the set roles
        and permissions allowed.
      operationId: authenticate
      parameters:
      - in: query
        name: returnClientList
        schema:
          type: boolean
          default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostAuthenticationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostAuthenticationResponse'
          description: OK
        "400":
          description: Unauthenticated. Please login
      summary: Verify authentication
      tags:
      - Authentication HTTP Basic
  /v1/batches:
    post:
      description: |-
        The Apache Fineract Batch API is also capable of executing all the requests in a single transaction, by setting a Query Parameter, "enclosingTransaction=true". So, if one or more of the requests in a batch returns an erroneous response all of the Data base transactions made by other successful requests will be rolled back.

        If there has been a rollback in a transaction then a single response will be provided, with a '400' status code and a body consisting of the error details of the first failed request.
      operationId: handleBatchRequests
      parameters:
      - description: enclosingTransaction
        in: query
        name: enclosingTransaction
        schema:
          type: boolean
          default: false
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BatchRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BatchResponse'
          description: Success
      summary: Batch requests in a single transaction
      tags:
      - Batch API
  /v1/businessdate:
    get:
      operationId: getBusinessDates
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessDateResponse'
          description: OK
      summary: List all business dates
      tags:
      - Business Date Management
    post:
      operationId: updateBusinessDate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessDateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessDateResponse'
          description: OK
      summary: Update Business Date
      tags:
      - Business Date Management
  /v1/businessdate/{type}:
    get:
      operationId: getBusinessDate
      parameters:
      - description: type
        in: path
        name: type
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessDateResponse'
          description: OK
      summary: Retrieve a specific Business date
      tags:
      - Business Date Management
  /v1/caches:
    get:
      description: |-
        Returns the list of caches.

        Example Requests:

        caches
      operationId: retrieveAll_4
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetCachesResponse'
          description: OK
      summary: Retrieve Cache Types
      tags:
      - Cache
    put:
      description: Switches the cache to chosen one.
      operationId: switchCache
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutCachesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutCachesResponse'
          description: OK
      summary: Switch Cache
      tags:
      - Cache
  /v1/cashiers:
    get:
      operationId: getCashierData
      parameters:
      - in: query
        name: officeId
        schema:
          type: integer
          format: int64
      - in: query
        name: tellerId
        schema:
          type: integer
          format: int64
      - in: query
        name: staffId
        schema:
          type: integer
          format: int64
      - in: query
        name: date
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Cashiers
  /v1/cashiersjournal:
    get:
      operationId: getJournalData_1
      parameters:
      - in: query
        name: officeId
        schema:
          type: integer
          format: int64
      - in: query
        name: tellerId
        schema:
          type: integer
          format: int64
      - in: query
        name: cashierId
        schema:
          type: integer
          format: int64
      - in: query
        name: dateRange
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Cashier Journals
  /v1/centers:
    get:
      description: |-
        The default implementation supports pagination and sorting with the default pagination size set to 200 records. The parameter limit with description -1 will return all entries.

        Example Requests:



        centers



        centers?fields=name,officeName,joinedDate



        centers?offset=10&limit=50



        centers?orderBy=name&sortOrder=DESC
      operationId: retrieveAll_23
      parameters:
      - description: officeId
        in: query
        name: officeId
        schema:
          type: integer
          format: int64
      - description: staffId
        in: query
        name: staffId
        schema:
          type: integer
          format: int64
      - description: externalId
        in: query
        name: externalId
        schema:
          type: string
      - description: name
        in: query
        name: name
        schema:
          type: string
      - description: underHierarchy
        in: query
        name: underHierarchy
        schema:
          type: string
      - description: paged
        in: query
        name: paged
        schema:
          type: boolean
      - description: offset
        in: query
        name: offset
        schema:
          type: integer
          format: int32
      - description: limit
        in: query
        name: limit
        schema:
          type: integer
          format: int32
      - description: orderBy
        in: query
        name: orderBy
        schema:
          type: string
      - description: sortOrder
        in: query
        name: sortOrder
        schema:
          type: string
      - description: meetingDate
        in: query
        name: meetingDate
        schema:
          $ref: '#/components/schemas/DateParam'
      - description: dateFormat
        in: query
        name: dateFormat
        schema:
          type: string
      - description: locale
        in: query
        name: locale
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCentersResponse'
          description: OK
      summary: List Centers
      tags:
      - Centers
    post:
      description: |-
        Creates a Center

        Mandatory Fields: name, officeId, active, activationDate (if active=true)

        Optional Fields: externalId, staffId, groupMembers
      operationId: create_7
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostCentersRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostCentersResponse'
          description: OK
      summary: Create a Center
      tags:
      - Centers
  /v1/centers/downloadtemplate:
    get:
      operationId: getCentersTemplate
      parameters:
      - in: query
        name: officeId
        schema:
          type: integer
          format: int64
      - in: query
        name: staffId
        schema:
          type: integer
          format: int64
      - in: query
        name: dateFormat
        schema:
          type: string
      responses:
        default:
          content:
            application/vnd.ms-excel: {}
          description: default response
      tags:
      - Centers
  /v1/centers/template:
    get:
      description: |-
        Retrieves a Center Template

        Example Requests:



        centers/template



        centers/template?officeId=2
      operationId: retrieveTemplate_6
      parameters:
      - description: command
        in: query
        name: command
        schema:
          type: string
      - description: officeId
        in: query
        name: officeId
        schema:
          type: integer
          format: int64
      - description: staffInSelectedOfficeOnly
        in: query
        name: staffInSelectedOfficeOnly
        schema:
          type: boolean
          default: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCentersTemplateResponse'
          description: OK
      summary: Retrieve a Center Template
      tags:
      - Centers
  /v1/centers/uploadtemplate:
    post:
      operationId: postCentersTemplate
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadRequest'
        description: Upload centers template
      responses:
        default:
          content:
            '*/*':
              schema:
                type: string
          description: default response
      tags:
      - Centers
  /v1/centers/{centerId}:
    delete:
      description: "A Center can be deleted if it is in pending state and has no association\
        \ - groups, loans or savings"
      operationId: delete_11
      parameters:
      - description: centerId
        in: path
        name: centerId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteCentersCenterIdResponse'
          description: OK
      summary: Delete a Center
      tags:
      - Centers
    get:
      description: |-
        Retrieves a Center

        Example Requests:



        centers/1



        centers/1?associations=groupMembers
      operationId: retrieveOne_14
      parameters:
      - description: centerId
        in: path
        name: centerId
        required: true
        schema:
          type: integer
          format: int64
      - description: staffInSelectedOfficeOnly
        in: query
        name: staffInSelectedOfficeOnly
        schema:
          type: boolean
          default: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCentersCenterIdResponse'
          description: OK
      summary: Retrieve a Center
      tags:
      - Centers
    post:
      description: |-
        Activate a Center:

        Centers can be created in a Pending state. This API exists to enable center activation. If the center happens to be already active, this API will result in an error.

        Close a Center:

        Centers can be closed if they don't have any non-closed groups or saving accounts. If the Center has any active groups or savings accounts, this API will result in an error.

        Associate Groups:

        This API allows associating existing groups to a center. The groups are listed from the office to which the center is associated. If group(s) is already associated with a center, this API will result in an error.

        Disassociate Groups:

        This API allows to disassociate groups from a center.

        Generate Collection Sheet:

        This Api retrieves repayment details of all jlg loans under a center as on a specified meeting date.

        Save Collection Sheet:

        This Api allows the loan officer to perform bulk repayments of JLG loans for a center on a given meeting date.

        Showing Request/Response for Close a Center
      operationId: activate_2
      parameters:
      - description: centerId
        in: path
        name: centerId
        required: true
        schema:
          type: integer
          format: int64
      - description: command
        in: query
        name: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostCentersCenterIdRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostCentersCenterIdResponse'
          description: OK
      summary: Activate a Center | Generate Collection Sheet | Save Collection Sheet
        | Close a Center | Associate Groups | Disassociate Groups
      tags:
      - Centers
    put:
      description: Updates a Center
      operationId: update_12
      parameters:
      - description: centerId
        in: path
        name: centerId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutCentersCenterIdRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutCentersCenterIdResponse'
          description: OK
      summary: Update a Center
      tags:
      - Centers
  /v1/centers/{centerId}/accounts:
    get:
      description: |-
        An example of how a savings summary for a Center can be provided. This is requested in a specific use case of the reference application.

        It is quite reasonable to add resources like this to simplify User Interface development.



        Example Requests:



        centers/9/accounts
      operationId: retrieveGroupAccount
      parameters:
      - description: centerId
        in: path
        name: centerId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCentersCenterIdAccountsResponse'
          description: OK
      summary: Retrieve Center accounts overview
      tags:
      - Centers
  /v1/charges:
    get:
      description: |-
        Returns the list of defined charges.

        Example Requests:

        charges
      operationId: retrieveAllCharges
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetChargesResponse'
          description: OK
      summary: Retrieve Charges
      tags:
      - Charges
    post:
      description: Define a new charge that can later be associated with loans and
        savings through their respective product definitions or directly on each account
        instance.
      operationId: createCharge
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostChargesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostChargesResponse'
          description: OK
      summary: Create/Define a Charge
      tags:
      - Charges
  /v1/charges/template:
    get:
      description: |
        This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:

        Field Defaults
        Allowed description Lists
        Example Request:

        charges/template
      operationId: retrieveNewChargeDetails
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetChargesTemplateResponse'
          description: OK
      summary: Retrieve Charge Template
      tags:
      - Charges
  /v1/charges/{chargeId}:
    delete:
      description: Deletes a Charge.
      operationId: deleteCharge
      parameters:
      - description: chargeId
        in: path
        name: chargeId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteChargesChargeIdResponse'
          description: OK
      summary: Delete a Charge
      tags:
      - Charges
    get:
      description: |-
        Returns the details of a defined Charge.

        Example Requests:

        charges/1
      operationId: retrieveCharge
      parameters:
      - description: chargeId
        in: path
        name: chargeId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetChargesResponse'
          description: OK
      summary: Retrieve a Charge
      tags:
      - Charges
    put:
      description: Updates the details of a Charge.
      operationId: updateCharge
      parameters:
      - description: chargeId
        in: path
        name: chargeId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutChargesChargeIdRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutChargesChargeIdResponse'
          description: OK
      summary: Update a Charge
      tags:
      - Charges
  /v1/client/addresses/template:
    get:
      operationId: getAddressesTemplate
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Clients Address
  /v1/client/{clientid}/addresses:
    get:
      description: |-
        Example Requests:

        client/1/addresses


        clients/1/addresses?status=false,true&&type=1,2,3
      operationId: getAddresses_1
      parameters:
      - description: status
        in: query
        name: status
        schema:
          type: string
      - description: type
        in: query
        name: type
        schema:
          type: integer
          format: int64
      - description: clientId
        in: path
        name: clientid
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetClientClientIdAddressesResponse'
          description: OK
      summary: List all addresses for a Client
      tags:
      - Clients Address
    post:
      description: "Mandatory Fields : \ntype and clientId"
      operationId: addClientAddress
      parameters:
      - description: type
        in: query
        name: type
        schema:
          type: integer
          format: int64
      - description: clientId
        in: path
        name: clientid
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostClientClientIdAddressesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostClientClientIdAddressesResponse'
          description: OK
      summary: Create an address for a Client
      tags:
      - Clients Address
    put:
      description: |-
        All the address fields can be updated by using update client address API

        Mandatory Fields
        type and addressId
      operationId: updateClientAddress
      parameters:
      - description: clientId
        in: path
        name: clientid
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutClientClientIdAddressesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutClientClientIdAddressesResponse'
          description: OK
      summary: Update an address for a Client
      tags:
      - Clients Address
  /v1/clients:
    get:
      description: |-
        The list capability of clients can support pagination and sorting.

        Example Requests:

        clients

        clients?fields=displayName,officeName,timeline

        clients?offset=10&limit=50

        clients?orderBy=displayName&sortOrder=DESC
      operationId: retrieveAll_21
      parameters:
      - description: officeId
        in: query
        name: officeId
        schema:
          type: integer
          format: int64
      - description: externalId
        in: query
        name: externalId
        schema:
          type: string
      - description: displayName
        in: query
        name: displayName
        schema:
          type: string
      - description: firstName
        in: query
        name: firstName
        schema:
          type: string
      - description: lastName
        in: query
        name: lastName
        schema:
          type: string
      - description: status
        in: query
        name: status
        schema:
          type: string
      - description: underHierarchy
        in: query
        name: underHierarchy
        schema:
          type: string
      - description: offset
        in: query
        name: offset
        schema:
          type: integer
          format: int32
      - description: limit
        in: query
        name: limit
        schema:
          type: integer
          format: int32
      - description: orderBy
        in: query
        name: orderBy
        schema:
          type: string
      - description: sortOrder
        in: query
        name: sortOrder
        schema:
          type: string
      - description: orphansOnly
        in: query
        name: orphansOnly
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetClientsResponse'
          description: OK
      summary: List Clients
      tags:
      - Client
    post:
      description: |-
        Note:

        1. You can enter either:firstname/middlename/lastname - for a person (middlename is optional) OR fullname - for a business or organisation (or person known by one name).

        2.If address is enable(enable-address=true), then additional field called address has to be passed.

        Mandatory Fields: firstname and lastname OR fullname, officeId, active=true and activationDate OR active=false, if(address enabled) address

        Optional Fields: groupId, externalId, accountNo, staffId, mobileNo, savingsProductId, genderId, clientTypeId, clientClassificationId
      operationId: create_6
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostClientsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostClientsResponse'
          description: OK
      summary: Create a Client
      tags:
      - Client
  /v1/clients/downloadtemplate:
    get:
      operationId: getClientTemplate
      parameters:
      - in: query
        name: legalFormType
        schema:
          type: string
      - in: query
        name: officeId
        schema:
          type: integer
          format: int64
      - in: query
        name: staffId
        schema:
          type: integer
          format: int64
      - in: query
        name: dateFormat
        schema:
          type: string
      responses:
        default:
          content:
            application/vnd.ms-excel: {}
          description: default response
      tags:
      - Client
  /v1/clients/external-id/{clientExternalId}/transactions:
    get:
      description: |-
        The list capability of client transaction can support pagination.

        Example Requests:

        clients/external-id/7dd80a7c-ycba-a446-t378-91eb6f53e854/transactions

        clients/external-id/7dd80a7c-ycba-a446-t378-91eb6f53e854/transactions?offset=10&limit=50
      operationId: retrieveAllClientTransactions_1
      parameters:
      - description: clientExternalId
        in: path
        name: clientExternalId
        required: true
        schema:
          type: string
      - description: offset
        in: query
        name: offset
        schema:
          type: integer
          format: int32
      - description: limit
        in: query
        name: limit
        schema:
          type: integer
          format: int32
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetClientsClientIdTransactionsResponse'
          description: OK
      summary: List Client Transactions
      tags:
      - Client Transaction
  /v1/clients/external-id/{clientExternalId}/transactions/external-id/{transactionExternalId}:
    get:
      description: |-
        Example Requests:
        clients/external-id/7dd80a7c-ycba-a446-t378-91eb6f53e854/transactions/external-id/7dd80a7c-ycba-a446-t378-91eb6f53e854


        clients/external-id/7dd80a7c-ycba-a446-t378-91eb6f53e854/transactions/external-id/7dd80a7c-ycba-a446-t378-91eb6f53e854?fields=id,officeName
      operationId: retrieveClientTransaction_3
      parameters:
      - description: clientExternalId
        in: path
        name: clientExternalId
        required: true
        schema:
          type: string
      - description: transactionExternalId
        in: path
        name: transactionExternalId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetClientsClientIdTransactionsTransactionIdResponse'
          description: OK
      summary: Retrieve a Client Transaction
      tags:
      - Client Transaction
    post:
      description: Undoes a Client Transaction
      operationId: undoClientTransaction_3
      parameters:
      - description: clientExternalId
        in: path
        name: clientExternalId
        required: true
        schema:
          type: string
      - description: transactionExternalId
        in: path
        name: transactionExternalId
        required: true
        schema:
          type: string
      - description: command
        in: query
        name: command
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostClientsClientIdTransactionsTransactionIdResponse'
          description: OK
      summary: Undo a Client Transaction
      tags:
      - Client Transaction
  /v1/clients/external-id/{clientExternalId}/transactions/{transactionId}:
    get:
      description: |-
        Example Requests:
        clients/external-id/7dd80a7c-ycba-a446-t378-91eb6f53e854/transactions/1


        clients/external-id/7dd80a7c-ycba-a446-t378-91eb6f53e854/transactions/1?fields=id,officeName
      operationId: retrieveClientTransaction_2
      parameters:
      - description: clientExternalId
        in: path
        name: clientExternalId
        required: true
        schema:
          type: string
      - description: transactionId
        in: path
        name: transactionId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetClientsClientIdTransactionsTransactionIdResponse'
          description: OK
      summary: Retrieve a Client Transaction
      tags:
      - Client Transaction
    post:
      description: Undoes a Client Transaction
      operationId: undoClientTransaction_2
      parameters:
      - description: clientExternalId
        in: path
        name: clientExternalId
        required: true
        schema:
          type: string
      - description: transactionId
        in: path
        name: transactionId
        required: true
        schema:
          type: integer
          format: int64
      - description: command
        in: query
        name: command
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostClientsClientIdTransactionsTransactionIdResponse'
          description: OK
      summary: Undo a Client Transaction
      tags:
      - Client Transaction
  /v1/clients/external-id/{externalId}:
    delete:
      description: "If a client is in Pending state, you are allowed to Delete it.\
        \ The delete is a 'hard delete' and cannot be recovered from. Once clients\
        \ become active or have loans or savings associated with them, you cannot\
        \ delete the client but you may Close the client if they have left the program."
      operationId: delete_10
      parameters:
      - description: externalId
        in: path
        name: externalId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteClientsClientIdRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteClientsClientIdResponse'
          description: OK
      summary: Delete a Client
      tags:
      - Client
    get:
      description: |-
        Example Requests:

        clients/123-456


        clients/123-456?template=true


        clients/123-456?fields=id,displayName,officeName
      operationId: retrieveOne_12
      parameters:
      - description: externalId
        in: path
        name: externalId
        required: true
        schema:
          type: string
      - description: staffInSelectedOfficeOnly
        in: query
        name: staffInSelectedOfficeOnly
        schema:
          type: boolean
          default: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetClientsClientIdResponse'
          description: OK
      summary: Retrieve a Client by External Id
      tags:
      - Client
    post:
      description: |-
        Activate a Client:

        Clients can be created in a Pending state. This API exists to enable client activation (for when a client becomes an approved member of the financial Institution).

        If the client happens to be already active this API will result in an error.

        Close a Client:

        Clients can be closed if they do not have any non-closed loans/savingsAccount. This API exists to close a client .

        If the client have any active loans/savingsAccount this API will result in an error.

        Reject a Client:

        Clients can be rejected when client is in pending for activation status.

        If the client is any other status, this API throws an error.

        Mandatory Fields: rejectionDate, rejectionReasonId

        Withdraw a Client:

        Client applications can be withdrawn when client is in a pending for activation status.

        If the client is any other status, this API throws an error.

        Mandatory Fields: withdrawalDate, withdrawalReasonId

        Reactivate a Client: Clients can be reactivated after they have been closed.

        Trying to reactivate a client in any other state throws an error.

        Mandatory Fields: reactivationDate

        UndoReject a Client:

        Clients can be reactivated after they have been rejected.

        Trying to reactivate a client in any other state throws an error.

        Mandatory Fields: reopenedDateUndoWithdraw a Client:

        Clients can be reactivated after they have been withdrawn.

        Trying to reactivate a client in any other state throws an error.

        Mandatory Fields: reopenedDate

        Assign a Staff:

        Allows you to assign a Staff for existed Client.

        The selected Staff should belong to the same office (or an officer higher up in the hierarchy) as the Client he manages.

        Unassign a Staff:

        Allows you to unassign the Staff assigned to a Client.

        Update Default Savings Account:

        Allows you to modify or assign a default savings account for an existing Client.

        The selected savings account should be one among the existing savings account for a particular customer.

        Propose a Client Transfer:

        Allows you to propose the transfer of a Client to a different Office.

        Withdraw a Client Transfer:

        Allows you to withdraw the proposed transfer of a Client to a different Office.

        Withdrawal can happen only if the destination Branch (to which the transfer was proposed) has not already accepted the transfer proposal

        Reject a Client Transfer:

        Allows the Destination Branch to reject the proposed Client Transfer.

        Accept a Client Transfer:

        Allows the Destination Branch to accept the proposed Client Transfer.

        The destination branch may also choose to link this client to a group (in which case, any existing active JLG loan of the client is rescheduled to match the meeting frequency of the group) and loan Officer at the time of accepting the transfer

        Propose and Accept a Client Transfer:

        Abstraction over the Propose and Accept Client Transfer API's which enable a user with Data Scope over both the Target and Destination Branches to directly transfer a Client to the destination Office.

        Showing request/response for 'Reject a Client Transfer'
      operationId: applyCommand
      parameters:
      - description: externalId
        in: path
        name: externalId
        required: true
        schema:
          type: string
      - description: command
        in: query
        name: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostClientsClientIdRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostClientsClientIdResponse'
          description: OK
      summary: Activate a Client | Close a Client | Reject a Client | Withdraw a Client
        | Reactivate a Client | UndoReject a Client | UndoWithdraw a Client | Assign
        a Staff | Unassign a Staff | Update Default Savings Account | Propose a Client
        Transfer | Withdraw a Client Transfer | Reject a Client Transfer | Accept
        a Client Transfer | Propose and Accept a Client Transfer
      tags:
      - Client
    put:
      description: |-
        Note: You can update any of the basic attributes of a client (but not its associations) using this API.

        Changing the relationship between a client and its office is not supported through this API. An API specific to handling transfers of clients between offices is available for the same.

        The relationship between a client and a group must be removed through the Groups API.
      operationId: update_11
      parameters:
      - description: externalId
        in: path
        name: externalId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutClientsClientIdRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutClientsClientIdResponse'
          description: OK
      summary: Update a Client using the External Id
      tags:
      - Client
  /v1/clients/external-id/{externalId}/accounts:
    get:
      description: "An example of how a loan portfolio summary can be provided. This\
        \ is requested in a specific use case of the community application.\nIt is\
        \ quite reasonable to add resources like this to simplify User Interface development.\n\
        \nExample Requests:\n \nclients/123-456/accounts\n\nclients/123-456/accounts?fields=loanAccounts,savingsAccounts"
      operationId: retrieveAssociatedAccounts_1
      parameters:
      - description: externalId
        in: path
        name: externalId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetClientsClientIdAccountsResponse'
          description: OK
        "400":
          description: Bad Request
      summary: Retrieve client accounts overview
      tags:
      - Client
  /v1/clients/external-id/{externalId}/obligeedetails:
    get:
      description: Retrieve client obligee details using the client external Id
      operationId: retrieveObligeeDetails_1
      parameters:
      - in: path
        name: externalId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetClientObligeeDetailsResponse'
          description: OK
        "400":
          description: Bad Request
      summary: Retrieve client obligee details
      tags:
      - Client
  /v1/clients/external-id/{externalId}/transferproposaldate:
    get:
      description: Retrieve client receiveTransfer template using the client external Id
      operationId: retrieveTransferTemplate_1
      parameters:
      - in: path
        name: externalId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetClientTransferProposalDateResponse'
          description: OK
        "400":
          description: Bad Request
      summary: Retrieve client receiveTransfer template
      tags:
      - Client
  /v1/clients/template:
    get:
      description: |-
        This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:

        Field Defaults
        Allowed Value Lists

        Example Request:

        clients/template
      operationId: retrieveTemplate_5
      parameters:
      - description: officeId
        in: query
        name: officeId
        schema:
          type: integer
          format: int64
      - description: commandParam
        in: query
        name: commandParam
        schema:
          type: string
      - description: staffInSelectedOfficeOnly
        in: query
        name: staffInSelectedOfficeOnly
        schema:
          type: boolean
          default: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetClientsTemplateResponse'
          description: OK
      summary: Retrieve Client Details Template
      tags:
      - Client
  /v1/clients/uploadtemplate:
    post:
      operationId: postClientTemplate
      parameters:
      - in: query
        name: legalFormType
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadRequest'
        description: Upload client template
      responses:
        default:
          content:
            '*/*':
              schema:
                type: string
          description: default response
      tags:
      - Client
  /v1/clients/{clientId}:
    delete:
      description: "If a client is in Pending state, you are allowed to Delete it.\
        \ The delete is a 'hard delete' and cannot be recovered from. Once clients\
        \ become active or have loans or savings associated with them, you cannot\
        \ delete the client but you may Close the client if they have left the program."
      operationId: delete_9
      parameters:
      - description: clientId
        in: path
        name: clientId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteClientsClientIdRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteClientsClientIdResponse'
          description: OK
      summary: Delete a Client
      tags:
      - Client
    get:
      description: |-
        Example Requests:

        clients/1


        clients/1?template=true


        clients/1?fields=id,displayName,officeName
      operationId: retrieveOne_11
      parameters:
      - description: clientId
        in: path
        name: clientId
        required: true
        schema:
          type: integer
          format: int64
      - description: staffInSelectedOfficeOnly
        in: query
        name: staffInSelectedOfficeOnly
        schema:
          type: boolean
          default: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetClientsClientIdResponse'
          description: OK
      summary: Retrieve a Client
      tags:
      - Client
    post:
      description: |-
        Activate a Client:

        Clients can be created in a Pending state. This API exists to enable client activation (for when a client becomes an approved member of the financial Institution).

        If the client happens to be already active this API will result in an error.

        Close a Client:

        Clients can be closed if they do not have any non-closed loans/savingsAccount. This API exists to close a client .

        If the client have any active loans/savingsAccount this API will result in an error.

        Reject a Client:

        Clients can be rejected when client is in pending for activation status.

        If the client is any other status, this API throws an error.

        Mandatory Fields: rejectionDate, rejectionReasonId

        Withdraw a Client:

        Client applications can be withdrawn when client is in a pending for activation status.

        If the client is any other status, this API throws an error.

        Mandatory Fields: withdrawalDate, withdrawalReasonId

        Reactivate a Client: Clients can be reactivated after they have been closed.

        Trying to reactivate a client in any other state throws an error.

        Mandatory Fields: reactivationDate

        UndoReject a Client:

        Clients can be reactivated after they have been rejected.

        Trying to reactivate a client in any other state throws an error.

        Mandatory Fields: reopenedDateUndoWithdraw a Client:

        Clients can be reactivated after they have been withdrawn.

        Trying to reactivate a client in any other state throws an error.

        Mandatory Fields: reopenedDate

        Assign a Staff:

        Allows you to assign a Staff for existed Client.

        The selected Staff should belong to the same office (or an officer higher up in the hierarchy) as the Client he manages.

        Unassign a Staff:

        Allows you to unassign the Staff assigned to a Client.

        Update Default Savings Account:

        Allows you to modify or assign a default savings account for an existing Client.

        The selected savings account should be one among the existing savings account for a particular customer.

        Propose a Client Transfer:

        Allows you to propose the transfer of a Client to a different Office.

        Withdraw a Client Transfer:

        Allows you to withdraw the proposed transfer of a Client to a different Office.

        Withdrawal can happen only if the destination Branch (to which the transfer was proposed) has not already accepted the transfer proposal

        Reject a Client Transfer:

        Allows the Destination Branch to reject the proposed Client Transfer.

        Accept a Client Transfer:

        Allows the Destination Branch to accept the proposed Client Transfer.

        The destination branch may also choose to link this client to a group (in which case, any existing active JLG loan of the client is rescheduled to match the meeting frequency of the group) and loan Officer at the time of accepting the transfer

        Propose and Accept a Client Transfer:

        Abstraction over the Propose and Accept Client Transfer API's which enable a user with Data Scope over both the Target and Destination Branches to directly transfer a Client to the destination Office.

        Showing request/response for 'Reject a Client Transfer'
      operationId: activate_1
      parameters:
      - description: clientId
        in: path
        name: clientId
        required: true
        schema:
          type: integer
          format: int64
      - description: command
        in: query
        name: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostClientsClientIdRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostClientsClientIdResponse'
          description: OK
      summary: Activate a Client | Close a Client | Reject a Client | Withdraw a Client
        | Reactivate a Client | UndoReject a Client | UndoWithdraw a Client | Assign
        a Staff | Unassign a Staff | Update Default Savings Account | Propose a Client
        Transfer | Withdraw a Client Transfer | Reject a Client Transfer | Accept
        a Client Transfer | Propose and Accept a Client Transfer
      tags:
      - Client
    put:
      description: |-
        Note: You can update any of the basic attributes of a client (but not its associations) using this API.

        Changing the relationship between a client and its office is not supported through this API. An API specific to handling transfers of clients between offices is available for the same.

        The relationship between a client and a group must be removed through the Groups API.
      operationId: update_10
      parameters:
      - description: clientId
        in: path
        name: clientId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutClientsClientIdRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutClientsClientIdResponse'
          description: OK
      summary: Update a Client
      tags:
      - Client
  /v1/clients/{clientId}/accounts:
    get:
      description: "An example of how a loan portfolio summary can be provided. This\
        \ is requested in a specific use case of the community application.\nIt is\
        \ quite reasonable to add resources like this to simplify User Interface development.\n\
        \nExample Requests:\n \nclients/1/accounts\n\nclients/1/accounts?fields=loanAccounts,savingsAccounts"
      operationId: retrieveAssociatedAccounts
      parameters:
      - description: clientId
        in: path
        name: clientId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetClientsClientIdAccountsResponse'
          description: OK
        "400":
          description: Bad Request
      summary: Retrieve client accounts overview
      tags:
      - Client
  /v1/clients/{clientId}/charges:
    get:
      description: |-
        The list capability of client charges supports pagination.Example Requests:
        clients/1/charges

        clients/1/charges?offset=0&limit=5
      operationId: retrieveAllClientCharges
      parameters:
      - description: clientId
        in: path
        name: clientId
        required: true
        schema:
          type: integer
          format: int64
      - description: chargeStatus
        in: query
        name: chargeStatus
        schema:
          type: string
          default: all
      - description: pendingPayment
        in: query
        name: pendingPayment
        schema:
          type: boolean
      - description: limit
        in: query
        name: limit
        schema:
          type: integer
          format: int32
      - description: offset
        in: query
        name: offset
        schema:
          type: integer
          format: int32
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetClientsClientIdChargesResponse'
          description: OK
      summary: List Client Charges
      tags:
      - Client Charges
    post:
      description: " This API associates a Client charge with an implicit Client account\n\
        Mandatory Fields : \nchargeId and dueDate  \nOptional Fields : \namount"
      operationId: applyClientCharge
      parameters:
      - description: clientId
        in: path
        name: clientId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostClientsClientIdChargesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostClientsClientIdChargesResponse'
          description: OK
      summary: Add Client Charge
      tags:
      - Client Charges
  /v1/clients/{clientId}/charges/template:
    get:
      operationId: retrieveTemplate_4
      parameters:
      - description: clientId
        in: path
        name: clientId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Client Charges
  /v1/clients/{clientId}/charges/{chargeId}:
    delete:
      description: 'Deletes a Client Charge on which no transactions have taken place
        (either payments or waivers). '
      operationId: deleteClientCharge
      parameters:
      - description: clientId
        in: path
        name: clientId
        required: true
        schema:
          type: integer
          format: int64
      - description: chargeId
        in: path
        name: chargeId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteClientsClientIdChargesChargeIdResponse'
          description: OK
      summary: Delete a Client Charge
      tags:
      - Client Charges
    get:
      description: |-
        Example Requests:
        clients/1/charges/1


        clients/1/charges/1?fields=name,id
      operationId: retrieveClientCharge
      parameters:
      - description: clientId
        in: path
        name: clientId
        required: true
        schema:
          type: integer
          format: int64
      - description: chargeId
        in: path
        name: chargeId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetClientsChargesPageItems'
          description: OK
      summary: Retrieve a Client Charge
      tags:
      - Client Charges
    post:
      description: |-
        Pay a Client Charge:

        Mandatory Fields:transactionDate and amount "Pay either a part of or the entire due amount for a charge.(command=paycharge)

        Waive a Client Charge:


        This API provides the facility of waiving off the remaining amount on a client charge (command=waive)

        Showing request/response for 'Pay a Client Charge'
      operationId: payOrWaiveClientCharge
      parameters:
      - description: clientId
        in: path
        name: clientId
        required: true
        schema:
          type: integer
          format: int64
      - description: chargeId
        in: path
        name: chargeId
        required: true
        schema:
          type: integer
          format: int64
      - description: command
        in: query
        name: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostClientsClientIdChargesChargeIdRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostClientsClientIdChargesChargeIdResponse'
          description: OK
      summary: Pay a Client Charge | Waive a Client Charge
      tags:
      - Client Charges
  /v1/clients/{clientId}/collaterals:
    get:
      description: Get Collateral Product of a Client
      operationId: getClientCollateral
      parameters:
      - description: clientId
        in: path
        name: clientId
        required: true
        schema:
          type: integer
          format: int64
      - description: prodId
        in: query
        name: prodId
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetClientCollateralManagementsResponse'
          description: OK
      summary: Get Clients Collateral Products
      tags:
      - Client Collateral Management
    post:
      description: Add New Collateral For a Client
      operationId: addCollateral
      parameters:
      - description: clientId
        in: path
        name: clientId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostClientCollateralRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostClientCollateralResponse'
          description: OK
      summary: Add New Collateral For a Client
      tags:
      - Client Collateral Management
  /v1/clients/{clientId}/collaterals/template:
    get:
      description: Get Client Collateral Template
      operationId: getClientCollateralTemplate
      parameters:
      - description: clientId
        in: path
        name: clientId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetLoanCollateralManagementTemplate'
          description: OK
      summary: Get Client Collateral Template
      tags:
      - Client Collateral Management
  /v1/clients/{clientId}/collaterals/{clientCollateralId}:
    get:
      description: Get Client Collateral Data
      operationId: getClientCollateralData
      parameters:
      - description: clientId
        in: path
        name: clientId
        required: true
        schema:
          type: integer
          format: int64
      - description: clientCollateralId
        in: path
        name: clientCollateralId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetClientCollateralManagementsResponse'
          description: OK
      summary: Get Client Collateral Data
      tags:
      - Client Collateral Management
  /v1/clients/{clientId}/collaterals/{collateralId}:
    delete:
      description: Delete Client Collateral
      operationId: deleteCollateral_1
      parameters:
      - description: clientId
        in: path
        name: clientId
        required: true
        schema:
          type: integer
          format: int64
      - description: collateralId
        in: path
        name: collateralId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteClientCollateralResponse'
          description: OK
      summary: Delete Client Collateral
      tags:
      - Client Collateral Management
    put:
      description: Update New Collateral of a Client
      operationId: updateCollateral_1
      parameters:
      - description: clientId
        in: path
        name: clientId
        required: true
        schema:
          type: integer
          format: int64
      - description: collateralId
        in: path
        name: collateralId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutClientCollateralRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutClientCollateralResponse'
          description: OK
      summary: Update New Collateral of a Client
      tags:
      - Client Collateral Management
  /v1/clients/{clientId}/familymembers:
    get:
      operationId: getFamilyMembers
      parameters:
      - in: path
        name: clientId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Client Family Member
    post:
      operationId: addClientFamilyMembers
      parameters:
      - in: path
        name: clientId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Client Family Member
  /v1/clients/{clientId}/familymembers/template:
    get:
      operationId: getTemplate_2
      parameters:
      - in: path
        name: clientId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Client Family Member
  /v1/clients/{clientId}/familymembers/{familyMemberId}:
    delete:
      operationId: deleteClientFamilyMembers
      parameters:
      - in: path
        name: familyMemberId
        required: true
        schema:
          type: integer
          format: int64
      - description: clientId
        in: path
        name: clientId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Client Family Member
    get:
      operationId: getFamilyMember
      parameters:
      - in: path
        name: familyMemberId
        required: true
        schema:
          type: integer
          format: int64
      - description: clientId
        in: path
        name: clientId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Client Family Member
    put:
      operationId: updateClientFamilyMembers
      parameters:
      - in: path
        name: familyMemberId
        required: true
        schema:
          type: integer
          format: int64
      - description: clientId
        in: path
        name: clientId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Client Family Member
  /v1/clients/{clientId}/identifiers:
    get:
      description: |-
        Example Requests:
        clients/1/identifiers


        clients/1/identifiers?fields=documentKey,documentType,description
      operationId: retrieveAllClientIdentifiers
      parameters:
      - description: clientId
        in: path
        name: clientId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetClientsClientIdIdentifiersResponse'
          description: OK
      summary: List all Identifiers for a Client
      tags:
      - Client Identifier
    post:
      description: "Mandatory Fields\ndocumentKey, documentTypeId "
      operationId: createClientIdentifier
      parameters:
      - description: clientId
        in: path
        name: clientId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostClientsClientIdIdentifiersRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostClientsClientIdIdentifiersResponse'
          description: OK
      summary: Create an Identifier for a Client
      tags:
      - Client Identifier
  /v1/clients/{clientId}/identifiers/template:
    get:
      description: |-
        This is a convenience resource useful for building maintenance user interface screens for client applications. The template data returned consists of any or all of:

         Field Defaults
         Allowed description Lists


        Example Request:
        clients/1/identifiers/template
      operationId: newClientIdentifierDetails
      parameters:
      - description: clientId
        in: path
        name: clientId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetClientsClientIdIdentifiersTemplateResponse'
          description: OK
      summary: Retrieve Client Identifier Details Template
      tags:
      - Client Identifier
  /v1/clients/{clientId}/identifiers/{identifierId}:
    delete:
      description: Deletes a Client Identifier
      operationId: deleteClientIdentifier
      parameters:
      - description: clientId
        in: path
        name: clientId
        required: true
        schema:
          type: integer
          format: int64
      - description: identifierId
        in: path
        name: identifierId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteClientsClientIdIdentifiersIdentifierIdResponse'
          description: OK
      summary: Delete a Client Identifier
      tags:
      - Client Identifier
    get:
      description: |-
        Example Requests:
        clients/1/identifier/2


        clients/1/identifier/2?template=true

        clients/1/identifiers/2?fields=documentKey,documentType,description
      operationId: retrieveClientIdentifiers
      parameters:
      - description: clientId
        in: path
        name: clientId
        required: true
        schema:
          type: integer
          format: int64
      - description: identifierId
        in: path
        name: identifierId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetClientsClientIdIdentifiersResponse'
          description: OK
      summary: Retrieve a Client Identifier
      tags:
      - Client Identifier
    put:
      description: Updates a Client Identifier
      operationId: updateClientIdentifer
      parameters:
      - description: clientId
        in: path
        name: clientId
        required: true
        schema:
          type: integer
          format: int64
      - description: identifierId
        in: path
        name: identifierId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutClientsClientIdIdentifiersIdentifierIdRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutClientsClientIdIdentifiersIdentifierIdResponse'
          description: OK
      summary: Update a Client Identifier
      tags:
      - Client Identifier
  /v1/clients/{clientId}/obligeedetails:
    get:
      description: Retrieve client obligee details
      operationId: retrieveObligeeDetails
      parameters:
      - in: path
        name: clientId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetClientObligeeDetailsResponse'
          description: OK
        "400":
          description: Bad Request
      summary: Retrieve client obligee details
      tags:
      - Client
  /v1/clients/{clientId}/transactions:
    get:
      description: |-
        The list capability of client transaction can support pagination.

        Example Requests:

        clients/189/transactions

        clients/189/transactions?offset=10&limit=50
      operationId: retrieveAllClientTransactions
      parameters:
      - description: clientId
        in: path
        name: clientId
        required: true
        schema:
          type: integer
          format: int64
      - description: offset
        in: query
        name: offset
        schema:
          type: integer
          format: int32
      - description: limit
        in: query
        name: limit
        schema:
          type: integer
          format: int32
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetClientsClientIdTransactionsResponse'
          description: OK
      summary: List Client Transactions
      tags:
      - Client Transaction
  /v1/clients/{clientId}/transactions/external-id/{transactionExternalId}:
    get:
      description: |-
        Example Requests:
        clients/1/transactions/external-id/7dd80a7c-ycba-a446-t378-91eb6f53e854


        clients/1/transactions/external-id/7dd80a7c-ycba-a446-t378-91eb6f53e854?fields=id,officeName
      operationId: retrieveClientTransaction_1
      parameters:
      - description: clientId
        in: path
        name: clientId
        required: true
        schema:
          type: integer
          format: int64
      - description: transactionExternalId
        in: path
        name: transactionExternalId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetClientsClientIdTransactionsTransactionIdResponse'
          description: OK
      summary: Retrieve a Client Transaction
      tags:
      - Client Transaction
    post:
      description: Undoes a Client Transaction
      operationId: undoClientTransaction_1
      parameters:
      - description: clientId
        in: path
        name: clientId
        required: true
        schema:
          type: integer
          format: int64
      - description: transactionExternalId
        in: path
        name: transactionExternalId
        required: true
        schema:
          type: string
      - description: command
        in: query
        name: command
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostClientsClientIdTransactionsTransactionIdResponse'
          description: OK
      summary: Undo a Client Transaction
      tags:
      - Client Transaction
  /v1/clients/{clientId}/transactions/{transactionId}:
    get:
      description: |-
        Example Requests:
        clients/1/transactions/1


        clients/1/transactions/1?fields=id,officeName
      operationId: retrieveClientTransaction
      parameters:
      - description: clientId
        in: path
        name: clientId
        required: true
        schema:
          type: integer
          format: int64
      - description: transactionId
        in: path
        name: transactionId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetClientsClientIdTransactionsTransactionIdResponse'
          description: OK
      summary: Retrieve a Client Transaction
      tags:
      - Client Transaction
    post:
      description: Undoes a Client Transaction
      operationId: undoClientTransaction
      parameters:
      - description: clientId
        in: path
        name: clientId
        required: true
        schema:
          type: integer
          format: int64
      - description: transactionId
        in: path
        name: transactionId
        required: true
        schema:
          type: integer
          format: int64
      - description: command
        in: query
        name: command
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostClientsClientIdTransactionsTransactionIdResponse'
          description: OK
      summary: Undo a Client Transaction
      tags:
      - Client Transaction
  /v1/clients/{clientId}/transferproposaldate:
    get:
      description: Retrieve client receiveTransfer template
      operationId: retrieveTransferTemplate
      parameters:
      - in: path
        name: clientId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetClientTransferProposalDateResponse'
          description: OK
        "400":
          description: Bad Request
      summary: Retrieve client receiveTransfer template
      tags:
      - Client
  /v1/codes:
    get:
      description: |-
        Returns the list of codes.

        Example Requests:

        codes
      operationId: retrieveCodes
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetCodesResponse'
          description: OK
      summary: Retrieve Codes
      tags:
      - Codes
    post:
      description: Creates a code. Codes created through api are always 'user defined'
        and so system defined is marked as false.
      operationId: createCode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostCodesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostCodesResponse'
          description: OK
      summary: Create a Code
      tags:
      - Codes
  /v1/codes/{codeId}:
    delete:
      description: Deletes a code if it is not system defined.
      operationId: deleteCode
      parameters:
      - description: codeId
        in: path
        name: codeId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteCodesResponse'
          description: OK
      summary: Delete a Code
      tags:
      - Codes
    get:
      description: |-
        Returns the details of a Code.

        Example Requests:

        codes/1
      operationId: retrieveCode
      parameters:
      - description: codeId
        in: path
        name: codeId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCodesResponse'
          description: OK
      summary: Retrieve a Code
      tags:
      - Codes
    put:
      description: Updates the details of a code if it is not system defined.
      operationId: updateCode
      parameters:
      - description: codeId
        in: path
        name: codeId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutCodesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutCodesResponse'
          description: OK
      summary: Update a Code
      tags:
      - Codes
  /v1/codes/{codeId}/codevalues:
    get:
      description: |-
        Returns the list of Code Values for a given Code

        Example Requests:

        codes/1/codevalues
      operationId: retrieveAllCodeValues
      parameters:
      - description: codeId
        in: path
        name: codeId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetCodeValuesDataResponse'
          description: A List of code values for a given code
      summary: List Code Values
      tags:
      - Code Values
    post:
      operationId: createCodeValue
      parameters:
      - description: codeId
        in: path
        name: codeId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostCodeValuesDataRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostCodeValueDataResponse'
          description: OK
      summary: Create a Code description
      tags:
      - Code Values
  /v1/codes/{codeId}/codevalues/{codeValueId}:
    delete:
      description: Deletes a code description
      operationId: deleteCodeValue
      parameters:
      - description: codeId
        in: path
        name: codeId
        required: true
        schema:
          type: integer
          format: int64
      - description: codeValueId
        in: path
        name: codeValueId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteCodeValueDataResponse'
          description: OK
      summary: Delete a Code description
      tags:
      - Code Values
    get:
      description: |-
        Returns the details of a Code Value

        Example Requests:

        codes/1/codevalues/1
      operationId: retrieveCodeValue
      parameters:
      - description: codeValueId
        in: path
        name: codeValueId
        required: true
        schema:
          type: integer
          format: int64
      - description: codeId
        in: path
        name: codeId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCodeValuesDataResponse'
          description: OK
      summary: Retrieve a Code description
      tags:
      - Code Values
    put:
      description: Updates the details of a code description.
      operationId: updateCodeValue
      parameters:
      - description: codeId
        in: path
        name: codeId
        required: true
        schema:
          type: integer
          format: int64
      - description: codeValueId
        in: path
        name: codeValueId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutCodeValuesDataRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutCodeValueDataResponse'
          description: OK
      summary: Update a Code description
      tags:
      - Code Values
  /v1/collateral-management:
    get:
      description: Fetch all Collateral Products
      operationId: getAllCollaterals
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetCollateralManagementsResponse'
          description: OK
      summary: Get All Collaterals
      tags:
      - Collateral Management
    post:
      description: Collateral Creation
      operationId: createCollateral_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostCollateralManagementProductRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostCollateralManagementProductResponse'
          description: OK
      summary: Create a new collateral
      tags:
      - Collateral Management
  /v1/collateral-management/template:
    get:
      description: Get Collateral Template
      operationId: getCollateralTemplate
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetCollateralProductTemplate'
          description: OK
      summary: Get Collateral Template
      tags:
      - Collateral Management
  /v1/collateral-management/{collateralId}:
    delete:
      description: Delete Collateral
      operationId: deleteCollateral_2
      parameters:
      - description: collateralId
        in: path
        name: collateralId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteCollateralProductResponse'
          description: OK
      summary: Delete a Collateral
      tags:
      - Collateral Management
    get:
      description: Fetch Collateral
      operationId: getCollateral
      parameters:
      - description: collateralId
        in: path
        name: collateralId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCollateralManagementsResponse'
          description: OK
      summary: Get Collateral
      tags:
      - Collateral Management
    put:
      description: Update Collateral
      operationId: updateCollateral_2
      parameters:
      - description: collateralId
        in: path
        name: collateralId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutCollateralProductRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutCollateralProductResponse'
          description: OK
      summary: Update Collateral
      tags:
      - Collateral Management
  /v1/collectionsheet:
    post:
      description: |-
        Generate Individual Collection Sheet:

        This Api retrieves repayment details of all individual loans under a office as on a specified meeting date.

        Save Collection Sheet:

        This Api allows the loan officer to perform bulk repayments of individual loans and deposit of mandatory savings on a given meeting date.
      operationId: generateCollectionSheet
      parameters:
      - description: command
        in: query
        name: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostCollectionSheetRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostCollectionSheetResponse'
          description: OK
      summary: Generate Individual Collection Sheet | Save Collection Sheet
      tags:
      - Collection Sheet
  /v1/configurations:
    get:
      description: |-
        Returns the list global enable/disable configurations.

        Example Requests:

        configurations


        Returns the list global enable/disable survey configurations.

        Example Requests:

        configurations/survey
      operationId: retrieveConfiguration
      parameters:
      - description: survey
        in: query
        name: survey
        schema:
          type: boolean
          default: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGlobalConfigurationsResponse'
          description: List of example \n response \nsurveys response   \ngiven below
      summary: Retrieve Global Configuration | Retrieve Global Configuration for surveys
      tags:
      - Global Configuration
  /v1/configurations/name/{name}:
    get:
      description: |-
        Returns a global enable/disable configuration.

        Example Requests:

        configurations/name/Enable-Address
      operationId: retrieveOneByName
      parameters:
      - description: name
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalConfigurationPropertyData'
          description: OK
      summary: Retrieve Global Configuration
      tags:
      - Global Configuration
  /v1/configurations/{configId}:
    get:
      description: |-
        Returns a global enable/disable configurations.

        Example Requests:

        configurations/1
      operationId: retrieveOne_3
      parameters:
      - description: configId
        in: path
        name: configId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGlobalConfigurationsResponse'
          description: OK
      summary: Retrieve Global Configuration
      tags:
      - Global Configuration
    put:
      description: Updates an enable/disable global configuration item.
      operationId: updateConfiguration_1
      parameters:
      - description: configId
        in: path
        name: configId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutGlobalConfigurationsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutGlobalConfigurationsResponse'
          description: OK
      summary: Update Global Configuration
      tags:
      - Global Configuration
  /v1/creditBureauIntegration/addCreditReport:
    post:
      operationId: addCreditReport
      parameters:
      - description: creditBureauId
        in: query
        name: creditBureauId
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadRequest'
        description: Upload credit report
      responses:
        default:
          content:
            '*/*':
              schema:
                type: string
          description: default response
  /v1/creditBureauIntegration/creditReport:
    post:
      operationId: fetchCreditReport
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: Fetch credit report
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
  /v1/creditBureauIntegration/creditReport/{creditBureauId}:
    get:
      operationId: getSavedCreditReport
      parameters:
      - description: creditBureauId
        in: path
        name: creditBureauId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
  /v1/creditBureauIntegration/deleteCreditReport/{creditBureauId}:
    delete:
      operationId: deleteCreditReport
      parameters:
      - description: creditBureauId
        in: path
        name: creditBureauId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
  /v1/creditBureauIntegration/saveCreditReport:
    post:
      operationId: saveCreditReport
      parameters:
      - description: creditBureauId
        in: query
        name: creditBureauId
        schema:
          type: integer
          format: int64
      - description: nationalId
        in: query
        name: nationalId
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
  /v1/currencies:
    get:
      description: |-
        Returns the list of currencies permitted for use AND the list of currencies not selected (but available for selection).

        Example Requests:

        currencies


        currencies?fields=selectedCurrencyOptions
      operationId: retrieveCurrencies
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCurrenciesResponse'
          description: OK
      summary: Retrieve Currency Configuration
      tags:
      - Currency
    put:
      description: Updates the list of currencies permitted for use.
      operationId: updateCurrencies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutCurrenciesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutCurrenciesResponse'
          description: OK
      summary: Update Currency Configuration
      tags:
      - Currency
  /v1/datatables:
    get:
      description: |-
        Lists registered data tables and the Apache Fineract Core application table they are registered to.

        ARGUMENTS

        apptable  - optional
        The Apache Fineract core application table.

        Example Requests:

        datatables?apptable=m_client


        datatables
      operationId: getDatatables
      parameters:
      - description: apptable
        in: query
        name: apptable
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetDataTablesResponse'
          description: OK
      summary: List Data Tables
      tags:
      - Data Tables
    post:
      description: "Create a new data table and registers it with the Apache Fineract\
        \ Core application table.\n\nField Descriptions\n\nMandatory - datatableName\
        \ : \n\nThe name of the Data Table.\n\nMandatory - apptableName\n\nApplication\
        \ table name. Must be one of the following:\n\nm_client\n\nm_group\n\nm_loan\n\
        \nm_office\n\nm_saving_account\n\nm_product_loan\n\nm_savings_product\n\n\
        Mandatory - columns  \nAn array of columns in the new Data Table.\n\nOptional\
        \ - multiRow\n\nAllows to create multiple entries in the Data Table. Optional,\
        \ defaults to false. If this property is not provided Data Table will allow\
        \ only one entry.\n\nField Descriptions - columns\n\nMandatory - name\n\n\
        Name of the created column. Can contain only alphanumeric characters, underscores\
        \ and spaces, but cannot start with a number. Cannot start or end with an\
        \ underscore or space.\n\nMandatory - type\n\nColumn type. Must be one of\
        \ the following:\n\nBoolean\n\nDate\n\nDateTime\n\nDecimal\n\nDropdown\n\n\
        \nNumber\n\nString\n\nText\n\nMandatory [type = Dropdown] - code\n\nUsed in\
        \ Code description fields. Column name becomes: code_cd_name. Mandatory if\
        \ using type Dropdown, otherwise an error is returned.\n\nOptional - mandatory\n\
        \nDetermines whether this column must have a value in every entry. Optional,\
        \ defaults to false.\n\nMandatory [type = String] - length\n\nLength of the\
        \ text field. Mandatory if type String is used, otherwise an error is returned."
      operationId: createDatatable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostDataTablesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostDataTablesResponse'
          description: OK
      summary: Create Data Table
      tags:
      - Data Tables
  /v1/datatables/deregister/{datatable}:
    post:
      description: Deregisters a data table. It will no longer be available through
        the API.
      operationId: deregisterDatatable
      parameters:
      - description: datatable
        in: path
        name: datatable
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutDataTablesResponse'
          description: OK
      summary: Deregister Data Table
      tags:
      - Data Tables
  /v1/datatables/register/{datatable}/{apptable}:
    post:
      description: "Registers a data table with the Apache Fineract Core application\
        \ table. This allows the data table to be maintained through the API. In case\
        \ the datatable is a PPI (survey table), a parameter category should be pass\
        \ along with the request. The API currently support one category (200)"
      operationId: registerDatatable
      parameters:
      - description: datatable
        in: path
        name: datatable
        required: true
        schema:
          type: string
      - description: apptable
        in: path
        name: apptable
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostDataTablesRegisterDatatableAppTable'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutDataTablesResponse'
          description: OK
      summary: Register Data Table
      tags:
      - Data Tables
  /v1/datatables/{datatableName}:
    delete:
      description: Deletes a data table and deregisters it from the Apache Fineract
        Core application table.
      operationId: deleteDatatable
      parameters:
      - description: datatableName
        in: path
        name: datatableName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDataTablesResponse'
          description: OK
      summary: Delete Data Table
      tags:
      - Data Tables
    put:
      description: "Modifies fields of a data table. If the apptableName parameter\
        \ is passed, data table is deregistered and registered with the new application\
        \ table."
      operationId: updateDatatable
      parameters:
      - description: datatableName
        in: path
        name: datatableName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutDataTablesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutDataTablesResponse'
          description: OK
      summary: Update Data Table
      tags:
      - Data Tables
  /v1/datatables/{datatable}:
    get:
      description: Lists a registered data table details and the Apache Fineract Core
        application table they are registered to.
      operationId: getDatatable
      parameters:
      - description: datatable
        in: path
        name: datatable
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDataTablesResponse'
          description: OK
      summary: Retrieve Data Table Details
      tags:
      - Data Tables
  /v1/datatables/{datatable}/query:
    get:
      description: Query values from a registered data table.
      operationId: queryValues
      parameters:
      - description: datatable
        in: path
        name: datatable
        required: true
        schema:
          type: string
      - description: columnFilter
        in: query
        name: columnFilter
        schema:
          type: string
      - description: valueFilter
        in: query
        name: valueFilter
        schema:
          type: string
      - description: resultColumns
        in: query
        name: resultColumns
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
      summary: Query Data Table values
      tags:
      - Data Tables
    post:
      description: Query values from a registered data table.
      operationId: advancedQuery
      parameters:
      - description: datatable
        in: path
        name: datatable
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PagedLocalRequestAdvancedQueryData'
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
      summary: Query Data Table values
      tags:
      - Data Tables
  /v1/datatables/{datatable}/{apptableId}:
    delete:
      description: "Deletes the entry (if it exists) for data tables that are one-to-one\
        \ with the application table. \nDeletes the entries (if they exist) for data\
        \ tables that are one-to-many with the application table."
      operationId: deleteDatatableEntries
      parameters:
      - description: datatable
        in: path
        name: datatable
        required: true
        schema:
          type: string
      - description: apptableId
        in: path
        name: apptableId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDataTablesDatatableAppTableIdResponse'
          description: OK
      summary: Delete Entry(s) in Data Table
      tags:
      - Data Tables
    get:
      description: "Gets the entry (if it exists) for data tables that are one to\
        \ one with the application table. \nGets the entries (if they exist) for data\
        \ tables that are one to many with the application table.\n\nNote: The 'fields'\
        \ parameter is not available for datatables.\n\nARGUMENTS\norderoptional Specifies\
        \ the order in which data is returned.genericResultSetoptional, defaults to\
        \ false If 'true' an optimised JSON format is returned suitable for tabular\
        \ display of data. This format is used by the default data tables UI functionality.\n\
        Example Requests:\n\ndatatables/extra_client_details/1\n\n\ndatatables/extra_family_details/1?order=`Date\
        \ of Birth` desc\n\n\ndatatables/extra_client_details/1?genericResultSet=true"
      operationId: getDatatable_1
      parameters:
      - description: datatable
        in: path
        name: datatable
        required: true
        schema:
          type: string
      - description: apptableId
        in: path
        name: apptableId
        required: true
        schema:
          type: integer
          format: int64
      - description: order
        in: query
        name: order
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
      summary: Retrieve Entry(s) from Data Table
      tags:
      - Data Tables
    post:
      description: |-
        Adds a row to the data table.

        Note that the default datatable UI functionality converts any field name containing spaces to underscores when using the API. This means the field name "Business Description" is considered the same as "Business_Description". So you shouldn't have both "versions" in any data table.
      operationId: createDatatableEntry
      parameters:
      - description: datatable
        in: path
        name: datatable
        required: true
        schema:
          type: string
      - description: apptableId
        in: path
        name: apptableId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
        description: |-
          {
            "BusinessDescription": "Livestock sales",
            "Comment": "First comment made",
            "Education_cv": "Primary",
            "Gender_cd": 6,
            "HighestRatePaid": 8.5,
            "NextVisit": "01 October 2012",
            "YearsinBusiness": 5,
            "dateFormat": "dd MMMM yyyy",
            "locale": "en"
          }
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostDataTablesAppTableIdResponse'
          description: OK
      summary: Create Entry in Data Table
      tags:
      - Data Tables
    put:
      description: Updates the row (if it exists) of the data table.
      operationId: updateDatatableEntryOnetoOne
      parameters:
      - description: datatable
        in: path
        name: datatable
        required: true
        schema:
          type: string
      - description: apptableId
        in: path
        name: apptableId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutDataTablesAppTableIdResponse'
          description: OK
      summary: Update Entry in Data Table (One to One)
      tags:
      - Data Tables
  /v1/datatables/{datatable}/{apptableId}/{datatableId}:
    delete:
      description: |+
        Deletes the entry (if it exists) for data tables that are one to many with the application table.

      operationId: deleteDatatableEntry
      parameters:
      - description: datatable
        example: {}
        in: path
        name: datatable
        required: true
        schema:
          type: string
      - description: apptableId
        in: path
        name: apptableId
        required: true
        schema:
          type: integer
          format: int64
      - description: datatableId
        in: path
        name: datatableId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDataTablesDatatableAppTableIdDatatableIdResponse'
          description: OK
      summary: Delete Entry in Datatable (One to Many)
      tags:
      - Data Tables
    get:
      operationId: getDatatableManyEntry
      parameters:
      - in: path
        name: datatable
        required: true
        schema:
          type: string
      - in: path
        name: apptableId
        required: true
        schema:
          type: integer
          format: int64
      - in: path
        name: datatableId
        required: true
        schema:
          type: integer
          format: int64
      - in: query
        name: order
        schema:
          type: string
      - description: Optional flag to format the response
        in: query
        name: genericResultSet
        schema:
          type: boolean
          default: false
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Data Tables
    put:
      description: Updates the row (if it exists) of the data table.
      operationId: updateDatatableEntryOneToMany
      parameters:
      - description: datatable
        in: path
        name: datatable
        required: true
        schema:
          type: string
      - description: apptableId
        in: path
        name: apptableId
        required: true
        schema:
          type: integer
          format: int64
      - description: datatableId
        in: path
        name: datatableId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutDataTablesAppTableIdDatatableIdResponse'
          description: OK
      summary: Update Entry in Data Table (One to Many)
      tags:
      - Data Tables
  /v1/delinquency/buckets:
    get:
      operationId: getDelinquencyBuckets
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetDelinquencyBucketsResponse'
          description: OK
      summary: List all Delinquency Buckets
      tags:
      - Delinquency Range and Buckets Management
    post:
      operationId: createDelinquencyBucket
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostDelinquencyBucketRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostDelinquencyBucketResponse'
          description: OK
      summary: Create Delinquency Bucket
      tags:
      - Delinquency Range and Buckets Management
  /v1/delinquency/buckets/{delinquencyBucketId}:
    delete:
      operationId: deleteDelinquencyBucket
      parameters:
      - description: delinquencyBucketId
        in: path
        name: delinquencyBucketId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostDelinquencyBucketRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDelinquencyBucketResponse'
          description: OK
      summary: Delete Delinquency Bucket based on the Id
      tags:
      - Delinquency Range and Buckets Management
    get:
      operationId: getDelinquencyBucket
      parameters:
      - description: delinquencyBucketId
        in: path
        name: delinquencyBucketId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDelinquencyBucketsResponse'
          description: OK
      summary: Retrieve a specific Delinquency Bucket based on the Id
      tags:
      - Delinquency Range and Buckets Management
    put:
      operationId: updateDelinquencyBucket
      parameters:
      - description: delinquencyBucketId
        in: path
        name: delinquencyBucketId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostDelinquencyBucketRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutDelinquencyBucketResponse'
          description: OK
      summary: Update Delinquency Bucket based on the Id
      tags:
      - Delinquency Range and Buckets Management
  /v1/delinquency/ranges:
    get:
      operationId: getDelinquencyRanges
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetDelinquencyRangesResponse'
          description: OK
      summary: List all Delinquency Ranges
      tags:
      - Delinquency Range and Buckets Management
    post:
      operationId: createDelinquencyRange
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostDelinquencyRangeRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostDelinquencyRangeResponse'
          description: OK
      summary: Create Delinquency Range
      tags:
      - Delinquency Range and Buckets Management
  /v1/delinquency/ranges/{delinquencyRangeId}:
    delete:
      operationId: deleteDelinquencyRange
      parameters:
      - description: delinquencyRangeId
        in: path
        name: delinquencyRangeId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostDelinquencyRangeRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDelinquencyRangeResponse'
          description: OK
      summary: Update Delinquency Range based on the Id
      tags:
      - Delinquency Range and Buckets Management
    get:
      operationId: getDelinquencyRange
      parameters:
      - description: delinquencyRangeId
        in: path
        name: delinquencyRangeId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDelinquencyRangesResponse'
          description: OK
      summary: Retrieve a specific Delinquency Range based on the Id
      tags:
      - Delinquency Range and Buckets Management
    put:
      operationId: updateDelinquencyRange
      parameters:
      - description: delinquencyRangeId
        in: path
        name: delinquencyRangeId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostDelinquencyRangeRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutDelinquencyRangeResponse'
          description: OK
      summary: Update Delinquency Range based on the Id
      tags:
      - Delinquency Range and Buckets Management
  /v1/echo:
    get:
      operationId: get
      responses:
        default:
          content:
            text/plain:
              schema:
                type: string
          description: default response
  /v1/email:
    get:
      operationId: retrieveAllEmails
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
    post:
      operationId: create_1
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
  /v1/email/campaign:
    get:
      operationId: retrieveAllCampaign
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
    post:
      operationId: createCampaign
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
  /v1/email/campaign/preview:
    post:
      operationId: preview
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
  /v1/email/campaign/template:
    get:
      operationId: template_1
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
  /v1/email/campaign/template/{resourceId}:
    get:
      operationId: retrieveOneTemplate
      parameters:
      - in: path
        name: resourceId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
  /v1/email/campaign/{resourceId}:
    delete:
      operationId: delete_2
      parameters:
      - in: path
        name: resourceId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
    get:
      operationId: retrieveOneCampaign
      parameters:
      - in: path
        name: resourceId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
    post:
      operationId: activate
      parameters:
      - in: path
        name: resourceId
        required: true
        schema:
          type: integer
          format: int64
      - in: query
        name: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
    put:
      operationId: updateCampaign
      parameters:
      - in: path
        name: resourceId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
  /v1/email/configuration:
    get:
      operationId: retrieveAll_5
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
    put:
      operationId: updateConfiguration
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
  /v1/email/failedEmail:
    get:
      operationId: retrieveFailedEmail
      parameters:
      - in: query
        name: sqlSearch
        schema:
          type: string
      - in: query
        name: offset
        schema:
          type: integer
          format: int32
      - in: query
        name: limit
        schema:
          type: integer
          format: int32
      - in: query
        name: orderBy
        schema:
          type: string
      - in: query
        name: sortOrder
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
  /v1/email/messageByStatus:
    get:
      operationId: retrieveAllEmailByStatus
      parameters:
      - in: query
        name: sqlSearch
        schema:
          type: string
      - in: query
        name: offset
        schema:
          type: integer
          format: int32
      - in: query
        name: limit
        schema:
          type: integer
          format: int32
      - in: query
        name: status
        schema:
          type: integer
          format: int32
      - in: query
        name: orderBy
        schema:
          type: string
      - in: query
        name: sortOrder
        schema:
          type: string
      - in: query
        name: fromDate
        schema:
          $ref: '#/components/schemas/DateParam'
      - in: query
        name: toDate
        schema:
          $ref: '#/components/schemas/DateParam'
      - in: query
        name: locale
        schema:
          type: string
      - in: query
        name: dateFormat
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
  /v1/email/pendingEmail:
    get:
      operationId: retrievePendingEmail
      parameters:
      - in: query
        name: offset
        schema:
          type: integer
          format: int32
      - in: query
        name: limit
        schema:
          type: integer
          format: int32
      - in: query
        name: orderBy
        schema:
          type: string
      - in: query
        name: sortOrder
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
  /v1/email/sentEmail:
    get:
      operationId: retrieveSentEmail
      parameters:
      - in: query
        name: offset
        schema:
          type: integer
          format: int32
      - in: query
        name: limit
        schema:
          type: integer
          format: int32
      - in: query
        name: orderBy
        schema:
          type: string
      - in: query
        name: sortOrder
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
  /v1/email/{resourceId}:
    delete:
      operationId: delete_1
      parameters:
      - in: path
        name: resourceId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
    get:
      operationId: retrieveOne_1
      parameters:
      - in: path
        name: resourceId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
    put:
      operationId: update_2
      parameters:
      - in: path
        name: resourceId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
  /v1/entityDatatableChecks:
    get:
      description: |-
        The list capability of Entity-Datatable Checks can support pagination.

        OPTIONAL ARGUMENTS
        offset Integer optional, defaults to 0 Indicates the result from which pagination startslimit Integer optional, defaults to 200 Restricts the size of results returned. To override the default and return all entries you must explicitly pass a non-positive integer value for limit e.g. limit=0, or limit=-1
        Example Request:

        entityDatatableChecks?offset=0&limit=15
      operationId: retrieveAll_6
      parameters:
      - description: status
        in: query
        name: status
        schema:
          type: integer
          format: int64
      - description: entity
        in: query
        name: entity
        schema:
          type: string
      - description: productId
        in: query
        name: productId
        schema:
          type: integer
          format: int64
      - description: offset
        in: query
        name: offset
        schema:
          type: integer
          format: int32
      - description: limit
        in: query
        name: limit
        schema:
          type: integer
          format: int32
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetEntityDatatableChecksResponse'
          description: OK
      summary: List Entity-Datatable Checks
      tags:
      - Entity Data Table
    post:
      description: "Mandatory Fields : \nentity, status, datatableName\n\nNon-Mandatory\
        \ Fields : \nproductId"
      operationId: createEntityDatatableCheck
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostEntityDatatableChecksTemplateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostEntityDatatableChecksTemplateResponse'
          description: OK
      summary: Create Entity-Datatable Checks
      tags:
      - Entity Data Table
  /v1/entityDatatableChecks/template:
    get:
      description: |-
        This is a convenience resource useful for building maintenance user interface screens for Entity-Datatable Checks applications. The template data returned consists of:

        Allowed description Lists
        Example Request:

        entityDatatableChecks/template
      operationId: getTemplate
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEntityDatatableChecksTemplateResponse'
          description: OK
      summary: Retrieve Entity-Datatable Checks Template
      tags:
      - Entity Data Table
  /v1/entityDatatableChecks/{entityDatatableCheckId}:
    delete:
      description: Deletes an existing Entity-Datatable Check
      operationId: deleteDatatable_1
      parameters:
      - description: entityDatatableCheckId
        in: path
        name: entityDatatableCheckId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteEntityDatatableChecksTemplateResponse'
          description: OK
      summary: Delete Entity-Datatable Checks
      tags:
      - Entity Data Table
  /v1/entitytoentitymapping:
    get:
      operationId: retrieveAll_7
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Fineract Entity
  /v1/entitytoentitymapping/{mapId}:
    delete:
      operationId: delete_4
      parameters:
      - in: path
        name: mapId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Fineract Entity
    get:
      operationId: retrieveOne_4
      parameters:
      - in: path
        name: mapId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Fineract Entity
    put:
      operationId: updateMap
      parameters:
      - in: path
        name: mapId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Fineract Entity
  /v1/entitytoentitymapping/{mapId}/{fromId}/{toId}:
    get:
      operationId: getEntityToEntityMappings
      parameters:
      - in: path
        name: mapId
        required: true
        schema:
          type: integer
          format: int64
      - in: path
        name: fromId
        required: true
        schema:
          type: integer
          format: int64
      - in: path
        name: toId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Fineract Entity
  /v1/entitytoentitymapping/{relId}:
    post:
      operationId: createMap
      parameters:
      - in: path
        name: relId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Fineract Entity
  /v1/external-asset-owners/owners/external-id/{ownerExternalId}/journal-entries:
    get:
      description: Retrieve Journal entries of owner by owner externalId
      operationId: getJournalEntriesOfOwner
      parameters:
      - description: ownerExternalId
        in: path
        name: ownerExternalId
        required: true
        schema:
          type: string
      - description: offset
        in: query
        name: offset
        schema:
          type: integer
          format: int32
      - description: limit
        in: query
        name: limit
        schema:
          type: integer
          format: int32
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalOwnerJournalEntryData'
          description: default response
      summary: Retrieve Journal Entries of Owner
      tags:
      - External Asset Owners
  /v1/external-asset-owners/search:
    post:
      operationId: searchInvestorData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PagedRequestExternalAssetOwnerSearchRequest'
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageExternalTransferData'
          description: default response
      summary: Search External Asset Owner Transfers by text or date ranges to settlement
        or effective dates
      tags:
      - External Asset Owners
  /v1/external-asset-owners/transfers:
    get:
      description: "Retrieve External Asset Owner Transfer items by transferExternalId,\
        \ loanId or loanExternalId"
      operationId: getTransfers
      parameters:
      - description: transferExternalId
        in: query
        name: transferExternalId
        schema:
          type: string
      - description: loanId
        in: query
        name: loanId
        schema:
          type: integer
          format: int64
      - description: loanExternalId
        in: query
        name: loanExternalId
        schema:
          type: string
      - description: offset
        in: query
        name: offset
        schema:
          type: integer
          format: int32
      - description: limit
        in: query
        name: limit
        schema:
          type: integer
          format: int32
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageExternalTransferData'
          description: default response
      summary: Retrieve External Asset Owner Transfers
      tags:
      - External Asset Owners
  /v1/external-asset-owners/transfers/active-transfer:
    get:
      description: "Retrieve Active External Asset Owner Transfer by transferExternalId,\
        \ loanId or loanExternalId"
      operationId: getActiveTransfer
      parameters:
      - description: transferExternalId
        in: query
        name: transferExternalId
        schema:
          type: string
      - description: loanId
        in: query
        name: loanId
        schema:
          type: integer
          format: int64
      - description: loanExternalId
        in: query
        name: loanExternalId
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalTransferData'
          description: default response
      summary: Retrieve Active Asset Owner Transfer
      tags:
      - External Asset Owners
  /v1/external-asset-owners/transfers/external-id/{externalId}:
    post:
      operationId: transferRequestWithId_1
      parameters:
      - in: path
        name: externalId
        required: true
        schema:
          type: string
      - description: command
        in: query
        name: command
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostInitiateTransferResponse'
          description: OK
        "403":
          description: Transfer cannot be initiated
      tags:
      - External Asset Owners
  /v1/external-asset-owners/transfers/loans/external-id/{loanExternalId}:
    post:
      operationId: transferRequestWithLoanExternalId
      parameters:
      - in: path
        name: loanExternalId
        required: true
        schema:
          type: string
      - description: command
        in: query
        name: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostInitiateTransferRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostInitiateTransferResponse'
          description: OK
        "403":
          description: Transfer cannot be initiated
      tags:
      - External Asset Owners
  /v1/external-asset-owners/transfers/loans/{loanId}:
    post:
      operationId: transferRequestWithLoanId
      parameters:
      - in: path
        name: loanId
        required: true
        schema:
          type: integer
          format: int64
      - description: command
        in: query
        name: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostInitiateTransferRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostInitiateTransferResponse'
          description: OK
        "403":
          description: Transfer cannot be initiated
      tags:
      - External Asset Owners
  /v1/external-asset-owners/transfers/{id}:
    post:
      operationId: transferRequestWithId
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
          format: int64
      - description: command
        in: query
        name: command
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostInitiateTransferResponse'
          description: OK
        "403":
          description: Transfer cannot be initiated
      tags:
      - External Asset Owners
  /v1/external-asset-owners/transfers/{transferId}/journal-entries:
    get:
      description: Retrieve Journal entries of receiveTransfer by transferId
      operationId: getJournalEntriesOfTransfer
      parameters:
      - description: transferId
        in: path
        name: transferId
        required: true
        schema:
          type: integer
          format: int64
      - description: offset
        in: query
        name: offset
        schema:
          type: integer
          format: int32
      - description: limit
        in: query
        name: limit
        schema:
          type: integer
          format: int32
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalOwnerTransferJournalEntryData'
          description: default response
      summary: Retrieve Journal Entries of Transfer
      tags:
      - External Asset Owners
  /v1/externalevents/configuration:
    get:
      operationId: retrieveExternalEventConfiguration
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetExternalEventConfigurationsResponse'
          description: List of all external event configurations
      summary: List all external event configurations
      tags:
      - External event configuration
    put:
      operationId: updateExternalEventConfigurationsDetails
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutExternalEventConfigurationsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommandProcessingResult'
          description: OK
      summary: Enable/Disable external events posting
      tags:
      - External event configuration
  /v1/externalservice/{servicename}:
    get:
      description: |-
        Returns a external Service configurations based on the Service Name.

        Service Names supported are S3 and SMTP.

        Example Requests:

        externalservice/SMTP
      operationId: retrieveOne_2
      parameters:
      - description: servicename
        in: path
        name: servicename
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalServicesPropertiesData'
          description: OK
      summary: Retrieve External Services Configuration
      tags:
      - External Services
    put:
      description: "Updates the external Service Configuration for a Service Name.\n\
        \nExample: \n\nexternalservice/S3"
      operationId: updateExternalServiceProperties
      parameters:
      - description: servicename
        in: path
        name: servicename
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutExternalServiceRequest'
        required: true
      responses:
        "200":
          description: OK
      summary: Update External Service
      tags:
      - External Services
  /v1/fieldconfiguration/{entity}:
    get:
      description: It retrieves all the Entity Field Configuration
      operationId: getAddresses
      parameters:
      - description: entity
        in: path
        name: entity
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetFieldConfigurationEntityResponse'
          description: OK
      summary: Retrieves the Entity Field Configuration
      tags:
      - Entity Field Configuration
  /v1/financialactivityaccounts:
    get:
      description: |-
        Example Requests:

        financialactivityaccounts
      operationId: retrieveAll
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetFinancialActivityAccountsResponse'
          description: OK
      summary: List Financial Activities to Accounts Mappings
      tags:
      - Mapping Financial Activities to Accounts
    post:
      description: |-
        Mandatory Fields
        financialActivityId, glAccountId
      operationId: createGLAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostFinancialActivityAccountsRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostFinancialActivityAccountsResponse'
          description: OK
      summary: Create a new Financial Activity to Accounts Mapping
      tags:
      - Mapping Financial Activities to Accounts
  /v1/financialactivityaccounts/template:
    get:
      operationId: retrieveTemplate
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Mapping Financial Activities to Accounts
  /v1/financialactivityaccounts/{mappingId}:
    delete:
      operationId: deleteGLAccount
      parameters:
      - description: mappingId
        in: path
        name: mappingId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteFinancialActivityAccountsResponse'
          description: OK
      summary: Delete a Financial Activity to Account Mapping
      tags:
      - Mapping Financial Activities to Accounts
    get:
      description: |-
        Example Requests:

        financialactivityaccounts/1
      operationId: retreive
      parameters:
      - description: mappingId
        in: path
        name: mappingId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFinancialActivityAccountsResponse'
          description: OK
      summary: |
        Retrieve a Financial Activity to Account Mapping
      tags:
      - Mapping Financial Activities to Accounts
    put:
      description: "the API updates the Ledger account linked to a Financial Activity\
        \ \n"
      operationId: updateGLAccount
      parameters:
      - description: mappingId
        in: path
        name: mappingId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostFinancialActivityAccountsRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutFinancialActivityAccountsResponse'
          description: OK
      summary: Update a Financial Activity to Account Mapping
      tags:
      - Mapping Financial Activities to Accounts
  /v1/fixeddepositaccounts:
    get:
      description: |-
        Lists Fixed Deposit Accounts

        Example Requests:



        fixeddepositaccounts



        fixeddepositaccounts?fields=name
      operationId: retrieveAll_29
      parameters:
      - description: paged
        in: query
        name: paged
        schema:
          type: boolean
      - description: offset
        in: query
        name: offset
        schema:
          type: integer
          format: int32
      - description: limit
        in: query
        name: limit
        schema:
          type: integer
          format: int32
      - description: orderBy
        in: query
        name: orderBy
        schema:
          type: string
      - description: sortOrder
        in: query
        name: sortOrder
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetFixedDepositAccountsResponse'
          description: OK
      summary: List Fixed deposit applications/accounts
      tags:
      - Fixed Deposit Account
    post:
      description: |-
        Submits a new fixed deposit applicationMandatory Fields: clientId or groupId, productId, submittedOnDate, depositAmount, depositPeriod, depositPeriodFrequencyId

        Optional Fields: accountNo, externalId, fieldOfficerId,linkAccountId(if provided initial deposit amount will be collected from this account),transferInterestToSavings(By enabling this flag all interest postings will be transferred to linked saving account )
      operationId: submitApplication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostFixedDepositAccountsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostFixedDepositAccountsResponse'
          description: OK
      summary: Submit new fixed deposit application
      tags:
      - Fixed Deposit Account
  /v1/fixeddepositaccounts/downloadtemplate:
    get:
      operationId: getFixedDepositTemplate
      parameters:
      - in: query
        name: officeId
        schema:
          type: integer
          format: int64
      - in: query
        name: staffId
        schema:
          type: integer
          format: int64
      - in: query
        name: dateFormat
        schema:
          type: string
      responses:
        default:
          content:
            application/vnd.ms-excel: {}
          description: default response
      tags:
      - Fixed Deposit Account
  /v1/fixeddepositaccounts/template:
    get:
      description: |-
        This is a convenience resource. It can be useful when building maintenance user interface screens for fixed deposit applications. The template data returned consists of any or all of:



        Field Defaults

        Allowed Value ListsExample Requests:



        fixeddepositaccounts/template?clientId=1
      operationId: template_12
      parameters:
      - description: clientId
        in: query
        name: clientId
        schema:
          type: integer
          format: int64
      - description: groupId
        in: query
        name: groupId
        schema:
          type: integer
          format: int64
      - description: productId
        in: query
        name: productId
        schema:
          type: integer
          format: int64
      - description: staffInSelectedOfficeOnly
        in: query
        name: staffInSelectedOfficeOnly
        schema:
          type: boolean
          default: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFixedDepositAccountsTemplateResponse'
          description: OK
      summary: Retrieve Fixed Deposit Account Template
      tags:
      - Fixed Deposit Account
  /v1/fixeddepositaccounts/transaction/downloadtemplate:
    get:
      operationId: getFixedDepositTransactionTemplate
      parameters:
      - in: query
        name: officeId
        schema:
          type: integer
          format: int64
      - in: query
        name: dateFormat
        schema:
          type: string
      responses:
        default:
          content:
            application/vnd.ms-excel: {}
          description: default response
      tags:
      - Fixed Deposit Account
  /v1/fixeddepositaccounts/transaction/uploadtemplate:
    post:
      operationId: postFixedDepositTransactionTemplate
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadRequest'
        description: Upload fixed deposit transaction template
      responses:
        default:
          content:
            '*/*':
              schema:
                type: string
          description: default response
      tags:
      - Fixed Deposit Account
  /v1/fixeddepositaccounts/uploadtemplate:
    post:
      operationId: postFixedDepositTemplate
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadRequest'
        description: Upload fixed deposit template
      responses:
        default:
          content:
            '*/*':
              schema:
                type: string
          description: default response
      tags:
      - Fixed Deposit Account
  /v1/fixeddepositaccounts/{accountId}:
    delete:
      description: "At present we support hard delete of fixed deposit application\
        \ so long as its in 'Submitted and pending approval' state. One the application\
        \ is moves past this state, it is not possible to do a 'hard' delete of the\
        \ application or the account. An API endpoint will be added to close/de-activate\
        \ the fixed deposit account."
      operationId: delete_15
      parameters:
      - description: accountId
        in: path
        name: accountId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteFixedDepositAccountsAccountIdResponse'
          description: OK
      summary: Delete a fixed deposit application
      tags:
      - Fixed Deposit Account
    get:
      description: |-
        Retrieves a fixed deposit application/account

        Example Requests :



        fixeddepositaccounts/1

        fixeddepositaccounts/1?associations=all
      operationId: retrieveOne_19
      parameters:
      - description: accountId
        in: path
        name: accountId
        required: true
        schema:
          type: integer
          format: int64
      - description: staffInSelectedOfficeOnly
        in: query
        name: staffInSelectedOfficeOnly
        schema:
          type: boolean
          default: false
      - description: chargeStatus
        in: query
        name: chargeStatus
        schema:
          type: string
          default: all
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFixedDepositAccountsAccountIdResponse'
          description: OK
      summary: Retrieve a fixed deposit application/account
      tags:
      - Fixed Deposit Account
    post:
      description: |-
        Approve fixed deposit application:

        Approves fixed deposit application so long as its in 'Submitted and pending approval' state.

        Undo approval fixed deposit application:

        Will move 'approved' fixed deposit application back to 'Submitted and pending approval' state.

        Reject fixed deposit application:

        Rejects fixed deposit application so long as its in 'Submitted and pending approval' state.

        Withdraw fixed deposit application:

        Used when an applicant withdraws from the fixed deposit application. It must be in 'Submitted and pending approval' state.

        Close a fixed deposit account:

        Results in a Matured fixed deposit account being converted into a 'closed' fixed deposit account.

        Premature Close a fixed deposit account:

        Results in an Active fixed deposit account being converted into a 'Premature Closed' fixed deposit account with options to withdraw prematured amount. (premature amount is calculated using interest rate chart applicable along with penal interest if any.)

        Calculate Premature amount on Fixed deposit account:

        Calculate premature amount on fixed deposit account till premature close date. Premature amount is calculated based on interest chart and penal interest applicable.

        Calculate Interest on Fixed Deposit Account:

        Calculates interest earned on a fixed deposit account based on todays date. It does not attempt to post or credit the interest on the account. That is responsibility of the Post Interest API that will likely be called by overnight process.

        Post Interest on Fixed Deposit Account:

        Calculates and Posts interest earned on a fixed deposit account based on today's date and whether an interest posting or crediting event is due.

        Showing request/response for Calculate Interest on Fixed Deposit Account
      operationId: handleCommands_4
      parameters:
      - description: accountId
        in: path
        name: accountId
        required: true
        schema:
          type: integer
          format: int64
      - description: command
        in: query
        name: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostFixedDepositAccountsAccountIdRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostFixedDepositAccountsAccountIdResponse'
          description: OK
      summary: Approve fixed deposit application | Undo approval fixed deposit application
        | Reject fixed deposit application | Withdraw fixed deposit application |
        Activate a fixed deposit account | Close a fixed deposit account | Premature
        Close a fixed deposit account | Calculate Premature amount on Fixed deposit
        account | Calculate Interest on Fixed Deposit Account | Post Interest on Fixed
        Deposit Account
      tags:
      - Fixed Deposit Account
    put:
      description: "Fixed deposit application can only be modified when in 'Submitted\
        \ and pending approval' state. Once the application is approved, the details\
        \ cannot be changed using this method. Specific api endpoints will be created\
        \ to allow change of interest detail such as rate, compounding period, posting\
        \ period etc"
      operationId: update_16
      parameters:
      - description: accountId
        in: path
        name: accountId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutFixedDepositAccountsAccountIdRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutFixedDepositAccountsAccountIdResponse'
          description: OK
      summary: Modify a fixed deposit application
      tags:
      - Fixed Deposit Account
  /v1/fixeddepositaccounts/{accountId}/template:
    get:
      operationId: accountClosureTemplate
      parameters:
      - description: accountId
        in: path
        name: accountId
        required: true
        schema:
          type: integer
          format: int64
      - description: command
        in: query
        name: command
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Fixed Deposit Account
  /v1/fixeddepositaccounts/{fixedDepositAccountId}/transactions:
    post:
      operationId: transaction
      parameters:
      - in: path
        name: fixedDepositAccountId
        required: true
        schema:
          type: integer
          format: int64
      - in: query
        name: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Fixed Deposit Account Transactions
  /v1/fixeddepositaccounts/{fixedDepositAccountId}/transactions/template:
    get:
      operationId: retrieveTemplate_14
      parameters:
      - in: path
        name: fixedDepositAccountId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Fixed Deposit Account Transactions
  /v1/fixeddepositaccounts/{fixedDepositAccountId}/transactions/{transactionId}:
    get:
      operationId: retrieveOne_18
      parameters:
      - in: path
        name: fixedDepositAccountId
        required: true
        schema:
          type: integer
          format: int64
      - in: path
        name: transactionId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Fixed Deposit Account Transactions
    post:
      operationId: adjustTransaction
      parameters:
      - in: path
        name: fixedDepositAccountId
        required: true
        schema:
          type: integer
          format: int64
      - in: path
        name: transactionId
        required: true
        schema:
          type: integer
          format: int64
      - in: query
        name: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Fixed Deposit Account Transactions
  /v1/fixeddepositproducts:
    get:
      description: |-
        Lists Fixed Deposit Products

        Example Requests:

        fixeddepositproducts


        fixeddepositproducts?fields=name
      operationId: retrieveAll_30
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetFixedDepositProductsResponse'
          description: OK
      summary: List Fixed Deposit Products
      tags:
      - Fixed Deposit Product
    post:
      description: |-
        Creates a Fixed Deposit Product

        Mandatory Fields: name, shortName, description, currencyCode, digitsAfterDecimal,inMultiplesOf, interestCompoundingPeriodType, interestCalculationType, interestCalculationDaysInYearType, minDepositTerm, minDepositTermTypeId, accountingRule

        Optional Fields: lockinPeriodFrequency, lockinPeriodFrequencyType, maxDepositTerm, maxDepositTermTypeId, inMultiplesOfDepositTerm, inMultiplesOfDepositTermTypeId, preClosurePenalApplicable, preClosurePenalInterest, preClosurePenalInterestOnTypeId, feeToIncomeAccountMappings, penaltyToIncomeAccountMappings, charges, charts, , withHoldTax, taxGroupId


        Mandatory Fields for Cash based accounting (accountingRule = 2): savingsReferenceAccountId, savingsControlAccountId, interestOnSavingsAccountId, incomeFromFeeAccountId, transfersInSuspenseAccountId, incomeFromPenaltyAccountId
      operationId: create_11
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostFixedDepositProductsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostFixedDepositProductsResponse'
          description: OK
      summary: Create a Fixed Deposit Product
      tags:
      - Fixed Deposit Product
  /v1/fixeddepositproducts/template:
    get:
      operationId: retrieveTemplate_15
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Fixed Deposit Product
  /v1/fixeddepositproducts/{productId}:
    delete:
      description: Deletes a Fixed Deposit Product
      operationId: delete_16
      parameters:
      - description: productId
        in: path
        name: productId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteFixedDepositProductsProductIdResponse'
          description: OK
      summary: Delete a Fixed Deposit Product
      tags:
      - Fixed Deposit Product
    get:
      description: |-
        Retrieves a Fixed Deposit Product

        Example Requests:

        fixeddepositproducts/1


        fixeddepositproducts/1?template=true


        fixeddepositproducts/1?fields=name,description
      operationId: retrieveOne_20
      parameters:
      - description: productId
        in: path
        name: productId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFixedDepositProductsProductIdResponse'
          description: OK
      summary: Retrieve a Fixed Deposit Product
      tags:
      - Fixed Deposit Product
    put:
      description: Updates a Fixed Deposit Product
      operationId: update_17
      parameters:
      - description: productId
        in: path
        name: productId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutFixedDepositProductsProductIdRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutFixedDepositProductsProductIdResponse'
          description: OK
      summary: Update a Fixed Deposit Product
      tags:
      - Fixed Deposit Product
  /v1/floatingrates:
    get:
      description: Lists Floating Rates
      operationId: retrieveAll_22
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetFloatingRatesResponse'
          description: OK
      summary: List Floating Rates
      tags:
      - Floating Rates
    post:
      description: |-
        Creates a new Floating Rate
        Mandatory Fields: name
        Optional Fields: isBaseLendingRate, isActive, ratePeriods
      operationId: createFloatingRate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostFloatingRatesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostFloatingRatesResponse'
          description: OK
      summary: Create a new Floating Rate
      tags:
      - Floating Rates
  /v1/floatingrates/{floatingRateId}:
    get:
      description: Retrieves Floating Rate
      operationId: retrieveOne_13
      parameters:
      - description: floatingRateId
        in: path
        name: floatingRateId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFloatingRatesFloatingRateIdResponse'
          description: OK
      summary: Retrieve Floating Rate
      tags:
      - Floating Rates
    put:
      description: Updates new Floating Rate. Rate Periods in the past cannot be modified.
        All the future rateperiods would be replaced with the new ratePeriods data
        sent.
      operationId: updateFloatingRate
      parameters:
      - description: floatingRateId
        in: path
        name: floatingRateId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutFloatingRatesFloatingRateIdRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutFloatingRatesFloatingRateIdResponse'
          description: OK
      summary: Update Floating Rate
      tags:
      - Floating Rates
  /v1/funds:
    get:
      description: |-
        Returns the list of funds.

        Example Requests:

        funds
      operationId: retrieveFunds
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetFundsResponse'
          description: OK
      summary: Retrieve Funds
      tags:
      - Funds
    post:
      description: Creates a Fund
      operationId: createFund
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostFundsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostFundsResponse'
          description: OK
      summary: Create a Fund
      tags:
      - Funds
  /v1/funds/{fundId}:
    get:
      description: |-
        Returns the details of a Fund.

        Example Requests:

        funds/1
      operationId: retrieveFund
      parameters:
      - description: fundId
        in: path
        name: fundId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFundsResponse'
          description: OK
      summary: Retrieve a Fund
      tags:
      - Funds
    put:
      description: Updates the details of a fund.
      operationId: updateFund
      parameters:
      - description: fundId
        in: path
        name: fundId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutFundsFundIdRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutFundsFundIdResponse'
          description: OK
      summary: Update a Fund
      tags:
      - Funds
  /v1/glaccounts:
    get:
      description: |-
        ARGUMENTS
        type Integer optional manualEntriesAllowed boolean optional usage Integer optional disabled boolean optional parentId Long optional tagId Long optional
        Example Requests:

        glaccounts


        glaccounts?type=1&manualEntriesAllowed=true&usage=1&disabled=false

        glaccounts?fetchRunningBalance=true
      operationId: retrieveAllAccounts
      parameters:
      - description: type
        in: query
        name: type
        schema:
          type: integer
          format: int32
      - description: searchParam
        in: query
        name: searchParam
        schema:
          type: string
      - description: usage
        in: query
        name: usage
        schema:
          type: integer
          format: int32
      - description: manualEntriesAllowed
        in: query
        name: manualEntriesAllowed
        schema:
          type: boolean
      - description: disabled
        in: query
        name: disabled
        schema:
          type: boolean
      - description: fetchRunningBalance
        in: query
        name: fetchRunningBalance
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetGLAccountsResponse'
          description: OK
      summary: List General Ledger Accounts
      tags:
      - General Ledger Account
    post:
      description: "Note: You may optionally create Hierarchical Chart of Accounts\
        \ by using the \"parentId\" property of an Account\nMandatory Fields: \nname,\
        \ glCode, type, usage and manualEntriesAllowed"
      operationId: createGLAccount_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostGLAccountsRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostGLAccountsResponse'
          description: OK
      summary: Create a General Ledger Account
      tags:
      - General Ledger Account
  /v1/glaccounts/downloadtemplate:
    get:
      operationId: getGlAccountsTemplate
      parameters:
      - in: query
        name: dateFormat
        schema:
          type: string
      responses:
        default:
          content:
            application/vnd.ms-excel: {}
          description: default response
      tags:
      - General Ledger Account
  /v1/glaccounts/template:
    get:
      description: "This is a convenience resource. It can be useful when building\
        \ maintenance user interface screens for client applications. The template\
        \ data returned consists of any or all of:\n\nField Defaults\nAllowed Value\
        \ Lists\nExample Request:\n\nglaccounts/template\nglaccounts/template?type=1\n\
        \ntype is optional and integer value from 1 to 5.\n\n1.Assets \n2.Liabilities\
        \ \n3.Equity \n4.Income \n5.Expenses"
      operationId: retrieveNewAccountDetails
      parameters:
      - description: type
        in: query
        name: type
        schema:
          type: integer
          format: int32
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGLAccountsTemplateResponse'
          description: OK
      summary: Retrieve GL Accounts Template
      tags:
      - General Ledger Account
  /v1/glaccounts/uploadtemplate:
    post:
      operationId: postGlAccountsTemplate
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadRequest'
        description: Upload GL accounts template
      responses:
        default:
          content:
            '*/*':
              schema:
                type: string
          description: default response
      tags:
      - General Ledger Account
  /v1/glaccounts/{glAccountId}:
    delete:
      description: Deletes a GL Account
      operationId: deleteGLAccount_1
      parameters:
      - description: glAccountId
        in: path
        name: glAccountId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteGLAccountsRequest'
          description: OK
      summary: Delete a GL Account
      tags:
      - General Ledger Account
    get:
      description: |-
        Example Requests:

        glaccounts/1


        glaccounts/1?template=true


        glaccounts/1?fields=name,glCode


        glaccounts/1?fetchRunningBalance=true
      operationId: retreiveAccount
      parameters:
      - description: glAccountId
        in: path
        name: glAccountId
        required: true
        schema:
          type: integer
          format: int64
      - description: fetchRunningBalance
        in: query
        name: fetchRunningBalance
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGLAccountsResponse'
          description: OK
      summary: Retrieve a General Ledger Account
      tags:
      - General Ledger Account
    put:
      description: Updates a GL Account
      operationId: updateGLAccount_1
      parameters:
      - description: glAccountId
        in: path
        name: glAccountId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutGLAccountsRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutGLAccountsResponse'
          description: OK
      summary: Update a GL Account
      tags:
      - General Ledger Account
  /v1/glclosures:
    get:
      description: |-
        Example Requests:

        glclosures
      operationId: retrieveAllClosures
      parameters:
      - in: query
        name: officeId
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetGlClosureResponse'
          description: OK
      summary: List Accounting closures
      tags:
      - Accounting Closure
    post:
      description: |-
        Mandatory Fields
        officeId,closingDate
      operationId: createGLClosure
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostGlClosuresRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostGlClosuresResponse'
          description: OK
      summary: Create an Accounting Closure
      tags:
      - Accounting Closure
  /v1/glclosures/{glClosureId}:
    delete:
      description: "Note: Only the latest accounting closure associated with a branch\
        \ may be deleted."
      operationId: deleteGLClosure
      parameters:
      - description: glclosureId
        in: path
        name: glClosureId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteGlClosuresResponse'
          description: OK
      summary: Delete an accounting closure
      tags:
      - Accounting Closure
    get:
      description: |-
        Example Requests:

        glclosures/1


        /glclosures/1?fields=officeName,closingDate
      operationId: retreiveClosure
      parameters:
      - description: glClosureId
        in: path
        name: glClosureId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGlClosureResponse'
          description: OK
      summary: Retrieve an Accounting Closure
      tags:
      - Accounting Closure
    put:
      description: "Once an accounting closure is created, only the comments associated\
        \ with it may be edited"
      operationId: updateGLClosure
      parameters:
      - description: glClosureId
        in: path
        name: glClosureId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutGlClosuresRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutGlClosuresResponse'
          description: OK
      summary: Update an Accounting closure
      tags:
      - Accounting Closure
  /v1/grouplevels:
    get:
      operationId: retrieveAllGroups
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Groups Level
  /v1/groups:
    get:
      description: |-
        The default implementation of listing Groups returns 200 entries with support for pagination and sorting. Using the parameter limit with description -1 returns all entries.

        Example Requests:



        groups



        groups?fields=name,officeName,joinedDate



        groups?offset=10&limit=50



        groups?orderBy=name&sortOrder=DESC
      operationId: retrieveAll_24
      parameters:
      - description: officeId
        in: query
        name: officeId
        schema:
          type: integer
          format: int64
      - description: staffId
        in: query
        name: staffId
        schema:
          type: integer
          format: int64
      - description: externalId
        in: query
        name: externalId
        schema:
          type: string
      - description: name
        in: query
        name: name
        schema:
          type: string
      - description: underHierarchy
        in: query
        name: underHierarchy
        schema:
          type: string
      - description: paged
        in: query
        name: paged
        schema:
          type: boolean
      - description: offset
        in: query
        name: offset
        schema:
          type: integer
          format: int32
      - description: limit
        in: query
        name: limit
        schema:
          type: integer
          format: int32
      - description: orderBy
        in: query
        name: orderBy
        schema:
          type: string
      - description: sortOrder
        in: query
        name: sortOrder
        schema:
          type: string
      - description: orphansOnly
        in: query
        name: orphansOnly
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGroupsResponse'
          description: OK
      summary: List Groups
      tags:
      - Groups
    post:
      description: |-
        Creates a Group

        Mandatory Fields: name, officeId, active, activationDate (if active=true)

        Optional Fields: externalId, staffId, clientMembers
      operationId: create_8
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostGroupsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostGroupsResponse'
          description: OK
      summary: Create a Group
      tags:
      - Groups
  /v1/groups/downloadtemplate:
    get:
      operationId: getGroupsTemplate
      parameters:
      - in: query
        name: officeId
        schema:
          type: integer
          format: int64
      - in: query
        name: staffId
        schema:
          type: integer
          format: int64
      - in: query
        name: dateFormat
        schema:
          type: string
      responses:
        default:
          content:
            application/vnd.ms-excel: {}
          description: default response
      tags:
      - Groups
  /v1/groups/template:
    get:
      description: |-
        This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:



        Field Defaults

        Allowed Value Lists

        Example Requests:



        groups/template



        groups/template?officeId=2



        groups/template?centerId=1



        groups/template?centerId=1&staffInSelectedOfficeOnly=true
      operationId: retrieveTemplate_7
      parameters:
      - description: officeId
        in: query
        name: officeId
        schema:
          type: integer
          format: int64
      - description: center
        in: query
        name: center
        schema:
          type: boolean
      - description: centerId
        in: query
        name: centerId
        schema:
          type: integer
          format: int64
      - description: command
        in: query
        name: command
        schema:
          type: string
      - description: staffInSelectedOfficeOnly
        in: query
        name: staffInSelectedOfficeOnly
        schema:
          type: boolean
          default: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGroupsTemplateResponse'
          description: OK
      summary: Retrieve Group Template
      tags:
      - Groups
  /v1/groups/uploadtemplate:
    post:
      operationId: postGroupTemplate
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadRequest'
        description: Upload group template
      responses:
        default:
          content:
            '*/*':
              schema:
                type: string
          description: default response
      tags:
      - Groups
  /v1/groups/{groupId}:
    delete:
      description: "A group can be deleted if it is in pending state and has no associations\
        \ - clients, loans or savings"
      operationId: delete_12
      parameters:
      - description: groupId
        in: path
        name: groupId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteGroupsGroupIdResponse'
          description: OK
      summary: Delete a Group
      tags:
      - Groups
    get:
      description: |-
        Retrieve group information.

        Example Requests:



        groups/1



        groups/1?associations=clientMembers
      operationId: retrieveOne_15
      parameters:
      - description: groupId
        in: path
        name: groupId
        required: true
        schema:
          type: integer
          format: int64
      - description: staffInSelectedOfficeOnly
        in: query
        name: staffInSelectedOfficeOnly
        schema:
          type: boolean
          default: false
      - description: roleId
        in: query
        name: roleId
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGroupsGroupIdResponse'
          description: OK
      summary: Retrieve a Group
      tags:
      - Groups
    post:
      description: |-
        Activate a Group:

        Groups can be created in a Pending state. This API exists to enable group activation.



        If the group happens to be already active this API will result in an error.

        Mandatory Fields: activationDate

        Associate Clients:

        This API allows to associate existing clients to a group.



        The clients are listed from the office to which the group is associated.



        If client(s) is already associated with group then API will result in an error.

        Mandatory Fields: clientMembers

        Disassociate Clients:

        This API allows to disassociate clients from a group.



        Disassociating a client with active joint liability group loans results in an error.

        Mandatory Fields: clientMembers

        Transfer Clients across groups:

        This API allows to transfer clients from one group to another

        Mandatory Fields: destinationGroupId and clients

        Optional Fields: inheritDestinationGroupLoanOfficer (defaults to true) and transferActiveLoans (defaults to true)

        Generate Collection Sheet:

        This API retrieves repayment details of all jlg loans of all members of a group on a specified meeting date.

        Mandatory Fields: calendarId and transactionDate

        Save Collection Sheet:

        This api allows the loan officer to perform bulk repayments of JLG loans for a group on its meeting date.

        Mandatory Fields: calendarId, transactionDate, actualDisbursementDate

        Optional Fields: clientsAttendance, bulkRepaymentTransaction, bulkDisbursementTransactions

        Unassign a Staff:

        Allows you to unassign the Staff.

        Mandatory Fields: staffId

        Assign a Staff:

        Allows you to assign Staff to an existing Group.



        The selected Staff should be belong to the same office (or an office higher up in the hierarchy) as this groupMandatory Fields: staffId

        Optional Fields: inheritStaffForClientAccounts (Optional: Boolean if true all members of the group (i.e all clients with active loans and savings ) will inherit the staffId)

        Close a Group:

        This API exists to close a group. Groups can be closed if they don't have any non-closed clients/loans/savingsAccounts.



        If the group has any active clients/loans/savingsAccount, this API will result in an error.Assign a Role:

        Allows you to assign a Role to an existing member of a group.



        We can define the different roles applicable to group members by adding code values to the pre-defined system code GROUPROLE. Example:Group leader etc.

        Mandatory Fields: clientId, role

        Unassign a Role:

        Allows you to unassign Roles associated tp Group members.

        Update a Role:

        Allows you to update the member Role.

        Mandatory Fields: role

        Showing request/response for Transfer Clients across groups
      operationId: activateOrGenerateCollectionSheet
      parameters:
      - description: groupId
        in: path
        name: groupId
        required: true
        schema:
          type: integer
          format: int64
      - description: command
        in: query
        name: command
        schema:
          type: string
      - description: roleId
        in: query
        name: roleId
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostGroupsGroupIdRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostGroupsGroupIdResponse'
          description: OK
      summary: Activate a Group | Associate Clients | Disassociate Clients | Transfer
        Clients across groups | Generate Collection Sheet | Save Collection Sheet
        | Unassign a Staff | Assign a Staff | Close a Group | Unassign a Role | Update
        a Role
      tags:
      - Groups
    put:
      description: Updates a Group
      operationId: update_13
      parameters:
      - description: groupId
        in: path
        name: groupId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutGroupsGroupIdRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutGroupsGroupIdResponse'
          description: OK
      summary: Update a Group
      tags:
      - Groups
  /v1/groups/{groupId}/accounts:
    get:
      description: |-
        Retrieves details of all Loan and Savings accounts associated with this group.



        Example Requests:



        groups/1/accounts





        groups/1/accounts?fields=loanAccounts,savingsAccounts,memberLoanAccounts,

        memberSavingsAccounts
      operationId: retrieveAccounts
      parameters:
      - description: groupId
        in: path
        name: groupId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGroupsGroupIdAccountsResponse'
          description: OK
      summary: Retrieve Group accounts overview
      tags:
      - Groups
  /v1/groups/{groupId}/command/unassign_staff:
    post:
      description: |-
        Allows you to unassign the Staff.

        Mandatory Fields: staffId
      operationId: unassignLoanOfficer
      parameters:
      - description: groupId
        in: path
        name: groupId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostGroupsGroupIdCommandUnassignStaffRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostGroupsGroupIdCommandUnassignStaffResponse'
          description: OK
      summary: Unassign a Staff
      tags:
      - Groups
  /v1/groups/{groupId}/glimaccounts:
    get:
      operationId: retrieveglimAccounts
      parameters:
      - in: path
        name: groupId
        required: true
        schema:
          type: integer
          format: int64
      - in: query
        name: parentLoanAccountNo
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Groups
  /v1/groups/{groupId}/gsimaccounts:
    get:
      operationId: retrieveGsimAccounts
      parameters:
      - in: path
        name: groupId
        required: true
        schema:
          type: integer
          format: int64
      - in: query
        name: parentGSIMAccountNo
        schema:
          type: string
      - in: query
        name: parentGSIMId
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Groups
  /v1/holidays:
    get:
      description: |-
        Example Requests:

        holidays?officeId=1
      operationId: retrieveAllHolidays
      parameters:
      - description: officeId
        in: query
        name: officeId
        schema:
          type: integer
          format: int64
      - description: fromDate
        in: query
        name: fromDate
        schema:
          $ref: '#/components/schemas/DateParam'
      - description: toDate
        in: query
        name: toDate
        schema:
          $ref: '#/components/schemas/DateParam'
      - description: locale
        in: query
        name: locale
        schema:
          type: string
      - description: dateFormat
        in: query
        name: dateFormat
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetHolidaysResponse'
          description: OK
      summary: List Holidays
      tags:
      - Holidays
    post:
      description: "Mandatory Fields: name, description, fromDate, toDate, repaymentsRescheduledTo,\
        \ offices"
      operationId: createNewHoliday
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostHolidaysRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostHolidaysResponse'
          description: OK
      summary: Create a Holiday
      tags:
      - Holidays
  /v1/holidays/template:
    get:
      operationId: retrieveRepaymentScheduleUpdationTyeOptions
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Holidays
  /v1/holidays/{holidayId}:
    delete:
      description: This API allows to delete a holiday. This is a soft delete the
        deleted holiday status is marked as deleted.
      operationId: delete_7
      parameters:
      - description: holidayId
        in: path
        name: holidayId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteHolidaysHolidayIdResponse'
          description: OK
      summary: Delete a Holiday
      tags:
      - Holidays
    get:
      description: |-
        Example Requests:

        holidays/1
      operationId: retrieveOne_7
      parameters:
      - description: holidayId
        in: path
        name: holidayId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetHolidaysResponse'
          description: OK
      summary: Retrieve a Holiday
      tags:
      - Holidays
    post:
      description: |-
        Always Holidays are created in pending state. This API allows to activate a holiday.

        Only the active holidays are considered for rescheduling the loan repayment.
      operationId: handleCommands_1
      parameters:
      - description: holidayId
        in: path
        name: holidayId
        required: true
        schema:
          type: integer
          format: int64
      - description: command
        in: query
        name: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostHolidaysHolidayIdRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostHolidaysHolidayIdResponse'
          description: OK
      summary: Activate a Holiday
      tags:
      - Holidays
    put:
      description: If a holiday is in pending state (created and not activated) then
        all fields are allowed to modify. Once holidays become active only name and
        descriptions are allowed to modify.
      operationId: update_6
      parameters:
      - description: holidayId
        in: path
        name: holidayId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutHolidaysHolidayIdRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutHolidaysHolidayIdResponse'
          description: OK
      summary: Update a Holiday
      tags:
      - Holidays
  /v1/hooks:
    get:
      description: |-
        Returns the list of hooks.

        Example Requests:

        hooks
      operationId: retrieveHooks
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetHookResponse'
          description: OK
      summary: Retrieve Hooks
      tags:
      - Hooks
    post:
      description: |-
        The following parameters can be passed for the creation of a hook :-

        name - string - Required. The name of the template that is being called. (See /hooks/template for the list of valid hook names.)

        isActive - boolean - Determines whether the hook is actually triggered.

        events - array - Determines what events the hook is triggered for.

        config - hash - Required. Key/value pairs to provide settings for this hook. These settings vary between the templates.

        templateId - Optional. The UGD template ID associated with the same entity (client or loan).
      operationId: createHook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostHookRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostHookResponse'
          description: OK
      summary: Create a Hook
      tags:
      - Hooks
  /v1/hooks/template:
    get:
      description: |-
        This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:

        Field Defaults
        Allowed description Lists
        Example Request:

        hooks/template
      operationId: template_3
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetHookTemplateResponse'
          description: OK
      summary: Retrieve Hooks Template
      tags:
      - Hooks
  /v1/hooks/{hookId}:
    delete:
      description: Deletes a hook.
      operationId: deleteHook
      parameters:
      - description: hookId
        in: path
        name: hookId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteHookResponse'
          description: OK
      summary: Delete a Hook
      tags:
      - Hooks
    get:
      description: |-
        Returns the details of a Hook.

        Example Requests:

        hooks/1
      operationId: retrieveHook
      parameters:
      - description: hookId
        in: path
        name: hookId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetHookResponse'
          description: OK
      summary: Retrieve a Hook
      tags:
      - Hooks
    put:
      description: Updates the details of a hook.
      operationId: updateHook
      parameters:
      - description: hookId
        in: path
        name: hookId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutHookRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutHookResponse'
          description: OK
      summary: Update a Hook
      tags:
      - Hooks
  /v1/imports:
    get:
      operationId: retrieveImportDocuments
      parameters:
      - in: query
        name: entityType
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Bulk Import
  /v1/imports/downloadOutputTemplate:
    get:
      operationId: getOutputTemplate
      parameters:
      - in: query
        name: importDocumentId
        schema:
          type: string
      responses:
        default:
          content:
            application/vnd.ms-excel: {}
          description: default response
      tags:
      - Bulk Import
  /v1/imports/getOutputTemplateLocation:
    get:
      operationId: retriveOutputTemplateLocation
      parameters:
      - in: query
        name: importDocumentId
        schema:
          type: string
      responses:
        default:
          content:
            '*/*':
              schema:
                type: string
          description: default response
      tags:
      - Bulk Import
  /v1/instance-mode:
    put:
      operationId: changeMode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeInstanceModeRequest'
        required: true
      responses:
        "200":
          description: OK
      summary: Changes the Fineract instance mode
      tags:
      - Instance Mode
  /v1/interestratecharts:
    get:
      description: |-
        Retrieve list of charts associated with a term deposit product(FD or RD).
        Example Requests:

        interestratecharts?productId=1
      operationId: retrieveAll_26
      parameters:
      - description: productId
        in: query
        name: productId
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetInterestRateChartsResponse'
          description: OK
      summary: Retrieve all Charts
      tags:
      - Interest Rate Chart
    post:
      description: Creates a new chart which can be attached to a term deposit products
        (FD or RD).
      operationId: create_10
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostInterestRateChartsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostInterestRateChartsResponse'
          description: OK
      summary: Create a Chart
      tags:
      - Interest Rate Chart
  /v1/interestratecharts/template:
    get:
      description: |-
        This is a convenience resource. It can be useful when building maintenance user interface screens for creating a chart. The template data returned consists of any or all of:

        Field Defaults
        Allowed Value Lists
        Example Request:

        interestratecharts/template
      operationId: template_9
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInterestRateChartsTemplateResponse'
          description: OK
      summary: Retrieve Chart Details Template
      tags:
      - Interest Rate Chart
  /v1/interestratecharts/{chartId}:
    delete:
      description: It deletes the chart
      operationId: delete_14
      parameters:
      - description: chartId
        in: path
        name: chartId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteInterestRateChartsChartIdResponse'
          description: OK
      summary: Delete a Chart
      tags:
      - Interest Rate Chart
    get:
      description: |-
        It retrieves the Interest Rate Chart
        Example Requests:

        interestratecharts/1
      operationId: retrieveOne_17
      parameters:
      - description: chartId
        in: path
        name: chartId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInterestRateChartsResponse'
          description: OK
      summary: Retrieve a Chart
      tags:
      - Interest Rate Chart
    put:
      description: It updates the chart
      operationId: update_15
      parameters:
      - description: chartId
        in: path
        name: chartId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutInterestRateChartsChartIdRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutInterestRateChartsChartIdResponse'
          description: OK
      summary: Update a Chart
      tags:
      - Interest Rate Chart
  /v1/interestratecharts/{chartId}/chartslabs:
    get:
      description: |-
        Retrieve list of slabs associated with a chart

        Example Requests:

        interestratecharts/1/chartslabs
      operationId: retrieveAll_25
      parameters:
      - description: chartId
        in: path
        name: chartId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetInterestRateChartsChartIdChartSlabsResponse'
          description: OK
      summary: Retrieve all Slabs
      tags:
      - Interest Rate Slab (A.K.A interest bands)
    post:
      description: |-
        Creates a new interest rate slab for an interest rate chart.
        Mandatory Fields
        periodType, fromPeriod, annualInterestRate
        Optional Fields
        toPeriod and description
        Example Requests:

        interestratecharts/1/chartslabs
      operationId: create_9
      parameters:
      - description: chartId
        in: path
        name: chartId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostInterestRateChartsChartIdChartSlabsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostInterestRateChartsChartIdChartSlabsResponse'
          description: OK
      summary: Create a Slab
      tags:
      - Interest Rate Slab (A.K.A interest bands)
  /v1/interestratecharts/{chartId}/chartslabs/template:
    get:
      operationId: template_8
      parameters:
      - description: chartId
        in: path
        name: chartId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Interest Rate Slab (A.K.A interest bands)
  /v1/interestratecharts/{chartId}/chartslabs/{chartSlabId}:
    delete:
      description: Delete a Slab from a chart
      operationId: delete_13
      parameters:
      - description: chartId
        in: path
        name: chartId
        required: true
        schema:
          type: integer
          format: int64
      - description: chartSlabId
        in: path
        name: chartSlabId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteInterestRateChartsChartIdChartSlabsResponse'
          description: OK
      summary: Delete a Slab
      tags:
      - Interest Rate Slab (A.K.A interest bands)
    get:
      description: |
        Retrieve a slab associated with an Interest rate chart

        Example Requests:

        interestratecharts/1/chartslabs/1
      operationId: retrieveOne_16
      parameters:
      - description: chartId
        in: path
        name: chartId
        required: true
        schema:
          type: integer
          format: int64
      - description: chartSlabId
        in: path
        name: chartSlabId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInterestRateChartsChartIdChartSlabsResponse'
          description: OK
      summary: Retrieve a Slab
      tags:
      - Interest Rate Slab (A.K.A interest bands)
    put:
      description: It updates the Slab from chart
      operationId: update_14
      parameters:
      - description: chartId
        in: path
        name: chartId
        required: true
        schema:
          type: integer
          format: int64
      - description: chartSlabId
        in: path
        name: chartSlabId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutInterestRateChartsChartIdChartSlabsChartSlabIdRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutInterestRateChartsChartIdChartSlabsChartSlabIdResponse'
          description: OK
      summary: Update a Slab
      tags:
      - Interest Rate Slab (A.K.A interest bands)
  /v1/internal/client/{clientId}/audit:
    get:
      operationId: getClientAuditFields
      parameters:
      - in: path
        name: clientId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
  /v1/internal/cob/partitions/{partitionSize}:
    get:
      operationId: getCobPartitions
      parameters:
      - in: path
        name: partitionSize
        required: true
        schema:
          type: integer
          format: int32
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
  /v1/internal/externalevents:
    delete:
      operationId: deleteAllExternalEvents
      responses:
        default:
          content:
            '*/*': {}
          description: default response
    get:
      operationId: getAllExternalEvents
      parameters:
      - in: query
        name: idempotencyKey
        schema:
          type: string
      - in: query
        name: type
        schema:
          type: string
      - in: query
        name: category
        schema:
          type: string
      - in: query
        name: aggregateRootId
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
  /v1/internal/loan/status/{statusId}:
    get:
      operationId: getLoansByStatus
      parameters:
      - in: path
        name: statusId
        required: true
        schema:
          type: integer
          format: int32
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
  /v1/internal/loan/{loanId}/advanced-payment-allocation-rules:
    get:
      operationId: getAdvancedPaymentAllocationRulesOfLoan
      parameters:
      - in: path
        name: loanId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdvancedPaymentData'
          description: default response
  /v1/internal/loan/{loanId}/audit:
    get:
      operationId: getLoanAuditFields
      parameters:
      - in: path
        name: loanId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
  /v1/internal/loan/{loanId}/transaction/{transactionId}/audit:
    get:
      operationId: getLoanTransactionAuditFields
      parameters:
      - in: path
        name: loanId
        required: true
        schema:
          type: integer
          format: int64
      - in: path
        name: transactionId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
  /v1/internal/loans/{loanId}/place-lock/{lockOwner}:
    post:
      operationId: placeLockOnLoanAccount
      parameters:
      - in: path
        name: loanId
        required: true
        schema:
          type: integer
          format: int64
      - in: path
        name: lockOwner
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          content:
            application/json: {}
          description: default response
  /v1/interoperation/accounts/{accountId}:
    get:
      operationId: getAccountDetails
      parameters:
      - description: accountId
        in: path
        name: accountId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InteropAccountData'
          description: OK
      summary: Query Interoperation Account details
      tags:
      - Inter Operation
  /v1/interoperation/accounts/{accountId}/identifiers:
    get:
      operationId: getAccountIdentifiers
      parameters:
      - description: accountId
        in: path
        name: accountId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InteropIdentifiersResponseData'
          description: OK
      summary: Query Interoperation secondary identifiers by Account Id
      tags:
      - Inter Operation
  /v1/interoperation/accounts/{accountId}/kyc:
    get:
      operationId: getClientKyc
      parameters:
      - description: accountId
        in: path
        name: accountId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InteropKycResponseData'
          description: OK
      summary: Query KYC by Account Id
      tags:
      - Inter Operation
  /v1/interoperation/accounts/{accountId}/transactions:
    get:
      operationId: getAccountTransactions
      parameters:
      - description: accountId
        in: path
        name: accountId
        required: true
        schema:
          type: string
      - description: debit
        in: query
        name: debit
        schema:
          type: boolean
          default: true
      - description: credit
        in: query
        name: credit
        schema:
          type: boolean
          default: false
      - description: fromBookingDateTime
        in: query
        name: fromBookingDateTime
        schema:
          type: string
      - description: toBookingDateTime
        in: query
        name: toBookingDateTime
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InteropTransactionsData'
          description: OK
      summary: Query transactions by Account Id
      tags:
      - Inter Operation
  /v1/interoperation/health:
    get:
      operationId: health
      responses:
        "200":
          description: OK
      summary: Query Interoperation Health Request
      tags:
      - Inter Operation
  /v1/interoperation/parties/{idType}/{idValue}:
    delete:
      operationId: deleteAccountIdentifier
      parameters:
      - description: idType
        in: path
        name: idType
        required: true
        schema:
          type: string
          enum:
          - MSISDN
          - EMAIL
          - PERSONAL_ID
          - BUSINESS
          - DEVICE
          - ACCOUNT_ID
          - IBAN
          - ALIAS
      - description: idValue
        in: path
        name: idValue
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InteropIdentifierRequestData'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InteropIdentifierAccountResponseData'
          description: OK
      summary: Allow Interoperation Identifier registration
      tags:
      - Inter Operation
    get:
      operationId: getAccountByIdentifier
      parameters:
      - description: idType
        in: path
        name: idType
        required: true
        schema:
          type: string
          enum:
          - MSISDN
          - EMAIL
          - PERSONAL_ID
          - BUSINESS
          - DEVICE
          - ACCOUNT_ID
          - IBAN
          - ALIAS
      - description: idValue
        in: path
        name: idValue
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InteropIdentifierAccountResponseData'
          description: OK
      summary: Query Interoperation Account by secondary identifier
      tags:
      - Inter Operation
    post:
      operationId: registerAccountIdentifier
      parameters:
      - description: idType
        in: path
        name: idType
        required: true
        schema:
          type: string
          enum:
          - MSISDN
          - EMAIL
          - PERSONAL_ID
          - BUSINESS
          - DEVICE
          - ACCOUNT_ID
          - IBAN
          - ALIAS
      - description: idValue
        in: path
        name: idValue
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InteropIdentifierRequestData'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InteropIdentifierAccountResponseData'
          description: OK
      summary: Interoperation Identifier registration
      tags:
      - Inter Operation
  /v1/interoperation/parties/{idType}/{idValue}/{subIdOrType}:
    delete:
      operationId: deleteAccountIdentifier_1
      parameters:
      - description: idType
        in: path
        name: idType
        required: true
        schema:
          type: string
          enum:
          - MSISDN
          - EMAIL
          - PERSONAL_ID
          - BUSINESS
          - DEVICE
          - ACCOUNT_ID
          - IBAN
          - ALIAS
      - description: idValue
        in: path
        name: idValue
        required: true
        schema:
          type: string
      - description: subIdOrType
        in: path
        name: subIdOrType
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InteropIdentifierRequestData'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InteropIdentifierAccountResponseData'
          description: OK
      summary: Allow Interoperation Identifier registration
      tags:
      - Inter Operation
    get:
      operationId: getAccountByIdentifier_1
      parameters:
      - description: idType
        in: path
        name: idType
        required: true
        schema:
          type: string
          enum:
          - MSISDN
          - EMAIL
          - PERSONAL_ID
          - BUSINESS
          - DEVICE
          - ACCOUNT_ID
          - IBAN
          - ALIAS
      - description: idValue
        in: path
        name: idValue
        required: true
        schema:
          type: string
      - description: subIdOrType
        in: path
        name: subIdOrType
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InteropIdentifierAccountResponseData'
          description: OK
      summary: Query Interoperation Account by secondary identifier
      tags:
      - Inter Operation
    post:
      operationId: registerAccountIdentifier_1
      parameters:
      - description: idType
        in: path
        name: idType
        required: true
        schema:
          type: string
          enum:
          - MSISDN
          - EMAIL
          - PERSONAL_ID
          - BUSINESS
          - DEVICE
          - ACCOUNT_ID
          - IBAN
          - ALIAS
      - description: idValue
        in: path
        name: idValue
        required: true
        schema:
          type: string
      - description: subIdOrType
        in: path
        name: subIdOrType
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InteropIdentifierRequestData'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InteropIdentifierAccountResponseData'
          description: OK
      summary: Interoperation Identifier registration
      tags:
      - Inter Operation
  /v1/interoperation/quotes:
    post:
      operationId: createQuote
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InteropQuoteRequestData'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InteropQuoteResponseData'
          description: OK
      summary: Calculate Interoperation Quote
      tags:
      - Inter Operation
  /v1/interoperation/requests:
    post:
      operationId: createTransactionRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InteropTransactionRequestData'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InteropTransactionRequestResponseData'
          description: OK
      summary: Allow Interoperation Transaction Request
      tags:
      - Inter Operation
  /v1/interoperation/transactions/{accountId}/disburse:
    post:
      operationId: disburseLoan
      parameters:
      - description: accountId
        in: path
        name: accountId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      summary: Disburse Loan by Account Id
      tags:
      - Inter Operation
  /v1/interoperation/transactions/{accountId}/loanrepayment:
    post:
      operationId: loanRepayment
      parameters:
      - description: accountId
        in: path
        name: accountId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      summary: Disburse Loan by Account Id
      tags:
      - Inter Operation
  /v1/interoperation/transactions/{transactionCode}/quotes/{quoteCode}:
    get:
      operationId: getQuote
      parameters:
      - description: transactionCode
        in: path
        name: transactionCode
        required: true
        schema:
          type: string
      - description: quoteCode
        in: path
        name: quoteCode
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InteropQuoteResponseData'
          description: OK
      summary: Query Interoperation Quote
      tags:
      - Inter Operation
  /v1/interoperation/transactions/{transactionCode}/requests/{requestCode}:
    get:
      operationId: getTransactionRequest
      parameters:
      - description: transactionCode
        in: path
        name: transactionCode
        required: true
        schema:
          type: string
      - description: requestCode
        in: path
        name: requestCode
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InteropTransactionRequestResponseData'
          description: OK
      summary: Query Interoperation Transaction Request
      tags:
      - Inter Operation
  /v1/interoperation/transactions/{transactionCode}/transfers/{transferCode}:
    get:
      operationId: getTransfer
      parameters:
      - description: transactionCode
        in: path
        name: transactionCode
        required: true
        schema:
          type: string
      - description: transferCode
        in: path
        name: transferCode
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InteropTransferResponseData'
          description: OK
      summary: Query Interoperation Transfer
      tags:
      - Inter Operation
  /v1/interoperation/transfers:
    post:
      operationId: performTransfer
      parameters:
      - description: action
        in: query
        name: action
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InteropTransferRequestData'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InteropTransferResponseData'
          description: OK
      summary: Prepare Interoperation Transfer
      tags:
      - Inter Operation
  /v1/jobs:
    get:
      description: |-
        Returns the list of jobs.

        Example Requests:

        jobs
      operationId: retrieveAll_8
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetJobsResponse'
          description: OK
      summary: Retrieve Scheduler Jobs
      tags:
      - SCHEDULER JOB
  /v1/jobs/names:
    get:
      description: Returns the configured Business Jobs
      operationId: retrieveAllConfiguredBusinessJobs
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBusinessJobConfigResponse'
          description: OK
      summary: List Business Jobs
      tags:
      - Business Step Configuration
  /v1/jobs/{jobId}:
    get:
      description: |-
        Returns the details of a Job.

        Example Requests:

        jobs/5
      operationId: retrieveOne_5
      parameters:
      - description: jobId
        in: path
        name: jobId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetJobsResponse'
          description: OK
      summary: Retrieve a Job
      tags:
      - SCHEDULER JOB
    post:
      description: Manually Execute Specific Job.
      operationId: executeJob
      parameters:
      - description: jobId
        in: path
        name: jobId
        required: true
        schema:
          type: integer
          format: int64
      - description: command
        in: query
        name: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecuteJobRequest'
      responses:
        "200":
          description: "POST: jobs/1?command=executeJob"
      summary: Run a Job
      tags:
      - SCHEDULER JOB
    put:
      description: Updates the details of a job.
      operationId: updateJobDetail
      parameters:
      - description: jobId
        in: path
        name: jobId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutJobsJobIDRequest'
        required: true
      responses:
        "200":
          description: OK
      summary: Update a Job
      tags:
      - SCHEDULER JOB
  /v1/jobs/{jobId}/runhistory:
    get:
      description: |-
        Example Requests:

        jobs/5/runhistory?offset=0&limit=200
      operationId: retrieveHistory
      parameters:
      - description: jobId
        in: path
        name: jobId
        required: true
        schema:
          type: integer
          format: int64
      - description: offset
        in: query
        name: offset
        schema:
          type: integer
          format: int32
      - description: limit
        in: query
        name: limit
        schema:
          type: integer
          format: int32
      - description: orderBy
        in: query
        name: orderBy
        schema:
          type: string
      - description: sortOrder
        in: query
        name: sortOrder
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetJobsJobIDJobRunHistoryResponse'
          description: OK
      summary: Retrieve Job Run History
      tags:
      - SCHEDULER JOB
  /v1/jobs/{jobName}/available-steps:
    get:
      description: Returns the available Business Steps for a job
      operationId: retrieveAllAvailableBusinessStep
      parameters:
      - description: jobName
        in: path
        name: jobName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBusinessStepConfigResponse'
          description: OK
      summary: List Business Step Configurations for a Job
      tags:
      - Business Step Configuration
  /v1/jobs/{jobName}/inline:
    post:
      description: Starts an inline Job
      operationId: executeInlineJob
      parameters:
      - description: jobName
        in: path
        name: jobName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InlineJobRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineJobResponse'
          description: OK
        "400":
          description: Request body item size validation error
      summary: Starts an inline Job
      tags:
      - Inline Job
  /v1/jobs/{jobName}/steps:
    get:
      description: Returns the configured Business Steps for a job
      operationId: retrieveAllConfiguredBusinessStep
      parameters:
      - description: jobName
        in: path
        name: jobName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBusinessStepConfigResponse'
          description: OK
      summary: List Business Step Configurations for a Job
      tags:
      - Business Step Configuration
    put:
      description: Updates the Business steps execution order for a job
      operationId: updateJobBusinessStepConfig
      parameters:
      - description: jobName
        in: path
        name: jobName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBusinessStepConfigRequest'
      responses:
        "204":
          description: NO_CONTENT
      summary: List Business Step Configurations for a Job
      tags:
      - Business Step Configuration
  /v1/journalentries:
    get:
      description: |-
        The list capability of journal entries can support pagination and sorting.

        Example Requests:

        journalentries

        journalentries?transactionId=PB37X8Y21EQUY4S

        journalentries?officeId=1&manualEntriesOnly=true&fromDate=1 July 2013&toDate=15 July 2013&dateFormat=dd MMMM yyyy&locale=en

        journalentries?fields=officeName,glAccountName,transactionDate

        journalentries?offset=10&limit=50

        journalentries?orderBy=transactionId&sortOrder=DESC

        journalentries?runningBalance=true

        journalentries?transactionDetails=true

        journalentries?loanId=12

        journalentries?savingsId=24
      operationId: retrieveAll_1
      parameters:
      - description: officeId
        in: query
        name: officeId
        schema:
          type: integer
          format: int64
      - description: glAccountId
        in: query
        name: glAccountId
        schema:
          type: integer
          format: int64
      - description: manualEntriesOnly
        in: query
        name: manualEntriesOnly
        schema:
          type: boolean
      - description: fromDate
        in: query
        name: fromDate
        schema:
          $ref: '#/components/schemas/DateParam'
      - description: toDate
        in: query
        name: toDate
        schema:
          $ref: '#/components/schemas/DateParam'
      - description: submittedOnDateFrom
        in: query
        name: submittedOnDateFrom
        schema:
          $ref: '#/components/schemas/DateParam'
      - description: submittedOnDateTo
        in: query
        name: submittedOnDateTo
        schema:
          $ref: '#/components/schemas/DateParam'
      - description: transactionId
        in: query
        name: transactionId
        schema:
          type: string
      - description: entityType
        in: query
        name: entityType
        schema:
          type: integer
          format: int32
      - description: offset
        in: query
        name: offset
        schema:
          type: integer
          format: int32
      - description: limit
        in: query
        name: limit
        schema:
          type: integer
          format: int32
      - description: orderBy
        in: query
        name: orderBy
        schema:
          type: string
      - description: sortOrder
        in: query
        name: sortOrder
        schema:
          type: string
      - description: locale
        in: query
        name: locale
        schema:
          type: string
      - description: dateFormat
        in: query
        name: dateFormat
        schema:
          type: string
      - description: loanId
        in: query
        name: loanId
        schema:
          type: integer
          format: int64
      - description: savingsId
        in: query
        name: savingsId
        schema:
          type: integer
          format: int64
      - description: runningBalance
        in: query
        name: runningBalance
        schema:
          type: boolean
      - description: transactionDetails
        in: query
        name: transactionDetails
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetJournalEntriesTransactionIdResponse'
          description: OK
      summary: List Journal Entries
      tags:
      - Journal Entries
    post:
      description: "Note: A Balanced (simple) Journal entry would have atleast one\
        \ \"Debit\" and one \"Credit\" entry whose amounts are equal \nCompound Journal\
        \ entries may have \"n\" debits and \"m\" credits where both \"m\" and \"\
        n\" are greater than 0 and the net sum or all debits and credits are equal\
        \ \n\n\nMandatory Fields\nofficeId, transactionDate\n\n\ncredits- glAccountId,\
        \ amount, comments\n\n \ndebits-  glAccountId, amount, comments\n\n \nOptional\
        \ Fields\npaymentTypeId, accountNumber, checkNumber, routingCode, receiptNumber,\
        \ bankNumber"
      operationId: createGLJournalEntry
      parameters:
      - description: command
        in: query
        name: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JournalEntryCommand'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostJournalEntriesResponse'
          description: OK
      summary: Create "Balanced" Journal Entries
      tags:
      - Journal Entries
  /v1/journalentries/downloadtemplate:
    get:
      operationId: getJournalEntriesTemplate
      parameters:
      - in: query
        name: officeId
        schema:
          type: integer
          format: int64
      - in: query
        name: dateFormat
        schema:
          type: string
      responses:
        default:
          content:
            application/vnd.ms-excel: {}
          description: default response
      tags:
      - Journal Entries
  /v1/journalentries/openingbalance:
    get:
      operationId: retrieveOpeningBalance
      parameters:
      - in: query
        name: officeId
        schema:
          type: integer
          format: int64
      - in: query
        name: currencyCode
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Journal Entries
  /v1/journalentries/provisioning:
    get:
      operationId: retrieveJournalEntries
      parameters:
      - in: query
        name: offset
        schema:
          type: integer
          format: int32
      - in: query
        name: limit
        schema:
          type: integer
          format: int32
      - in: query
        name: entryId
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Journal Entries
  /v1/journalentries/uploadtemplate:
    post:
      operationId: postJournalEntriesTemplate
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadRequest'
        description: Upload journal entries template
      responses:
        default:
          content:
            '*/*':
              schema:
                type: string
          description: default response
      tags:
      - Journal Entries
  /v1/journalentries/{journalEntryId}:
    get:
      description: |-
        Example Requests:

        journalentries/1



        journalentries/1?fields=officeName,glAccountId,entryType,amount

        journalentries/1?runningBalance=true

        journalentries/1?transactionDetails=true
      operationId: retrieveJournalEntryById
      parameters:
      - description: journalEntryId
        in: path
        name: journalEntryId
        required: true
        schema:
          type: integer
          format: int64
      - description: runningBalance
        in: query
        name: runningBalance
        schema:
          type: boolean
      - description: transactionDetails
        in: query
        name: transactionDetails
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JournalEntryTransactionItem'
          description: OK
      summary: Retrieve a single Entry
      tags:
      - Journal Entries
  /v1/journalentries/{transactionId}:
    post:
      description: "This API calculates the running balances for office. If office\
        \ ID not provided this API calculates running balances for all offices. \n\
        Mandatory Fields\nofficeId"
      operationId: createReversalJournalEntry
      parameters:
      - description: transactionId
        in: path
        name: transactionId
        required: true
        schema:
          type: string
      - description: command
        in: query
        name: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostJournalEntriesTransactionIdRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostJournalEntriesTransactionIdResponse'
          description: OK
      summary: Update Running balances for Journal Entries
      tags:
      - Journal Entries
  /v1/likelihood/{ppiName}:
    get:
      operationId: retrieveAll_11
      parameters:
      - in: path
        name: ppiName
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Likelihood
  /v1/likelihood/{ppiName}/{likelihoodId}:
    get:
      operationId: retrieve
      parameters:
      - in: path
        name: likelihoodId
        required: true
        schema:
          type: integer
          format: int64
      - in: path
        name: ppiName
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Likelihood
    put:
      operationId: update_4
      parameters:
      - in: path
        name: likelihoodId
        required: true
        schema:
          type: integer
          format: int64
      - in: path
        name: ppiName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Likelihood
  /v1/loan-collateral-management/{collateralId}:
    get:
      description: Get Loan Collateral Details
      operationId: getLoanCollateral
      parameters:
      - description: collateralId
        in: path
        name: collateralId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      summary: Get Loan Collateral Details
      tags:
      - Loan Collateral Management
  /v1/loan-collateral-management/{id}:
    delete:
      description: Delete Loan Collateral
      operationId: deleteLoanCollateral
      parameters:
      - description: loanId
        in: path
        name: loanId
        required: true
        schema:
          type: integer
          format: int64
      - description: loan collateral id
        in: path
        name: id
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      summary: Delete Loan Collateral
      tags:
      - Loan Collateral Management
  /v1/loanproducts:
    get:
      description: |-
        Lists Loan Products

        Example Requests:

        loanproducts


        loanproducts?fields=name,description,interestRateFrequencyType,amortizationType
      operationId: retrieveAllLoanProducts
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetLoanProductsResponse'
          description: OK
      summary: List Loan Products
      tags:
      - Loan Products
    post:
      description: |-
        Depending of the Accounting Rule (accountingRule) selected, additional fields with details of the appropriate Ledger Account identifiers would need to be passed in.

        Refer MifosX Accounting Specs Draft for more details regarding the significance of the selected accounting rule

        Mandatory Fields: name, shortName, currencyCode, digitsAfterDecimal, inMultiplesOf, principal, numberOfRepayments, repaymentEvery, repaymentFrequencyType, interestRatePerPeriod, interestRateFrequencyType, amortizationType, interestType, interestCalculationPeriodType, transactionProcessingStrategyCode, accountingRule, isInterestRecalculationEnabled, daysInYearType, daysInMonthType

        Optional Fields: inArrearsTolerance, graceOnPrincipalPayment, graceOnInterestPayment, graceOnInterestCharged, graceOnArrearsAgeing, charges, paymentChannelToFundSourceMappings, feeToIncomeAccountMappings, penaltyToIncomeAccountMappings, includeInBorrowerCycle, useBorrowerCycle,principalVariationsForBorrowerCycle, numberOfRepaymentVariationsForBorrowerCycle, interestRateVariationsForBorrowerCycle, multiDisburseLoan,maxTrancheCount, outstandingLoanBalance,overdueDaysForNPA,holdGuaranteeFunds, principalThresholdForLastInstalment, accountMovesOutOfNPAOnlyOnArrearsCompletion, canDefineInstallmentAmount, installmentAmountInMultiplesOf, allowAttributeOverrides, allowPartialPeriodInterestCalcualtion,dueDaysForRepaymentEvent,overDueDaysForRepaymentEvent,enableDownPayment,disbursedAmountPercentageDownPayment,enableAutoRepaymentForDownPayment,repaymentStartDateType

        Additional Mandatory Fields for Cash(2) based accounting: fundSourceAccountId, loanPortfolioAccountId, interestOnLoanAccountId, incomeFromFeeAccountId, incomeFromPenaltyAccountId, writeOffAccountId, transfersInSuspenseAccountId, overpaymentLiabilityAccountId

        Additional Mandatory Fields for periodic (3) and upfront (4)accrual accounting: fundSourceAccountId, loanPortfolioAccountId, interestOnLoanAccountId, incomeFromFeeAccountId, incomeFromPenaltyAccountId, writeOffAccountId, receivableInterestAccountId, receivableFeeAccountId, receivablePenaltyAccountId, transfersInSuspenseAccountId, overpaymentLiabilityAccountId

        Additional Mandatory Fields if interest recalculation is enabled(true): interestRecalculationCompoundingMethod, rescheduleStrategyMethod, recalculationRestFrequencyType

        Additional Optional Fields if interest recalculation is enabled(true): isArrearsBasedOnOriginalSchedule, preClosureInterestCalculationStrategy

        Additional Optional Fields if interest recalculation is enabled(true) and recalculationRestFrequencyType is not same as repayment period: recalculationRestFrequencyInterval, recalculationRestFrequencyDate

        Additional Optional Fields if interest recalculation is enabled(true) and interestRecalculationCompoundingMethod is enabled: recalculationCompoundingFrequencyType

        Additional Optional Fields if interest recalculation is enabled(true) and interestRecalculationCompoundingMethod is enabled and recalculationCompoundingFrequencyType is not same as repayment period: recalculationCompoundingFrequencyInterval, recalculationCompoundingFrequencyDate

        Additional Mandatory Fields if Hold Guarantee funds is enabled(true): mandatoryGuarantee

        Additional Optional Fields if Hold Guarantee funds is enabled(true): minimumGuaranteeFromOwnFunds,minimumGuaranteeFromGuarantor
      operationId: createLoanProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostLoanProductsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostLoanProductsResponse'
          description: OK
      summary: Create a Loan Product
      tags:
      - Loan Products
  /v1/loanproducts/external-id/{externalProductId}:
    get:
      description: |-
        Retrieves a Loan Product

        Example Requests:

        loanproducts/external-id/2075e308-d4a8-44d9-8203-f5a947b8c2f4


        loanproducts/external-id/2075e308-d4a8-44d9-8203-f5a947b8c2f4?template=true


        loanproducts/external-id/2075e308-d4a8-44d9-8203-f5a947b8c2f4?fields=name,description,numberOfRepayments
      operationId: retrieveLoanProductDetails_1
      parameters:
      - description: externalProductId
        in: path
        name: externalProductId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLoanProductsProductIdResponse'
          description: OK
      summary: Retrieve a Loan Product
      tags:
      - Loan Products
    put:
      description: Updates a Loan Product
      operationId: updateLoanProduct_1
      parameters:
      - description: externalProductId
        in: path
        name: externalProductId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutLoanProductsProductIdRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutLoanProductsProductIdResponse'
          description: OK
      summary: Update a Loan Product
      tags:
      - Loan Products
  /v1/loanproducts/template:
    get:
      description: |-
        This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:

        Field Defaults
        Allowed description Lists
        Example Request:

        loanproducts/template
      operationId: retrieveTemplate_11
      parameters:
      - description: isProductMixTemplate
        in: query
        name: isProductMixTemplate
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLoanProductsTemplateResponse'
          description: OK
      summary: Retrieve Loan Product Details Template
      tags:
      - Loan Products
  /v1/loanproducts/{productId}:
    get:
      description: |-
        Retrieves a Loan Product

        Example Requests:

        loanproducts/1


        loanproducts/1?template=true


        loanproducts/1?fields=name,description,numberOfRepayments
      operationId: retrieveLoanProductDetails
      parameters:
      - description: productId
        in: path
        name: productId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLoanProductsProductIdResponse'
          description: OK
      summary: Retrieve a Loan Product
      tags:
      - Loan Products
    put:
      description: Updates a Loan Product
      operationId: updateLoanProduct
      parameters:
      - description: productId
        in: path
        name: productId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutLoanProductsProductIdRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutLoanProductsProductIdResponse'
          description: OK
      summary: Update a Loan Product
      tags:
      - Loan Products
  /v1/loanproducts/{productId}/productmix:
    delete:
      operationId: deleteProductMix
      parameters:
      - in: path
        name: productId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Product Mix
    get:
      operationId: retrieveTemplate_12
      parameters:
      - in: path
        name: productId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Product Mix
    post:
      operationId: createProductMix
      parameters:
      - in: path
        name: productId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Product Mix
    put:
      operationId: updateProductMix
      parameters:
      - in: path
        name: productId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Product Mix
  /v1/loans:
    get:
      description: |-
        The list capability of loans can support pagination and sorting.
        Example Requests:

        loans

        loans?fields=accountNo

        loans?offset=10&limit=50

        loans?orderBy=accountNo&sortOrder=DESC
      operationId: retrieveAll_27
      parameters:
      - description: externalId
        in: query
        name: externalId
        schema:
          type: string
      - description: offset
        in: query
        name: offset
        schema:
          type: integer
          format: int32
      - description: limit
        in: query
        name: limit
        schema:
          type: integer
          format: int32
      - description: orderBy
        in: query
        name: orderBy
        schema:
          type: string
      - description: sortOrder
        in: query
        name: sortOrder
        schema:
          type: string
      - description: accountNo
        in: query
        name: accountNo
        schema:
          type: string
      - description: status
        in: query
        name: status
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLoansResponse'
          description: OK
      summary: List Loans
      tags:
      - Loans
    post:
      description: |-
        It calculates the loan repayment Schedule
        Submits a new loan application
        Mandatory Fields: clientId, productId, principal, loanTermFrequency, loanTermFrequencyType, loanType, numberOfRepayments, repaymentEvery, repaymentFrequencyType, interestRatePerPeriod, amortizationType, interestType, interestCalculationPeriodType, transactionProcessingStrategyCode, expectedDisbursementDate, submittedOnDate, loanType
        Optional Fields: graceOnPrincipalPayment, graceOnInterestPayment, graceOnInterestCharged, linkAccountId, allowPartialPeriodInterestCalcualtion, fixedEmiAmount, maxOutstandingLoanBalance, disbursementData, graceOnArrearsAgeing, createStandingInstructionAtDisbursement (requires linkedAccountId if set to true)
        Additional Mandatory Fields if interest recalculation is enabled for product and Rest frequency not same as repayment period: recalculationRestFrequencyDate
        Additional Mandatory Fields if interest recalculation with interest/fee compounding is enabled for product and compounding frequency not same as repayment period: recalculationCompoundingFrequencyDate
        Additional Mandatory Field if Entity-Datatable Check is enabled for the entity of type loan: datatables
      operationId: calculateLoanScheduleOrSubmitLoanApplication
      parameters:
      - description: command
        in: query
        name: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostLoansRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostLoansResponse'
          description: OK
      summary: Calculate loan repayment schedule | Submit a new Loan Application
      tags:
      - Loans
  /v1/loans/catch-up:
    post:
      description: Executes the Loan COB job on every day from the oldest Loan to
        the current COB business date
      operationId: executeLoanCOBCatchUp
      responses:
        "200":
          description: All loans are up to date
        "202":
          description: Catch Up has been started
        "400":
          description: Catch Up is already running
      summary: Executes Loan COB Catch Up
      tags:
      - Loan COB Catch Up
  /v1/loans/downloadtemplate:
    get:
      operationId: getLoansTemplate
      parameters:
      - in: query
        name: officeId
        schema:
          type: integer
          format: int64
      - in: query
        name: staffId
        schema:
          type: integer
          format: int64
      - in: query
        name: dateFormat
        schema:
          type: string
      responses:
        default:
          content:
            application/vnd.ms-excel: {}
          description: default response
      tags:
      - Loans
  /v1/loans/external-id/{loanExternalId}:
    delete:
      description: "Note: Only loans in \"Submitted and awaiting approval\" status\
        \ can be deleted."
      operationId: deleteLoanApplication_1
      parameters:
      - description: loanExternalId
        in: path
        name: loanExternalId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteLoansLoanIdResponse'
          description: OK
      summary: Delete a Loan Application
      tags:
      - Loans
    get:
      description: |-
        Note: template=true parameter doesn't apply to this resource.Example Requests:

        loans/external-id/7dd80a7c-ycba-a446-t378-91eb6f53e854


        loans/external-id/7dd80a7c-ycba-a446-t378-91eb6f53e854?fields=id,principal,annualInterestRate


        loans/external-id/7dd80a7c-ycba-a446-t378-91eb6f53e854?associations=all

        loans/external-id/7dd80a7c-ycba-a446-t378-91eb6f53e854?associations=all&exclude=guarantors


        loans/external-id/7dd80a7c-ycba-a446-t378-91eb6f53e854?fields=id,principal,annualInterestRate&associations=repaymentSchedule,transactions
      operationId: retrieveLoan_1
      parameters:
      - description: loanExternalId
        in: path
        name: loanExternalId
        required: true
        schema:
          type: string
      - description: staffInSelectedOfficeOnly
        in: query
        name: staffInSelectedOfficeOnly
        schema:
          type: boolean
          default: false
      - description: Loan object relations to be included in the response
        in: query
        name: associations
        schema:
          type: string
          default: all
      - description: Optional Loan object relation list to be filtered in the response
        example: "guarantors,futureSchedule"
        in: query
        name: exclude
        schema:
          type: string
      - description: Optional Loan attribute list to be in the response
        example: "id,principal,annualInterestRate"
        in: query
        name: fields
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLoansLoanIdResponse'
          description: OK
      summary: Retrieve a Loan
      tags:
      - Loans
    post:
      description: |-
        Approve Loan Application:
        Mandatory Fields: approvedOnDate
        Optional Fields: approvedLoanAmount and expectedDisbursementDate
        Approves the loan application

        Recover Loan Guarantee:
        Recovers the loan guarantee

        Undo Loan Application Approval:
        Undoes the Loan Application Approval

        Assign a Loan Officer:
        Allows you to assign Loan Officer for existing Loan.

        Unassign a Loan Officer:
        Allows you to unassign the Loan Officer.

        Reject Loan Application:
        Mandatory Fields: rejectedOnDate
        Allows you to reject the loan application

        Applicant Withdraws from Loan Application:
        Mandatory Fields: withdrawnOnDate
        Allows the applicant to withdraw the loan application

        Disburse Loan:
        Mandatory Fields: actualDisbursementDate
        Optional Fields: transactionAmount and fixedEmiAmount
        Disburses the Loan

        Disburse Loan To Savings Account:
        Mandatory Fields: actualDisbursementDate
        Optional Fields: transactionAmount and fixedEmiAmount
        Disburses the loan to Saving Account

        Undo Loan Disbursal:
        Undoes the Loan Disbursal
        Showing request and response for Assign a Loan Officer
      operationId: stateTransitions_1
      parameters:
      - description: loanExternalId
        in: path
        name: loanExternalId
        required: true
        schema:
          type: string
      - description: command
        in: query
        name: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostLoansLoanIdRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostLoansLoanIdResponse'
          description: OK
      summary: Approve Loan Application | Recover Loan Guarantee | Undo Loan Application
        Approval | Assign a Loan Officer | Unassign a Loan Officer | Reject Loan Application
        | Applicant Withdraws from Loan Application | Disburse Loan Disburse Loan
        To Savings Account | Undo Loan Disbursal
      tags:
      - Loans
    put:
      description: "Loan application can only be modified when in 'Submitted and pending\
        \ approval' state. Once the application is approved, the details cannot be\
        \ changed using this method."
      operationId: modifyLoanApplication_1
      parameters:
      - description: loanExternalId
        in: path
        name: loanExternalId
        required: true
        schema:
          type: string
      - description: command
        in: query
        name: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutLoansLoanIdRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutLoansLoanIdResponse'
          description: OK
      summary: Modify a loan application
      tags:
      - Loans
  /v1/loans/external-id/{loanExternalId}/charges:
    get:
      description: "It lists all the Loan Charges specific to a Loan \n\nExample Requests:\n\
        \nloans/1/charges\n\n\nloans/1/charges?fields=name,amountOrPercentage"
      operationId: retrieveAllLoanCharges_1
      parameters:
      - description: loanExternalId
        in: path
        name: loanExternalId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetLoansLoanIdChargesChargeIdResponse'
          description: OK
      summary: List Loan Charges
      tags:
      - Loan Charges
    post:
      description: Creates a Loan Charge | Pay a Loan Charge
      operationId: executeLoanCharge_1
      parameters:
      - description: loanExternalId
        in: path
        name: loanExternalId
        required: true
        schema:
          type: string
      - description: command
        in: query
        name: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostLoansLoanIdChargesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostLoansLoanIdChargesResponse'
          description: OK
      summary: Create a Loan Charge (no command provided) or Pay a charge (command=pay)
      tags:
      - Loan Charges
  /v1/loans/external-id/{loanExternalId}/charges/external-id/{loanChargeExternalId}:
    delete:
      description: "Note: Currently, A Loan Charge may only be removed from Loans\
        \ that are not yet approved."
      operationId: deleteLoanCharge_3
      parameters:
      - description: loanExternalId
        in: path
        name: loanExternalId
        required: true
        schema:
          type: string
      - description: loanChargeExternalId
        in: path
        name: loanChargeExternalId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteLoansLoanIdChargesChargeIdResponse'
          description: OK
      summary: Delete a Loan Charge
      tags:
      - Loan Charges
    get:
      description: |-
        Retrieves Loan Charge according to the Loan External ID and Loan Charge External IDExample Requests:

        /loans/1/charges/1


        /loans/1/charges/1?fields=name,amountOrPercentage
      operationId: retrieveLoanCharge_3
      parameters:
      - description: loanExternalId
        in: path
        name: loanExternalId
        required: true
        schema:
          type: string
      - description: loanChargeExternalId
        in: path
        name: loanChargeExternalId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLoansLoanIdChargesChargeIdResponse'
          description: OK
      summary: Retrieve a Loan Charge
      tags:
      - Loan Charges
    post:
      description: Loan Charge will be paid if the loan is linked with a savings account
        | Waive Loan Charge | Add Charge Adjustment
      operationId: executeLoanCharge_5
      parameters:
      - description: loanExternalId
        in: path
        name: loanExternalId
        required: true
        schema:
          type: string
      - description: loanChargeExternalId
        in: path
        name: loanChargeExternalId
        required: true
        schema:
          type: string
      - description: command
        in: query
        name: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostLoansLoanIdChargesChargeIdRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostLoansLoanIdChargesChargeIdResponse'
          description: OK
      summary: Pay / Waive / Adjustment for Loan Charge
      tags:
      - Loan Charges
    put:
      description: Currently Loan Charges may be updated only if the Loan is not yet
        approved
      operationId: updateLoanCharge_3
      parameters:
      - description: loanExternalId
        in: path
        name: loanExternalId
        required: true
        schema:
          type: string
      - description: loanChargeExternalId
        in: path
        name: loanChargeExternalId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutLoansLoanIdChargesChargeIdRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutLoansLoanIdChargesChargeIdResponse'
          description: OK
      summary: Update a Loan Charge
      tags:
      - Loan Charges
  /v1/loans/external-id/{loanExternalId}/charges/template:
    get:
      description: |+
        This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:

        Field Defaults
        Allowed description Lists
        Example Request:

        loans/1/charges/template

      operationId: retrieveTemplate_9
      parameters:
      - description: loanExternalId
        in: path
        name: loanExternalId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLoansLoanIdChargesTemplateResponse'
          description: OK
      summary: Retrieve Loan Charges Template
      tags:
      - Loan Charges
  /v1/loans/external-id/{loanExternalId}/charges/{loanChargeId}:
    delete:
      description: "Note: Currently, A Loan Charge may only be removed from Loans\
        \ that are not yet approved."
      operationId: deleteLoanCharge_2
      parameters:
      - description: loanExternalId
        in: path
        name: loanExternalId
        required: true
        schema:
          type: string
      - description: loanChargeId
        in: path
        name: loanChargeId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteLoansLoanIdChargesChargeIdResponse'
          description: OK
      summary: Delete a Loan Charge
      tags:
      - Loan Charges
    get:
      description: |-
        Retrieves Loan Charge according to the Loan external ID and Loan Charge IDExample Requests:

        /loans/1/charges/1


        /loans/1/charges/1?fields=name,amountOrPercentage
      operationId: retrieveLoanCharge_2
      parameters:
      - description: loanExternalId
        in: path
        name: loanExternalId
        required: true
        schema:
          type: string
      - description: loanChargeId
        in: path
        name: loanChargeId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLoansLoanIdChargesChargeIdResponse'
          description: OK
      summary: Retrieve a Loan Charge
      tags:
      - Loan Charges
    post:
      description: Loan Charge will be paid if the loan is linked with a savings account
        | Waive Loan Charge | Add Charge Adjustment
      operationId: executeLoanCharge_4
      parameters:
      - description: loanExternalId
        in: path
        name: loanExternalId
        required: true
        schema:
          type: string
      - description: loanChargeId
        in: path
        name: loanChargeId
        required: true
        schema:
          type: integer
          format: int64
      - description: command
        in: query
        name: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostLoansLoanIdChargesChargeIdRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostLoansLoanIdChargesChargeIdResponse'
          description: OK
      summary: Pay / Waive / Adjustment for Loan Charge
      tags:
      - Loan Charges
    put:
      description: Currently Loan Charges may be updated only if the Loan is not yet
        approved
      operationId: updateLoanCharge_2
      parameters:
      - description: loanExternalId
        in: path
        name: loanExternalId
        required: true
        schema:
          type: string
      - description: loanChargeId
        in: path
        name: loanChargeId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutLoansLoanIdChargesChargeIdRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutLoansLoanIdChargesChargeIdResponse'
          description: OK
      summary: Update a Loan Charge
      tags:
      - Loan Charges
  /v1/loans/external-id/{loanExternalId}/delinquency-actions:
    get:
      operationId: getLoanDelinquencyActions_1
      parameters:
      - description: loanExternalId
        in: path
        name: loanExternalId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetDelinquencyActionsResponse'
          description: OK
      summary: Retrieve delinquency actions related to the loan
      tags:
      - Loans
    post:
      operationId: createLoanDelinquencyAction_1
      parameters:
      - description: loanExternalId
        in: path
        name: loanExternalId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostLoansDelinquencyActionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostLoansDelinquencyActionResponse'
          description: OK
      summary: Adds a new delinquency action for a loan
      tags:
      - Loans
  /v1/loans/external-id/{loanExternalId}/delinquencytags:
    get:
      operationId: getDelinquencyTagHistory_1
      parameters:
      - description: loanExternalId
        in: path
        name: loanExternalId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetDelinquencyTagHistoryResponse'
          description: OK
      summary: Retrieve the Loan Delinquency Tag history using the Loan Id
      tags:
      - Loans
  /v1/loans/external-id/{loanExternalId}/template:
    get:
      operationId: retrieveApprovalTemplate_1
      parameters:
      - description: loanExternalId
        in: path
        name: loanExternalId
        required: true
        schema:
          type: string
      - description: templateType
        in: query
        name: templateType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLoansApprovalTemplateResponse'
          description: OK
      tags:
      - Loans
  /v1/loans/external-id/{loanExternalId}/transactions:
    post:
      description: "This API covers the major loan transaction functionality\n\nExample\
        \ Requests:\n\nloans/external-id/7dd80a7c-ycba-a446-t378-91eb6f53e854/transactions?command=repayment\
        \ | Make a Repayment | \nloans/external-id/7dd80a7c-ycba-a446-t378-91eb6f53e854/transactions?command=merchantIssuedRefund\
        \ | Merchant Issued Refund | \nloans/external-id/7dd80a7c-ycba-a446-t378-91eb6f53e854/transactions?command=payoutRefund\
        \ | Payout Refund | \nloans/external-id/7dd80a7c-ycba-a446-t378-91eb6f53e854/transactions?command=goodwillCredit\
        \ | Goodwil Credit | \nloans/external-id/7dd80a7c-ycba-a446-t378-91eb6f53e854/transactions?command=chargeRefund\
        \ | Charge Refund | \nloans/external-id/7dd80a7c-ycba-a446-t378-91eb6f53e854/transactions?command=waiveinterest\
        \ | Waive Interest | \nloans/external-id/7dd80a7c-ycba-a446-t378-91eb6f53e854/transactions?command=writeoff\
        \ | Write-off Loan | \nloans/external-id/7dd80a7c-ycba-a446-t378-91eb6f53e854/transactions?command=close-rescheduled\
        \ | Close Rescheduled Loan | \nloans/external-id/7dd80a7c-ycba-a446-t378-91eb6f53e854/transactions?command=close\
        \ | Close Loan | \nloans/external-id/7dd80a7c-ycba-a446-t378-91eb6f53e854/transactions?command=undowriteoff\
        \ | Undo Loan Write-off | \nloans/external-id/7dd80a7c-ycba-a446-t378-91eb6f53e854/transactions?command=recoverypayment\
        \ | Make Recovery Payment | \nloans/external-id/7dd80a7c-ycba-a446-t378-91eb6f53e854/transactions?command=refundByCash\
        \ | Make a Refund of an Active Loan by Cash | \nloans/external-id/7dd80a7c-ycba-a446-t378-91eb6f53e854/transactions?command=foreclosure\
        \ | Foreclosure of an Active Loan | \nloans/external-id/7dd80a7c-ycba-a446-t378-91eb6f53e854/transactions?command=creditBalanceRefund\
        \ | Credit Balance Refund |  \nloans/external-id/7dd80a7c-ycba-a446-t378-91eb6f53e854/transactions?command=charge-off\
        \ | Charge-off Loan |  \nloans/external-id/7dd80a7c-ycba-a446-t378-91eb6f53e854/transactions?command=downPayment\
        \ | Down Payment |  \n"
      operationId: executeLoanTransaction_1
      parameters:
      - description: loanExternalId
        in: path
        name: loanExternalId
        required: true
        schema:
          type: string
      - description: command
        in: query
        name: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostLoansLoanIdTransactionsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostLoansLoanIdTransactionsResponse'
          description: OK
      summary: Significant Loan Transactions
      tags:
      - Loan Transactions
  /v1/loans/external-id/{loanExternalId}/transactions/external-id/{externalTransactionId}:
    get:
      description: |-
        Retrieves a Transaction Details

        Example Request:

        loans/external-id/7dd80a7c-ycba-a446-t378-91eb6f53e854/transactions/external-id/5dd80a7c-ccba-4446-b378-01eb6f53e871
      operationId: retrieveTransactionByLoanExternalIdAndTransactionExternalId
      parameters:
      - description: loanExternalId
        in: path
        name: loanExternalId
        required: true
        schema:
          type: string
      - description: externalTransactionId
        in: path
        name: externalTransactionId
        required: true
        schema:
          type: string
      - description: Optional Loan Transaction attribute list to be in the response
        example: "id,date,amount"
        in: query
        name: fields
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLoansLoanIdTransactionsTransactionIdResponse'
          description: OK
      summary: Retrieve a Transaction Details
      tags:
      - Loan Transactions
    post:
      description: |-
        Note: there is no need to specify command={transactionType} parameter.

        Mandatory Fields: transactionDate, transactionAmount
      operationId: adjustLoanTransaction_3
      parameters:
      - description: loanExternalId
        in: path
        name: loanExternalId
        required: true
        schema:
          type: string
      - description: externalTransactionId
        in: path
        name: externalTransactionId
        required: true
        schema:
          type: string
      - description: command
        in: query
        name: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostLoansLoanIdTransactionsTransactionIdRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostLoansLoanIdTransactionsResponse'
          description: OK
      summary: Adjust a Transaction
      tags:
      - Loan Transactions
  /v1/loans/external-id/{loanExternalId}/transactions/external-id/{transactionExternalId}:
    put:
      description: Undo a Waive Charge Transaction
      operationId: undoWaiveCharge_3
      parameters:
      - description: loanExternalId
        in: path
        name: loanExternalId
        required: true
        schema:
          type: string
      - description: transactionExternalId
        in: path
        name: transactionExternalId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutChargeTransactionChangesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutChargeTransactionChangesResponse'
          description: OK
      summary: Undo a Waive Charge Transaction
      tags:
      - Loan Transactions
  /v1/loans/external-id/{loanExternalId}/transactions/template:
    get:
      description: |
        This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:

        Field Defaults
        Allowed Value Lists

        Example Requests:

        loans/1/transactions/template?command=repaymentloans/1/transactions/template?command=merchantIssuedRefundloans/1/transactions/template?command=payoutRefundloans/1/transactions/template?command=goodwillCredit
        loans/1/transactions/template?command=waiveinterest
        loans/1/transactions/template?command=writeoff
        loans/1/transactions/template?command=close-rescheduled
        loans/1/transactions/template?command=close
        loans/1/transactions/template?command=disburse
        loans/1/transactions/template?command=disburseToSavings
        loans/1/transactions/template?command=recoverypayment
        loans/1/transactions/template?command=prepayLoan
        loans/1/transactions/template?command=refundbycash
        loans/1/transactions/template?command=refundbytransfer
        loans/1/transactions/template?command=foreclosure
        loans/1/transactions/template?command=creditBalanceRefund (returned 'amount' field will have the overpaid value)
        loans/1/transactions/template?command=charge-off
        loans/1/transactions/template?command=downPayment
      operationId: retrieveTransactionTemplate_1
      parameters:
      - description: loanExternalId
        in: path
        name: loanExternalId
        required: true
        schema:
          type: string
      - description: command
        in: query
        name: command
        schema:
          type: string
      - description: dateFormat
        in: query
        name: dateFormat
        schema:
          type: string
      - description: transactionDate
        in: query
        name: transactionDate
        schema:
          $ref: '#/components/schemas/DateParam'
      - description: locale
        in: query
        name: locale
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLoansLoanIdTransactionsTemplateResponse'
          description: OK
      summary: Retrieve Loan Transaction Template
      tags:
      - Loan Transactions
  /v1/loans/external-id/{loanExternalId}/transactions/{transactionId}:
    get:
      description: |-
        Retrieves a Transaction Details

        Example Request:

        loans/5/transactions/3
      operationId: retrieveTransactionByLoanExternalIdAndTransactionId
      parameters:
      - description: loanExternalId
        in: path
        name: loanExternalId
        required: true
        schema:
          type: string
      - description: transactionId
        in: path
        name: transactionId
        required: true
        schema:
          type: integer
          format: int64
      - description: Optional Loan Transaction attribute list to be in the response
        example: "id,date,amount"
        in: query
        name: fields
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLoansLoanIdTransactionsTransactionIdResponse'
          description: OK
      summary: Retrieve a Transaction Details
      tags:
      - Loan Transactions
    post:
      description: |-
        Note: there is no need to specify command={transactionType} parameter.

        Mandatory Fields: transactionDate, transactionAmount
      operationId: adjustLoanTransaction_2
      parameters:
      - description: loanExternalId
        in: path
        name: loanExternalId
        required: true
        schema:
          type: string
      - description: transactionId
        in: path
        name: transactionId
        required: true
        schema:
          type: integer
          format: int64
      - description: command
        in: query
        name: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostLoansLoanIdTransactionsTransactionIdRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostLoansLoanIdTransactionsResponse'
          description: OK
      summary: Adjust a Transaction
      tags:
      - Loan Transactions
    put:
      description: Undo a Waive Charge Transaction
      operationId: undoWaiveCharge_2
      parameters:
      - description: loanExternalId
        in: path
        name: loanExternalId
        required: true
        schema:
          type: string
      - description: transactionId
        in: path
        name: transactionId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutChargeTransactionChangesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutChargeTransactionChangesResponse'
          description: OK
      summary: Undo a Waive Charge Transaction
      tags:
      - Loan Transactions
  /v1/loans/glimAccount/{glimId}:
    get:
      operationId: getGlimRepaymentTemplate
      parameters:
      - in: path
        name: glimId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Loans
    post:
      description: |
        Approve GLIM Application:
        Mandatory Fields: approvedOnDate
        Optional Fields: approvedLoanAmount and expectedDisbursementDate
        Approves the GLIM application

        Undo GLIM Application Approval:
        Undoes the GLIM Application Approval

        Reject GLIM Application:
        Mandatory Fields: rejectedOnDate
        Allows you to reject the GLIM application

        Disburse Loan:
        Mandatory Fields: actualDisbursementDate
        Optional Fields: transactionAmount and fixedEmiAmount
        Disburses the Loan

        Disburse Loan To Savings Account:
        Mandatory Fields: actualDisbursementDate
        Optional Fields: transactionAmount and fixedEmiAmount
        Disburses the loan to Saving Account

        Undo Loan Disbursal:
        Undoes the Loan Disbursal
      operationId: glimStateTransitions
      parameters:
      - in: path
        name: glimId
        required: true
        schema:
          type: integer
          format: int64
      - in: query
        name: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostLoansLoanIdRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostLoansLoanIdResponse'
          description: OK
      summary: Approve GLIM Application | Undo GLIM Application Approval | Reject
        GLIM Application | Disburse Loan Disburse Loan To Savings Account | Undo Loan
        Disbursal
      tags:
      - Loans
  /v1/loans/is-catch-up-running:
    get:
      description: "Retrieves whether Loan COB catch up is running, and the current\
        \ execution date if it is running."
      operationId: isCatchUpRunning
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IsCatchUpRunningResponse'
          description: OK
      summary: Retrieves whether Loan COB catch up is running
      tags:
      - Loan COB Catch Up
  /v1/loans/loanreassignment:
    post:
      operationId: loanReassignment
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Bulk Loans
  /v1/loans/loanreassignment/template:
    get:
      operationId: loanReassignmentTemplate
      parameters:
      - in: query
        name: officeId
        schema:
          type: integer
          format: int64
      - in: query
        name: fromLoanOfficerId
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Bulk Loans
  /v1/loans/locked:
    get:
      description: Returns the locked loan IDs
      operationId: retrieveLockedAccounts
      parameters:
      - in: query
        name: page
        schema:
          type: integer
          format: int32
      - in: query
        name: limit
        schema:
          type: integer
          format: int32
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLoanAccountLockResponse'
          description: OK
      summary: List locked loan accounts
      tags:
      - Loan Account Lock
  /v1/loans/oldest-cob-closed:
    get:
      description: Retrieves the COB business date and the oldest COB processed loan
      operationId: getOldestCOBProcessedLoan
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOldestCOBProcessedLoanResponse'
          description: OK
      summary: Retrieves the oldest COB processed loan
      tags:
      - Loan COB Catch Up
  /v1/loans/repayments/downloadtemplate:
    get:
      operationId: getLoanRepaymentTemplate
      parameters:
      - in: query
        name: officeId
        schema:
          type: integer
          format: int64
      - in: query
        name: dateFormat
        schema:
          type: string
      responses:
        default:
          content:
            application/vnd.ms-excel: {}
          description: default response
      tags:
      - Loans
  /v1/loans/repayments/uploadtemplate:
    post:
      operationId: postLoanRepaymentTemplate
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadRequest'
        description: Upload Loan repayments template
      responses:
        default:
          content:
            '*/*':
              schema:
                type: string
          description: default response
      tags:
      - Loans
  /v1/loans/template:
    get:
      description: |-
        This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:

        Field Defaults
        Allowed description Lists
        Example Requests:

        loans/template?templateType=individual&clientId=1


        loans/template?templateType=individual&clientId=1&productId=1
      operationId: template_10
      parameters:
      - description: clientId
        in: query
        name: clientId
        schema:
          type: integer
          format: int64
      - description: groupId
        in: query
        name: groupId
        schema:
          type: integer
          format: int64
      - description: productId
        in: query
        name: productId
        schema:
          type: integer
          format: int64
      - description: templateType
        in: query
        name: templateType
        schema:
          type: string
      - description: staffInSelectedOfficeOnly
        in: query
        name: staffInSelectedOfficeOnly
        schema:
          type: boolean
          default: false
      - description: activeOnly
        in: query
        name: activeOnly
        schema:
          type: boolean
          default: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLoansTemplateResponse'
          description: OK
      summary: Retrieve Loan Details Template
      tags:
      - Loans
  /v1/loans/uploadtemplate:
    post:
      operationId: postLoanTemplate
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadRequest'
        description: Upload Loan template
      responses:
        default:
          content:
            '*/*':
              schema:
                type: string
          description: default response
      tags:
      - Loans
  /v1/loans/{loanId}:
    delete:
      description: "Note: Only loans in \"Submitted and awaiting approval\" status\
        \ can be deleted."
      operationId: deleteLoanApplication
      parameters:
      - description: loanId
        in: path
        name: loanId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteLoansLoanIdResponse'
          description: OK
      summary: Delete a Loan Application
      tags:
      - Loans
    get:
      description: |-
        Note: template=true parameter doesn't apply to this resource.Example Requests:

        loans/1


        loans/1?fields=id,principal,annualInterestRate


        loans/1?associations=all

        loans/1?associations=all&exclude=guarantors


        loans/1?fields=id,principal,annualInterestRate&associations=repaymentSchedule,transactions
      operationId: retrieveLoan
      parameters:
      - description: loanId
        in: path
        name: loanId
        required: true
        schema:
          type: integer
          format: int64
      - description: staffInSelectedOfficeOnly
        in: query
        name: staffInSelectedOfficeOnly
        schema:
          type: boolean
          default: false
      - description: Loan object relations to be included in the response
        in: query
        name: associations
        schema:
          type: string
          default: all
      - description: Optional Loan object relation list to be filtered in the response
        example: "guarantors,futureSchedule"
        in: query
        name: exclude
        schema:
          type: string
      - description: Optional Loan attribute list to be in the response
        example: "id,principal,annualInterestRate"
        in: query
        name: fields
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLoansLoanIdResponse'
          description: OK
      summary: Retrieve a Loan
      tags:
      - Loans
    post:
      description: |-
        Approve Loan Application:
        Mandatory Fields: approvedOnDate
        Optional Fields: approvedLoanAmount and expectedDisbursementDate
        Approves the loan application

        Recover Loan Guarantee:
        Recovers the loan guarantee

        Undo Loan Application Approval:
        Undoes the Loan Application Approval

        Assign a Loan Officer:
        Allows you to assign Loan Officer for existing Loan.

        Unassign a Loan Officer:
        Allows you to unassign the Loan Officer.

        Reject Loan Application:
        Mandatory Fields: rejectedOnDate
        Allows you to reject the loan application

        Applicant Withdraws from Loan Application:
        Mandatory Fields: withdrawnOnDate
        Allows the applicant to withdraw the loan application

        Disburse Loan:
        Mandatory Fields: actualDisbursementDate
        Optional Fields: transactionAmount and fixedEmiAmount
        Disburses the Loan

        Disburse Loan To Savings Account:
        Mandatory Fields: actualDisbursementDate
        Optional Fields: transactionAmount and fixedEmiAmount
        Disburses the loan to Saving Account

        Undo Loan Disbursal:
        Undoes the Loan Disbursal
        Showing request and response for Assign a Loan Officer
      operationId: stateTransitions
      parameters:
      - description: loanId
        in: path
        name: loanId
        required: true
        schema:
          type: integer
          format: int64
      - description: command
        in: query
        name: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostLoansLoanIdRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostLoansLoanIdResponse'
          description: OK
      summary: Approve Loan Application | Recover Loan Guarantee | Undo Loan Application
        Approval | Assign a Loan Officer | Unassign a Loan Officer | Reject Loan Application
        | Applicant Withdraws from Loan Application | Disburse Loan Disburse Loan
        To Savings Account | Undo Loan Disbursal
      tags:
      - Loans
    put:
      description: "Loan application can only be modified when in 'Submitted and pending\
        \ approval' state. Once the application is approved, the details cannot be\
        \ changed using this method."
      operationId: modifyLoanApplication
      parameters:
      - description: loanId
        in: path
        name: loanId
        required: true
        schema:
          type: integer
          format: int64
      - description: command
        in: query
        name: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutLoansLoanIdRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutLoansLoanIdResponse'
          description: OK
      summary: Modify a loan application
      tags:
      - Loans
  /v1/loans/{loanId}/charges:
    get:
      description: "It lists all the Loan Charges specific to a Loan \n\nExample Requests:\n\
        \nloans/1/charges\n\n\nloans/1/charges?fields=name,amountOrPercentage"
      operationId: retrieveAllLoanCharges
      parameters:
      - description: loanId
        in: path
        name: loanId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetLoansLoanIdChargesChargeIdResponse'
          description: OK
      summary: List Loan Charges
      tags:
      - Loan Charges
    post:
      description: Creates a Loan Charge | Pay a Loan Charge
      operationId: executeLoanCharge
      parameters:
      - description: loanId
        in: path
        name: loanId
        required: true
        schema:
          type: integer
          format: int64
      - description: command
        in: query
        name: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostLoansLoanIdChargesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostLoansLoanIdChargesResponse'
          description: OK
      summary: Create a Loan Charge (no command provided) or Pay a charge (command=pay)
      tags:
      - Loan Charges
  /v1/loans/{loanId}/charges/external-id/{loanChargeExternalId}:
    delete:
      description: "Note: Currently, A Loan Charge may only be removed from Loans\
        \ that are not yet approved."
      operationId: deleteLoanCharge_1
      parameters:
      - description: loanId
        in: path
        name: loanId
        required: true
        schema:
          type: integer
          format: int64
      - description: loanChargeExternalId
        in: path
        name: loanChargeExternalId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteLoansLoanIdChargesChargeIdResponse'
          description: OK
      summary: Delete a Loan Charge
      tags:
      - Loan Charges
    get:
      description: |-
        Retrieves Loan Charge according to the Loan ID and Loan Charge External IDExample Requests:

        /loans/1/charges/1


        /loans/1/charges/external-id/1?fields=name,amountOrPercentage
      operationId: retrieveLoanCharge_1
      parameters:
      - description: loanId
        in: path
        name: loanId
        required: true
        schema:
          type: integer
          format: int64
      - description: loanChargeExternalId
        in: path
        name: loanChargeExternalId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLoansLoanIdChargesChargeIdResponse'
          description: OK
      summary: Retrieve a Loan Charge
      tags:
      - Loan Charges
    post:
      description: Loan Charge will be paid if the loan is linked with a savings account
        | Waive Loan Charge | Add Charge Adjustment
      operationId: executeLoanCharge_3
      parameters:
      - description: loanId
        in: path
        name: loanId
        required: true
        schema:
          type: integer
          format: int64
      - description: loanChargeExternalId
        in: path
        name: loanChargeExternalId
        required: true
        schema:
          type: string
      - description: command
        in: query
        name: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostLoansLoanIdChargesChargeIdRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostLoansLoanIdChargesChargeIdResponse'
          description: OK
      summary: Pay / Waive / Adjustment for Loan Charge
      tags:
      - Loan Charges
    put:
      description: Currently Loan Charges may be updated only if the Loan is not yet
        approved
      operationId: updateLoanCharge_1
      parameters:
      - description: loanId
        in: path
        name: loanId
        required: true
        schema:
          type: integer
          format: int64
      - description: loanChargeExternalId
        in: path
        name: loanChargeExternalId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutLoansLoanIdChargesChargeIdRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutLoansLoanIdChargesChargeIdResponse'
          description: OK
      summary: Update a Loan Charge
      tags:
      - Loan Charges
  /v1/loans/{loanId}/charges/template:
    get:
      description: |+
        This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:

        Field Defaults
        Allowed description Lists
        Example Request:

        loans/1/charges/template

      operationId: retrieveTemplate_8
      parameters:
      - description: loanId
        in: path
        name: loanId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLoansLoanIdChargesTemplateResponse'
          description: OK
      summary: Retrieve Loan Charges Template
      tags:
      - Loan Charges
  /v1/loans/{loanId}/charges/{loanChargeId}:
    delete:
      description: "Note: Currently, A Loan Charge may only be removed from Loans\
        \ that are not yet approved."
      operationId: deleteLoanCharge
      parameters:
      - description: loanId
        in: path
        name: loanId
        required: true
        schema:
          type: integer
          format: int64
      - description: loanChargeId
        in: path
        name: loanChargeId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteLoansLoanIdChargesChargeIdResponse'
          description: OK
      summary: Delete a Loan Charge
      tags:
      - Loan Charges
    get:
      description: |-
        Retrieves Loan Charge according to the Loan ID and Loan Charge IDExample Requests:

        /loans/1/charges/1


        /loans/1/charges/1?fields=name,amountOrPercentage
      operationId: retrieveLoanCharge
      parameters:
      - description: loanId
        in: path
        name: loanId
        required: true
        schema:
          type: integer
          format: int64
      - description: loanChargeId
        in: path
        name: loanChargeId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLoansLoanIdChargesChargeIdResponse'
          description: OK
      summary: Retrieve a Loan Charge
      tags:
      - Loan Charges
    post:
      description: Loan Charge will be paid if the loan is linked with a savings account
        | Waive Loan Charge | Add Charge Adjustment
      operationId: executeLoanCharge_2
      parameters:
      - description: loanId
        in: path
        name: loanId
        required: true
        schema:
          type: integer
          format: int64
      - description: loanChargeId
        in: path
        name: loanChargeId
        required: true
        schema:
          type: integer
          format: int64
      - description: command
        in: query
        name: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostLoansLoanIdChargesChargeIdRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostLoansLoanIdChargesChargeIdResponse'
          description: OK
      summary: Pay / Waive / Adjustment for Loan Charge
      tags:
      - Loan Charges
    put:
      description: Currently Loan Charges may be updated only if the Loan is not yet
        approved
      operationId: updateLoanCharge
      parameters:
      - description: loanId
        in: path
        name: loanId
        required: true
        schema:
          type: integer
          format: int64
      - description: loanChargeId
        in: path
        name: loanChargeId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutLoansLoanIdChargesChargeIdRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutLoansLoanIdChargesChargeIdResponse'
          description: OK
      summary: Update a Loan Charge
      tags:
      - Loan Charges
  /v1/loans/{loanId}/collaterals:
    get:
      description: |-
        Example Requests:

        loans/1/collaterals


        loans/1/collaterals?fields=value,description
      operationId: retrieveCollateralDetails
      parameters:
      - description: loanId
        in: path
        name: loanId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetLoansLoanIdCollateralsResponse'
          description: OK
      summary: List Loan Collaterals
      tags:
      - Loan Collateral
    post:
      description: "Note: Currently, Collaterals may be added only before a Loan is\
        \ approved"
      operationId: createCollateral
      parameters:
      - description: loanId
        in: path
        name: loanId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostLoansLoanIdCollateralsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostLoansLoanIdCollateralsResponse'
          description: OK
      summary: Create a Collateral
      tags:
      - Loan Collateral
  /v1/loans/{loanId}/collaterals/template:
    get:
      description: |-
        This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:

        Field Defaults
        Allowed Value Lists
        Example Request:

        loans/1/collaterals/template
      operationId: newCollateralTemplate
      parameters:
      - description: loanId
        in: path
        name: loanId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLoansLoanIdCollateralsTemplateResponse'
          description: OK
      summary: Retrieve Collateral Details Template
      tags:
      - Loan Collateral
  /v1/loans/{loanId}/collaterals/{collateralId}:
    delete:
      description: "Note: A collateral can only be removed from Loans that are not\
        \ yet approved."
      operationId: deleteCollateral
      parameters:
      - description: loanId
        in: path
        name: loanId
        required: true
        schema:
          type: integer
          format: int64
      - description: collateralId
        in: path
        name: collateralId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteLoansLoanIdCollateralsCollateralIdResponse'
          description: OK
      summary: Remove a Collateral
      tags:
      - Loan Collateral
    get:
      description: |-
        Example Requests:

        /loans/1/collaterals/1


        /loans/1/collaterals/1?fields=description,description
      operationId: retrieveCollateralDetails_1
      parameters:
      - description: loanId
        in: path
        name: loanId
        required: true
        schema:
          type: integer
          format: int64
      - description: collateralId
        in: path
        name: collateralId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLoansLoanIdCollateralsResponse'
          description: OK
      summary: Retrieve a Collateral
      tags:
      - Loan Collateral
    put:
      operationId: updateCollateral
      parameters:
      - description: loanId
        in: path
        name: loanId
        required: true
        schema:
          type: integer
          format: int64
      - description: collateralId
        in: path
        name: collateralId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutLoansLoandIdCollateralsCollateralIdRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutLoansLoanIdCollateralsCollateralIdResponse'
          description: OK
      summary: Update a Collateral
      tags:
      - Loan Collateral
  /v1/loans/{loanId}/delinquency-actions:
    get:
      operationId: getLoanDelinquencyActions
      parameters:
      - description: loanId
        in: path
        name: loanId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetDelinquencyActionsResponse'
          description: OK
      summary: Retrieve delinquency actions related to the loan
      tags:
      - Loans
    post:
      operationId: createLoanDelinquencyAction
      parameters:
      - description: loanId
        in: path
        name: loanId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostLoansDelinquencyActionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostLoansDelinquencyActionResponse'
          description: OK
      summary: Adds a new delinquency action for a loan
      tags:
      - Loans
  /v1/loans/{loanId}/delinquencytags:
    get:
      operationId: getDelinquencyTagHistory
      parameters:
      - description: loanId
        in: path
        name: loanId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetDelinquencyTagHistoryResponse'
          description: OK
      summary: Retrieve the Loan Delinquency Tag history using the Loan Id
      tags:
      - Loans
  /v1/loans/{loanId}/disbursements/editDisbursements:
    put:
      operationId: addAndDeleteDisbursementDetail
      parameters:
      - in: path
        name: loanId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Loan Disbursement Details
  /v1/loans/{loanId}/disbursements/{disbursementId}:
    get:
      operationId: retriveDetail
      parameters:
      - in: path
        name: loanId
        required: true
        schema:
          type: integer
          format: int64
      - in: path
        name: disbursementId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Loan Disbursement Details
    put:
      operationId: updateDisbursementDate
      parameters:
      - in: path
        name: loanId
        required: true
        schema:
          type: integer
          format: int64
      - in: path
        name: disbursementId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Loan Disbursement Details
  /v1/loans/{loanId}/guarantors:
    get:
      operationId: retrieveGuarantorDetails
      parameters:
      - in: path
        name: loanId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Guarantors
    post:
      operationId: createGuarantor
      parameters:
      - in: path
        name: loanId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Guarantors
  /v1/loans/{loanId}/guarantors/accounts/template:
    get:
      operationId: accountsTemplate
      parameters:
      - in: query
        name: clientId
        schema:
          type: integer
          format: int64
      - in: path
        name: loanId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Guarantors
  /v1/loans/{loanId}/guarantors/downloadtemplate:
    get:
      operationId: getGuarantorTemplate
      parameters:
      - in: query
        name: officeId
        schema:
          type: integer
          format: int64
      - in: query
        name: dateFormat
        schema:
          type: string
      - in: path
        name: loanId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/vnd.ms-excel: {}
          description: default response
      tags:
      - Guarantors
  /v1/loans/{loanId}/guarantors/template:
    get:
      operationId: newGuarantorTemplate
      parameters:
      - in: path
        name: loanId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Guarantors
  /v1/loans/{loanId}/guarantors/uploadtemplate:
    post:
      operationId: postGuarantorTemplate
      parameters:
      - in: path
        name: loanId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadRequest'
        description: Upload guarantor template
      responses:
        default:
          content:
            '*/*':
              schema:
                type: string
          description: default response
      tags:
      - Guarantors
  /v1/loans/{loanId}/guarantors/{guarantorId}:
    delete:
      operationId: deleteGuarantor
      parameters:
      - in: path
        name: loanId
        required: true
        schema:
          type: integer
          format: int64
      - in: path
        name: guarantorId
        required: true
        schema:
          type: integer
          format: int64
      - in: query
        name: guarantorFundingId
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Guarantors
    get:
      operationId: retrieveGuarantorDetails_1
      parameters:
      - in: path
        name: loanId
        required: true
        schema:
          type: integer
          format: int64
      - in: path
        name: guarantorId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Guarantors
    put:
      operationId: updateGuarantor
      parameters:
      - in: path
        name: loanId
        required: true
        schema:
          type: integer
          format: int64
      - in: path
        name: guarantorId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Guarantors
  /v1/loans/{loanId}/postdatedchecks:
    get:
      description: Get All Post dated Checks
      operationId: getPostDatedChecks
      parameters:
      - description: loanId
        in: path
        name: loanId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetPostDatedChecks'
          description: OK
      summary: Get All Post Dated Checks
      tags:
      - repayment with post dated checks
  /v1/loans/{loanId}/postdatedchecks/{installmentId}:
    get:
      description: Get Post Dated Check
      operationId: getPostDatedCheck
      parameters:
      - description: installmentId
        in: path
        name: installmentId
        required: true
        schema:
          type: integer
          format: int32
      - description: loanId
        in: path
        name: loanId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetPostDatedChecks'
          description: OK
      summary: Get Post Dated Check
      tags:
      - repayment with post dated checks
  /v1/loans/{loanId}/postdatedchecks/{postDatedCheckId}:
    delete:
      description: Delete Post Dated Check
      operationId: deletePostDatedCheck
      parameters:
      - description: postDatedCheckId
        in: path
        name: postDatedCheckId
        required: true
        schema:
          type: integer
          format: int64
      - description: loanId
        in: path
        name: loanId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeletePostDatedCheck'
          description: OK
      summary: Delete Post Dated Check
      tags:
      - repayment with post dated checks
    put:
      description: "Update Post Dated Check, Bounced Check"
      operationId: updatePostDatedChecks
      parameters:
      - description: postDatedCheckId
        in: path
        name: postDatedCheckId
        required: true
        schema:
          type: integer
          format: int64
      - description: loanId
        in: path
        name: loanId
        required: true
        schema:
          type: integer
          format: int64
      - description: editType
        in: query
        name: editType
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePostDatedCheckRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UpdatePostDatedCheckResponse'
          description: OK
      summary: "Update Post Dated Check, Bounced Check"
      tags:
      - repayment with post dated checks
  /v1/loans/{loanId}/schedule:
    post:
      description: |-
        Calculate loan repayment schedule based on Loan term variations:

        Mandatory Fields: exceptions,locale,dateFormat

        Updates loan repayment schedule based on Loan term variations:

        Mandatory Fields: exceptions,locale,dateFormat

        Updates loan repayment schedule by removing Loan term variations:

        It updates the loan repayment schedule by removing Loan term variations

        Showing request/response for 'Updates loan repayment schedule by removing Loan term variations'
      operationId: calculateLoanScheduleOrSubmitVariableSchedule
      parameters:
      - description: loanId
        in: path
        name: loanId
        required: true
        schema:
          type: integer
          format: int64
      - description: command
        in: query
        name: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostLoansLoanIdScheduleRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostLoansLoanIdScheduleResponse'
          description: OK
      summary: Calculate loan repayment schedule based on Loan term variations | Updates
        loan repayment schedule based on Loan term variations | Updates loan repayment
        schedule by removing Loan term variations
      tags:
      - Loan Rescheduling
  /v1/loans/{loanId}/template:
    get:
      operationId: retrieveApprovalTemplate
      parameters:
      - description: loanId
        in: path
        name: loanId
        required: true
        schema:
          type: integer
          format: int64
      - description: templateType
        in: query
        name: templateType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLoansApprovalTemplateResponse'
          description: OK
      tags:
      - Loans
  /v1/loans/{loanId}/transactions:
    post:
      description: "This API covers the major loan transaction functionality\n\nExample\
        \ Requests:\n\nloans/1/transactions?command=repayment | Make a Repayment |\
        \ \nloans/1/transactions?command=merchantIssuedRefund | Merchant Issued Refund\
        \ | \nloans/1/transactions?command=payoutRefund | Payout Refund | \nloans/1/transactions?command=goodwillCredit\
        \ | Goodwil Credit | \nloans/1/transactions?command=chargeRefund | Charge\
        \ Refund | \nloans/1/transactions?command=waiveinterest | Waive Interest |\
        \ \nloans/1/transactions?command=writeoff | Write-off Loan | \nloans/1/transactions?command=close-rescheduled\
        \ | Close Rescheduled Loan | \nloans/1/transactions?command=close | Close\
        \ Loan | \nloans/1/transactions?command=undowriteoff | Undo Loan Write-off\
        \ | \nloans/1/transactions?command=recoverypayment | Make Recovery Payment\
        \ | \nloans/1/transactions?command=refundByCash | Make a Refund of an Active\
        \ Loan by Cash | \nloans/1/transactions?command=foreclosure | Foreclosure\
        \ of an Active Loan | \nloans/1/transactions?command=creditBalanceRefund |\
        \ Credit Balance Refund |  \nloans/external-id/7dd80a7c-ycba-a446-t378-91eb6f53e854/transactions?command=charge-off\
        \ | Charge-off Loan |  \nloans/1/transactions?command=downPayment | Down Payment\
        \ |  \n"
      operationId: executeLoanTransaction
      parameters:
      - description: loanId
        in: path
        name: loanId
        required: true
        schema:
          type: integer
          format: int64
      - description: command
        in: query
        name: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostLoansLoanIdTransactionsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostLoansLoanIdTransactionsResponse'
          description: OK
      summary: Significant Loan Transactions
      tags:
      - Loan Transactions
  /v1/loans/{loanId}/transactions/external-id/{externalTransactionId}:
    get:
      description: |-
        Retrieves a Transaction Details

        Example Request:

        loans/5/transactions/external-id/5dd80a7c-ccba-4446-b378-01eb6f53e871
      operationId: retrieveTransactionByTransactionExternalId
      parameters:
      - description: loanId
        in: path
        name: loanId
        required: true
        schema:
          type: integer
          format: int64
      - description: externalTransactionId
        in: path
        name: externalTransactionId
        required: true
        schema:
          type: string
      - description: Optional Loan Transaction attribute list to be in the response
        example: "id,date,amount"
        in: query
        name: fields
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLoansLoanIdTransactionsTransactionIdResponse'
          description: OK
      summary: Retrieve a Transaction Details
      tags:
      - Loan Transactions
    post:
      description: |-
        Note: there is no need to specify command={transactionType} parameter.

        Mandatory Fields: transactionDate, transactionAmount
      operationId: adjustLoanTransaction_1
      parameters:
      - description: loanId
        in: path
        name: loanId
        required: true
        schema:
          type: integer
          format: int64
      - description: externalTransactionId
        in: path
        name: externalTransactionId
        required: true
        schema:
          type: string
      - description: command
        in: query
        name: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostLoansLoanIdTransactionsTransactionIdRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostLoansLoanIdTransactionsResponse'
          description: OK
      summary: Adjust a Transaction
      tags:
      - Loan Transactions
  /v1/loans/{loanId}/transactions/external-id/{transactionExternalId}:
    put:
      description: Undo a Waive Charge Transaction
      operationId: undoWaiveCharge_1
      parameters:
      - description: loanId
        in: path
        name: loanId
        required: true
        schema:
          type: integer
          format: int64
      - description: transactionExternalId
        in: path
        name: transactionExternalId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutChargeTransactionChangesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutChargeTransactionChangesResponse'
          description: OK
      summary: Undo a Waive Charge Transaction
      tags:
      - Loan Transactions
  /v1/loans/{loanId}/transactions/template:
    get:
      description: |
        This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:

        Field Defaults
        Allowed Value Lists

        Example Requests:

        loans/1/transactions/template?command=repaymentloans/1/transactions/template?command=merchantIssuedRefundloans/1/transactions/template?command=payoutRefundloans/1/transactions/template?command=goodwillCredit
        loans/1/transactions/template?command=waiveinterest
        loans/1/transactions/template?command=writeoff
        loans/1/transactions/template?command=close-rescheduled
        loans/1/transactions/template?command=close
        loans/1/transactions/template?command=disburse
        loans/1/transactions/template?command=disburseToSavings
        loans/1/transactions/template?command=recoverypayment
        loans/1/transactions/template?command=prepayLoan
        loans/1/transactions/template?command=refundbycash
        loans/1/transactions/template?command=refundbytransfer
        loans/1/transactions/template?command=foreclosure
        loans/1/transactions/template?command=creditBalanceRefund (returned 'amount' field will have the overpaid value)
        loans/1/transactions/template?command=charge-off
        loans/1/transactions/template?command=downPayment
      operationId: retrieveTransactionTemplate
      parameters:
      - description: loanId
        in: path
        name: loanId
        required: true
        schema:
          type: integer
          format: int64
      - description: command
        in: query
        name: command
        schema:
          type: string
      - description: dateFormat
        in: query
        name: dateFormat
        schema:
          type: string
      - description: transactionDate
        in: query
        name: transactionDate
        schema:
          $ref: '#/components/schemas/DateParam'
      - description: locale
        in: query
        name: locale
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLoansLoanIdTransactionsTemplateResponse'
          description: OK
      summary: Retrieve Loan Transaction Template
      tags:
      - Loan Transactions
  /v1/loans/{loanId}/transactions/{transactionId}:
    get:
      description: |-
        Retrieves a Transaction Details

        Example Request:

        loans/5/transactions/3
      operationId: retrieveTransaction
      parameters:
      - description: loanId
        in: path
        name: loanId
        required: true
        schema:
          type: integer
          format: int64
      - description: transactionId
        in: path
        name: transactionId
        required: true
        schema:
          type: integer
          format: int64
      - description: Optional Loan Transaction attribute list to be in the response
        example: "id,date,amount"
        in: query
        name: fields
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLoansLoanIdTransactionsTransactionIdResponse'
          description: OK
      summary: Retrieve a Transaction Details
      tags:
      - Loan Transactions
    post:
      description: |-
        Note: there is no need to specify command={transactionType} parameter.

        Mandatory Fields: transactionDate, transactionAmount
      operationId: adjustLoanTransaction
      parameters:
      - description: loanId
        in: path
        name: loanId
        required: true
        schema:
          type: integer
          format: int64
      - description: transactionId
        in: path
        name: transactionId
        required: true
        schema:
          type: integer
          format: int64
      - description: command
        in: query
        name: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostLoansLoanIdTransactionsTransactionIdRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostLoansLoanIdTransactionsResponse'
          description: OK
      summary: Adjust a Transaction
      tags:
      - Loan Transactions
    put:
      description: Undo a Waive Charge Transaction
      operationId: undoWaiveCharge
      parameters:
      - description: loanId
        in: path
        name: loanId
        required: true
        schema:
          type: integer
          format: int64
      - description: transactionId
        in: path
        name: transactionId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutChargeTransactionChangesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutChargeTransactionChangesResponse'
          description: OK
      summary: Undo a Waive Charge Transaction
      tags:
      - Loan Transactions
  /v1/makercheckers:
    get:
      description: |-
        Get a list of entries that can be checked by the requestor that match the criteria supplied.

        Example Requests:

        makercheckers

        makercheckers?fields=madeOnDate,maker,processingResult

        makercheckers?makerDateTimeFrom=2013-03-25 08:00:00&makerDateTimeTo=2013-04-04 18:00:00

        makercheckers?officeId=1

        makercheckers?officeId=1&includeJson=true
      operationId: retrieveCommands
      parameters:
      - description: actionName
        in: query
        name: actionName
        schema:
          type: string
      - description: entityName
        in: query
        name: entityName
        schema:
          type: string
      - description: resourceId
        in: query
        name: resourceId
        schema:
          type: integer
          format: int64
      - description: makerId
        in: query
        name: makerId
        schema:
          type: integer
          format: int64
      - description: makerDateTimeFrom
        in: query
        name: makerDateTimeFrom
        schema:
          type: string
      - description: makerDateTimeTo
        in: query
        name: makerDateTimeTo
        schema:
          type: string
      - description: officeId
        in: query
        name: officeId
        schema:
          type: integer
          format: int32
      - description: groupId
        in: query
        name: groupId
        schema:
          type: integer
          format: int32
      - description: clientId
        in: query
        name: clientId
        schema:
          type: integer
          format: int32
      - description: loanid
        in: query
        name: loanid
        schema:
          type: integer
          format: int32
      - description: savingsAccountId
        in: query
        name: savingsAccountId
        schema:
          type: integer
          format: int32
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetMakerCheckerResponse'
          description: OK
      summary: List Maker Checker Entries
      tags:
      - Maker Checker (or 4-eye) functionality
  /v1/makercheckers/searchtemplate:
    get:
      description: |-
        This is a convenience resource. It can be useful when building a Checker Inbox UI. "appUsers" are data scoped to the office/branch the requestor is associated with. "actionNames" and "entityNames" returned are those that the requestor has Checker approval permissions for.

        Example Requests:

        makercheckers/searchtemplate
        makercheckers/searchtemplate?fields=entityNames
      operationId: retrieveAuditSearchTemplate_1
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMakerCheckersSearchTemplateResponse'
          description: OK
      summary: Maker Checker Search Template
      tags:
      - Maker Checker (or 4-eye) functionality
  /v1/makercheckers/{auditId}:
    delete:
      operationId: deleteMakerCheckerEntry
      parameters:
      - description: auditId
        in: path
        name: auditId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostMakerCheckersResponse'
          description: OK
      summary: Delete Maker Checker Entry
      tags:
      - Maker Checker (or 4-eye) functionality
    post:
      operationId: approveMakerCheckerEntry
      parameters:
      - description: auditId
        in: path
        name: auditId
        required: true
        schema:
          type: integer
          format: int64
      - description: command
        in: query
        name: command
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostMakerCheckersResponse'
          description: OK
      summary: Approve Maker Checker Entry | Reject Maker Checker Entry
      tags:
      - Maker Checker (or 4-eye) functionality
  /v1/mixmapping:
    get:
      operationId: retrieveTaxonomyMapping
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Mix Mapping
    put:
      operationId: updateTaxonomyMapping
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Mix Mapping
  /v1/mixreport:
    get:
      operationId: retrieveXBRLReport
      parameters:
      - in: query
        name: startDate
        schema:
          type: string
          format: date-time
      - in: query
        name: endDate
        schema:
          type: string
          format: date-time
      - in: query
        name: currency
        schema:
          type: string
      responses:
        default:
          content:
            application/xml:
              schema:
                type: string
          description: default response
      tags:
      - Mix Report
  /v1/mixtaxonomy:
    get:
      operationId: retrieveAll_14
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Mix Taxonomy
  /v1/notifications:
    get:
      operationId: getAllNotifications
      parameters:
      - description: orderBy
        in: query
        name: orderBy
        schema:
          type: string
      - description: limit
        in: query
        name: limit
        schema:
          type: integer
          format: int32
      - description: offset
        in: query
        name: offset
        schema:
          type: integer
          format: int32
      - description: sortOrder
        in: query
        name: sortOrder
        schema:
          type: string
      - description: isRead
        in: query
        name: isRead
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetNotificationsResponse'
          description: OK
      tags:
      - Notification
    put:
      operationId: update_5
      responses:
        default:
          content:
            application/json: {}
          description: default response
      tags:
      - Notification
  /v1/offices:
    get:
      description: |-
        Example Requests:

        offices


        offices?fields=id,name,openingDate
      operationId: retrieveOffices
      parameters:
      - description: includeAllOffices
        in: query
        name: includeAllOffices
        schema:
          type: boolean
          default: false
      - description: orderBy
        in: query
        name: orderBy
        schema:
          type: string
      - description: sortOrder
        in: query
        name: sortOrder
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetOfficesResponse'
          description: OK
      summary: List Offices
      tags:
      - Offices
    post:
      description: |-
        Mandatory Fields
        name, openingDate, parentId
      operationId: createOffice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostOfficesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostOfficesResponse'
          description: OK
      summary: Create an Office
      tags:
      - Offices
  /v1/offices/downloadtemplate:
    get:
      operationId: getOfficeTemplate
      parameters:
      - in: query
        name: dateFormat
        schema:
          type: string
      responses:
        default:
          content:
            application/vnd.ms-excel: {}
          description: default response
      tags:
      - Offices
  /v1/offices/external-id/{externalId}:
    get:
      description: |-
        Example Requests:

        offices/external-id/asd123


        offices/external-id/asd123?template=true


        offices/external-id/asd123?fields=id,name,parentName
      operationId: retrieveOfficeByExternalId
      parameters:
      - description: externalId
        in: path
        name: externalId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOfficesResponse'
          description: default response
      summary: Retrieve an Office using external id
      tags:
      - Offices
    put:
      operationId: updateOfficeWithExternalId
      parameters:
      - description: externalId
        in: path
        name: externalId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutOfficesOfficeIdRequest'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutOfficesOfficeIdResponse'
          description: default response
      summary: Update Office
      tags:
      - Offices
  /v1/offices/template:
    get:
      description: |-
        This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:

        Field Defaults
        Allowed description Lists
        Example Request:

        offices/template
      operationId: retrieveOfficeTemplate_1
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOfficesTemplateResponse'
          description: OK
      summary: Retrieve Office Details Template
      tags:
      - Offices
  /v1/offices/uploadtemplate:
    post:
      operationId: postOfficeTemplate
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadRequest'
        description: Upload office template
      responses:
        default:
          content:
            '*/*':
              schema:
                type: string
          description: default response
      tags:
      - Offices
  /v1/offices/{officeId}:
    get:
      description: |-
        Example Requests:

        offices/1


        offices/1?template=true


        offices/1?fields=id,name,parentName
      operationId: retrieveOffice
      parameters:
      - description: officeId
        in: path
        name: officeId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOfficesResponse'
          description: OK
      summary: Retrieve an Office
      tags:
      - Offices
    put:
      operationId: updateOffice
      parameters:
      - description: officeId
        in: path
        name: officeId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutOfficesOfficeIdRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutOfficesOfficeIdResponse'
          description: OK
      summary: Update Office
      tags:
      - Offices
  /v1/officetransactions:
    get:
      operationId: retrieveOfficeTransactions
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
    post:
      operationId: transferMoneyFrom
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
  /v1/officetransactions/template:
    get:
      operationId: newOfficeTransactionDetails
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
  /v1/officetransactions/{transactionId}:
    delete:
      operationId: delete_8
      parameters:
      - in: path
        name: transactionId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
  /v1/passwordpreferences:
    get:
      operationId: retrieve_1
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPasswordPreferencesTemplateResponse'
          description: OK
      tags:
      - Password preferences
    put:
      operationId: update_25
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutPasswordPreferencesTemplateRequest'
        required: true
      responses:
        "200":
          description: OK
      summary: Update password preferences
      tags:
      - Password preferences
  /v1/passwordpreferences/template:
    get:
      description: |-
        ARGUMENTS
        Example Requests:

        passwordpreferences
      operationId: template_21
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetPasswordPreferencesTemplateResponse'
          description: OK
      summary: List Application Password validation policies
      tags:
      - Password preferences
  /v1/paymenttypes:
    get:
      description: Retrieve list of payment types
      operationId: getAllPaymentTypes
      parameters:
      - description: onlyWithCode
        in: query
        name: onlyWithCode
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetPaymentTypesResponse'
          description: OK
      summary: Retrieve all Payment Types
      tags:
      - Payment Type
    post:
      description: |-
        Creates a new Payment type

        Mandatory Fields: name

        Optional Fields: Description, isCashPayment,Position
      operationId: createPaymentType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostPaymentTypesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostPaymentTypesResponse'
          description: OK
      summary: Create a Payment Type
      tags:
      - Payment Type
  /v1/paymenttypes/{paymentTypeId}:
    delete:
      description: Deletes payment type
      operationId: deleteCode_1
      parameters:
      - description: paymentTypeId
        in: path
        name: paymentTypeId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletePaymentTypesPaymentTypeIdResponse'
          description: OK
      summary: Delete a Payment Type
      tags:
      - Payment Type
    get:
      description: Retrieves a payment type
      operationId: retrieveOnePaymentType
      parameters:
      - description: paymentTypeId
        in: path
        name: paymentTypeId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPaymentTypesPaymentTypeIdResponse'
          description: OK
      summary: Retrieve a Payment Type
      tags:
      - Payment Type
    put:
      description: Updates a Payment Type
      operationId: updatePaymentType
      parameters:
      - description: paymentTypeId
        in: path
        name: paymentTypeId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutPaymentTypesPaymentTypeIdRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutPaymentTypesPaymentTypeIdResponse'
          description: OK
      summary: Update a Payment Type
      tags:
      - Payment Type
  /v1/permissions:
    get:
      description: |-
        ARGUMENTS
        makerCheckerableoptional, Values are true, false. Default is false.
        If makerCheckerable=false or not supplied then a list of application permissions is returned. The "selected" attribute is always true in this case.

        If makerCheckerable=true then the "selected" attribute shows whether the permission is enabled for Maker Check functionality.

        Note: Each Apache Fineract transaction is associated with a permission.

        Example Requests:

        permissions


        permissions?makerCheckerable=true


        permissions?fields=grouping,code
      operationId: retrieveAllPermissions
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetPermissionsResponse'
          description: OK
      summary: List Application Permissions
      tags:
      - Permissions
    put:
      operationId: updatePermissionsDetails
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutPermissionsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommandProcessingResult'
          description: OK
      summary: Enable/Disable Permissions for Maker Checker
      tags:
      - Permissions
  /v1/povertyLine/{ppiName}:
    get:
      operationId: retrieveAll_12
      parameters:
      - in: path
        name: ppiName
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Poverty Line
  /v1/povertyLine/{ppiName}/{likelihoodId}:
    get:
      operationId: retrieveAll_13
      parameters:
      - in: path
        name: ppiName
        required: true
        schema:
          type: string
      - in: path
        name: likelihoodId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Poverty Line
  /v1/products/{type}:
    get:
      description: |-
        Lists Share Products

        Mandatory Fields: limit, offset

        Example Requests:

        shareproducts
      operationId: retrieveAllProducts
      parameters:
      - description: type
        in: path
        name: type
        required: true
        schema:
          type: string
      - description: offset
        in: query
        name: offset
        schema:
          type: integer
          format: int32
      - description: limit
        in: query
        name: limit
        schema:
          type: integer
          format: int32
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProductsTypeResponse'
          description: OK
      summary: List Share Products
      tags:
      - Products
    post:
      description: |-
        Creates a Share Product

        Mandatory Fields: name, shortName, description, currencyCode, digitsAfterDecimal,inMultiplesOf, locale, totalShares, unitPrice, nominalShares,allowDividendCalculationForInactiveClients,accountingRule

        Mandatory Fields for Cash based accounting (accountingRule = 2): shareReferenceId, shareSuspenseId, shareEquityId, incomeFromFeeAccountId

        Optional Fields: sharesIssued, minimumShares, maximumShares, minimumActivePeriodForDividends, minimumactiveperiodFrequencyType, lockinPeriodFrequency, lockinPeriodFrequencyType, marketPricePeriods, chargesSelected
      operationId: createProduct
      parameters:
      - description: type
        in: path
        name: type
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostProductsTypeRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostProductsTypeResponse'
          description: OK
      summary: Create a Share Product
      tags:
      - Products
  /v1/products/{type}/template:
    get:
      operationId: retrieveTemplate_13
      parameters:
      - description: type
        in: path
        name: type
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Products
  /v1/products/{type}/{productId}:
    get:
      description: |-
        Retrieves a Share Product

        Example Requests:

        products/share/1


        products/share/1?template=true
      operationId: retrieveProduct
      parameters:
      - description: productId
        in: path
        name: productId
        required: true
        schema:
          type: integer
          format: int64
      - description: type
        in: path
        name: type
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProductsTypeProductIdResponse'
          description: OK
      summary: Retrieve a Share Product
      tags:
      - Products
    post:
      operationId: handleCommands_3
      parameters:
      - description: type
        in: path
        name: type
        required: true
        schema:
          type: string
      - description: productId
        in: path
        name: productId
        required: true
        schema:
          type: integer
          format: int64
      - description: command
        in: query
        name: command
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Products
    put:
      description: Updates a Share Product
      operationId: updateProduct
      parameters:
      - description: type
        in: path
        name: type
        required: true
        schema:
          type: string
      - description: productId
        in: path
        name: productId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutProductsTypeProductIdRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutProductsTypeProductIdResponse'
          description: OK
      summary: Update a Share Product
      tags:
      - Products
  /v1/provisioningcategory:
    get:
      operationId: retrieveAll_15
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Provisioning Category
    post:
      operationId: createProvisioningCategory
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Provisioning Category
  /v1/provisioningcategory/{categoryId}:
    delete:
      operationId: deleteProvisioningCategory
      parameters:
      - in: path
        name: categoryId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Provisioning Category
    put:
      operationId: updateProvisioningCategory
      parameters:
      - in: path
        name: categoryId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Provisioning Category
  /v1/provisioningcriteria:
    get:
      description: Retrieves all created Provisioning Criterias
      operationId: retrieveAllProvisioningCriterias
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetProvisioningCriteriaResponse'
          description: OK
      summary: Retrieves all created Provisioning Criterias
      tags:
      - Provisioning Criteria
    post:
      description: "Creates a new Provisioning Criteria\n\nMandatory Fields: \ncriteriaName\n\
        provisioningcriteria\n\nOptional Fields: \nloanProducts"
      operationId: createProvisioningCriteria
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostProvisioningCriteriaRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostProvisioningCriteriaResponse'
          description: OK
      summary: Create a new Provisioning Criteria
      tags:
      - Provisioning Criteria
  /v1/provisioningcriteria/template:
    get:
      operationId: retrieveTemplate_3
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Provisioning Criteria
  /v1/provisioningcriteria/{criteriaId}:
    delete:
      description: Deletes Provisioning Criteria
      operationId: deleteProvisioningCriteria
      parameters:
      - description: criteriaId
        in: path
        name: criteriaId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteProvisioningCriteriaResponse'
          description: OK
      summary: Deletes Provisioning Criteria
      tags:
      - Provisioning Criteria
    get:
      description: Retrieves a Provisioning Criteria
      operationId: retrieveProvisioningCriteria
      parameters:
      - description: criteriaId
        in: path
        name: criteriaId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProvisioningCriteriaCriteriaIdResponse'
          description: OK
      summary: Retrieves a Provisioning Criteria
      tags:
      - Provisioning Criteria
    put:
      description: |-
        Updates a new Provisioning Criteria

        Optional Fields
        criteriaName, loanProducts, provisioningcriteria
      operationId: updateProvisioningCriteria
      parameters:
      - description: criteriaId
        in: path
        name: criteriaId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutProvisioningCriteriaRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutProvisioningCriteriaResponse'
          description: OK
      summary: Updates a new Provisioning Criteria
      tags:
      - Provisioning Criteria
  /v1/provisioningentries:
    get:
      operationId: retrieveAllProvisioningEntries
      parameters:
      - description: offset
        in: query
        name: offset
        schema:
          type: integer
          format: int32
      - description: limit
        in: query
        name: limit
        schema:
          type: integer
          format: int32
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProvisioningEntryData'
          description: OK
      summary: List all Provisioning Entries
      tags:
      - Provisioning Entries
    post:
      description: |-
        Creates a new Provisioning Entries

        Mandatory Fields
        date
        dateFormat
        locale
        Optional Fields
        createjournalentries
      operationId: createProvisioningEntries
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostProvisioningEntriesRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostProvisioningEntriesResponse'
          description: OK
      summary: Create new Provisioning Entries
      tags:
      - Provisioning Entries
  /v1/provisioningentries/entries:
    get:
      operationId: retrieveProviioningEntries
      parameters:
      - in: query
        name: entryId
        schema:
          type: integer
          format: int64
      - in: query
        name: offset
        schema:
          type: integer
          format: int32
      - in: query
        name: limit
        schema:
          type: integer
          format: int32
      - in: query
        name: officeId
        schema:
          type: integer
          format: int64
      - in: query
        name: productId
        schema:
          type: integer
          format: int64
      - in: query
        name: categoryId
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoanProductProvisioningEntryData'
          description: OK
      tags:
      - Provisioning Entries
  /v1/provisioningentries/{entryId}:
    get:
      description: Returns the details of a generated Provisioning Entry.
      operationId: retrieveProvisioningEntry
      parameters:
      - description: entryId
        in: path
        name: entryId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisioningEntryData'
          description: OK
      summary: Retrieves a Provisioning Entry
      tags:
      - Provisioning Entries
    post:
      description: Recreates Provisioning Entry | createjournalentry.
      operationId: modifyProvisioningEntry
      parameters:
      - description: entryId
        in: path
        name: entryId
        required: true
        schema:
          type: integer
          format: int64
      - description: |-
          command=createjournalentry
          command=recreateprovisioningentry
        in: query
        name: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutProvisioningEntriesRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutProvisioningEntriesResponse'
          description: OK
      summary: Recreates Provisioning Entry
      tags:
      - Provisioning Entries
  /v1/rates:
    get:
      operationId: getAllRates
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Rate
    post:
      operationId: createRate
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Rate
  /v1/rates/{rateId}:
    get:
      operationId: retrieveRate
      parameters:
      - in: path
        name: rateId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Rate
    put:
      operationId: updateRate
      parameters:
      - in: path
        name: rateId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Rate
  /v1/recurringdepositaccounts:
    get:
      description: |-
        Lists Recurring deposit applications/accounts

        Example Requests:

        recurringdepositaccounts


        recurringdepositaccounts?fields=name
      operationId: retrieveAll_31
      parameters:
      - description: paged
        in: query
        name: paged
        schema:
          type: boolean
      - description: offset
        in: query
        name: offset
        schema:
          type: integer
          format: int32
      - description: limit
        in: query
        name: limit
        schema:
          type: integer
          format: int32
      - description: orderBy
        in: query
        name: orderBy
        schema:
          type: string
      - description: sortOrder
        in: query
        name: sortOrder
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetRecurringDepositAccountsResponse'
          description: OK
      summary: List Recurring deposit applications/accounts
      tags:
      - Recurring Deposit Account
    post:
      description: |-
        Submits new recurring deposit application

        Mandatory Fields: clientId or groupId, productId, submittedOnDate, depositAmount, depositPeriod, depositPeriodFrequencyId

        Optional Fields: accountNo, externalId, fieldOfficerId,linkAccountId(if provided initial deposit amount will be collected from this account),transferInterestToSavings(By enabling this flag all interest postings will be transferred to linked saving account )

        Inherited from Product (if not provided): interestCompoundingPeriodType, interestCalculationType, interestCalculationDaysInYearType, lockinPeriodFrequency, lockinPeriodFrequencyType, preClosurePenalApplicable, preClosurePenalInterest, preClosurePenalInterestOnTypeId, charts, withHoldTax
      operationId: submitApplication_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostRecurringDepositAccountsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostRecurringDepositAccountsResponse'
          description: OK
      summary: Submit new recurring deposit application
      tags:
      - Recurring Deposit Account
  /v1/recurringdepositaccounts/downloadtemplate:
    get:
      operationId: getRecurringDepositTemplate
      parameters:
      - in: query
        name: officeId
        schema:
          type: integer
          format: int64
      - in: query
        name: staffId
        schema:
          type: integer
          format: int64
      - in: query
        name: dateFormat
        schema:
          type: string
      responses:
        default:
          content:
            application/vnd.ms-excel: {}
          description: default response
      tags:
      - Recurring Deposit Account
  /v1/recurringdepositaccounts/template:
    get:
      description: |-
        This is a convenience resource. It can be useful when building maintenance user interface screens for recurring deposit applications. The template data returned consists of any or all of:

        Field Defaults
        Allowed Value Lists

        Example Requests:

        recurringdepositaccounts/template?clientId=1


        recurringdepositaccounts/template?clientId=1&productId=1
      operationId: template_13
      parameters:
      - description: clientId
        in: query
        name: clientId
        schema:
          type: integer
          format: int64
      - description: groupId
        in: query
        name: groupId
        schema:
          type: integer
          format: int64
      - description: productId
        in: query
        name: productId
        schema:
          type: integer
          format: int64
      - description: staffInSelectedOfficeOnly
        in: query
        name: staffInSelectedOfficeOnly
        schema:
          type: boolean
          default: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRecurringDepositAccountsTemplateResponse'
          description: OK
      summary: Retrieve recurring Deposit Account Template
      tags:
      - Recurring Deposit Account
  /v1/recurringdepositaccounts/transactions/downloadtemplate:
    get:
      operationId: getRecurringDepositTransactionTemplate
      parameters:
      - in: query
        name: officeId
        schema:
          type: integer
          format: int64
      - in: query
        name: dateFormat
        schema:
          type: string
      responses:
        default:
          content:
            application/vnd.ms-excel: {}
          description: default response
      tags:
      - Recurring Deposit Account
  /v1/recurringdepositaccounts/transactions/uploadtemplate:
    post:
      operationId: postRecurringDepositTransactionsTemplate
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadRequest'
        description: Upload recurring deposit transactions template
      responses:
        default:
          content:
            '*/*':
              schema:
                type: string
          description: default response
      tags:
      - Recurring Deposit Account
  /v1/recurringdepositaccounts/uploadtemplate:
    post:
      operationId: postRecurringDepositTemplate
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadRequest'
        description: Upload recurring deposit template
      responses:
        default:
          content:
            '*/*':
              schema:
                type: string
          description: default response
      tags:
      - Recurring Deposit Account
  /v1/recurringdepositaccounts/{accountId}:
    delete:
      description: "At present we support hard delete of recurring deposit application\
        \ so long as its in 'Submitted and pending approval' state. One the application\
        \ is moves past this state, it is not possible to do a 'hard' delete of the\
        \ application or the account. An API endpoint will be added to close/de-activate\
        \ the recurring deposit account."
      operationId: delete_17
      parameters:
      - description: accountId
        in: path
        name: accountId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteRecurringDepositAccountsResponse'
          description: OK
      summary: Delete a recurring deposit application
      tags:
      - Recurring Deposit Account
    get:
      description: |-
        Retrieves a recurring deposit application/account

        Example Requests :

        recurringdepositaccounts/1


        recurringdepositaccounts/1?associations=all
      operationId: retrieveOne_22
      parameters:
      - description: accountId
        in: path
        name: accountId
        required: true
        schema:
          type: integer
          format: int64
      - description: staffInSelectedOfficeOnly
        in: query
        name: staffInSelectedOfficeOnly
        schema:
          type: boolean
          default: false
      - description: chargeStatus
        in: query
        name: chargeStatus
        schema:
          type: string
          default: all
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRecurringDepositAccountsAccountIdResponse'
          description: OK
      summary: Retrieve a recurring deposit application/account
      tags:
      - Recurring Deposit Account
    post:
      description: |-
        Approve recurring deposit application:

        Approves recurring deposit application so long as its in 'Submitted and pending approval' state.

        Undo approval recurring deposit application:

        Will move 'approved' recurring deposit application back to 'Submitted and pending approval' state.

        Reject recurring deposit application

        Rejects recurring deposit application so long as its in 'Submitted and pending approval' state.

        Withdraw recurring deposit application:

        Used when an applicant withdraws from the recurring deposit application. It must be in 'Submitted and pending approval' state.

        Activate a recurring deposit account:

        Results in an approved recurring deposit application being converted into an 'active' recurring deposit account.

        Update the recommended deposit amount for a recurring deposit account:

        Updates the recommended deposit amount for a RD account as on the effective date.

        Close a recurring deposit account

        Results in a Matured recurring deposit account being converted into a 'closed' recurring deposit account.

        On account close allowed actions are.Premature Close a recurring deposit account:

        Results in an Active recurring deposit account being converted into a 'Premature Closed' recurring deposit account with options to withdraw prematured amount. (premature amount is calculated using interest rate chart applicable along with penal interest if any.)

        On account premature closure allowed actions are.

        Calculate Premature amount on Recurring deposit account:

        Calculate premature amount on recurring deposit till premature close date. Premature amount is calculated based on interest chart and penal interest applicable if any.

        Calculate Interest on recurring Deposit Account:

        Calculates interest earned on a recurring deposit account based on todays date. It does not attempt to post or credit the interest on the account. That is responsibility of the Post Interest API that will likely be called by overnight process.

        Post Interest on recurring Deposit Account:

        Calculates and Posts interest earned on a recurring deposit account based on todays date and whether an interest posting or crediting event is due.

        Showing request/response for 'Post Interest on recurring Deposit Account'
      operationId: handleCommands_5
      parameters:
      - description: accountId
        in: path
        name: accountId
        required: true
        schema:
          type: integer
          format: int64
      - description: command
        in: query
        name: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostRecurringDepositAccountsAccountIdRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostRecurringDepositAccountsAccountIdResponse'
          description: OK
      summary: Approve recurring deposit application | Undo approval recurring deposit
        application | Reject recurring deposit application | Withdraw recurring deposit
        application | Activate a recurring deposit account | Update the recommended
        deposit amount for a recurring deposit account | Close a recurring deposit
        account | Premature Close a recurring deposit account | Calculate Premature
        amount on Recurring deposit account | Calculate Interest on recurring Deposit
        Account | Post Interest on recurring Deposit Account
      tags:
      - Recurring Deposit Account
    put:
      description: "Recurring deposit application can only be modified when in 'Submitted\
        \ and pending approval' state. Once the application is approved, the details\
        \ cannot be changed using this method. Specific api endpoints will be created\
        \ to allow change of interest detail such as rate, compounding period, posting\
        \ period etc"
      operationId: update_18
      parameters:
      - description: accountId
        in: path
        name: accountId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutRecurringDepositAccountsAccountIdRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutRecurringDepositAccountsAccountIdResponse'
          description: OK
      summary: Modify a recurring deposit application
      tags:
      - Recurring Deposit Account
  /v1/recurringdepositaccounts/{accountId}/template:
    get:
      operationId: accountClosureTemplate_1
      parameters:
      - description: accountId
        in: path
        name: accountId
        required: true
        schema:
          type: integer
          format: int64
      - description: command
        in: query
        name: command
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Recurring Deposit Account
  /v1/recurringdepositaccounts/{recurringDepositAccountId}/transactions:
    post:
      description: |-
        Deposit Transaction:

        Used for a deposit transaction

        Withdrawal Transaction:

        Used for a Withdrawal Transaction

        Showing request/response for Deposit Transaction
      operationId: transaction_1
      parameters:
      - description: recurringDepositAccountId
        in: path
        name: recurringDepositAccountId
        required: true
        schema:
          type: integer
          format: int64
      - description: command
        in: query
        name: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostRecurringDepositAccountsRecurringDepositAccountIdTransactionsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostRecurringDepositAccountsRecurringDepositAccountIdTransactionsResponse'
          description: OK
      summary: Deposit Transaction | Withdrawal Transaction
      tags:
      - Recurring Deposit Account Transactions
  /v1/recurringdepositaccounts/{recurringDepositAccountId}/transactions/template:
    get:
      description: |-
        This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:

        Field Defaults
        Allowed Value Lists
        Example Requests:

        recurringdepositaccounts/1/transactions/template?command=deposit

        recurringdepositaccounts/1/transactions/template?command=withdrawal
      operationId: retrieveTemplate_16
      parameters:
      - description: recurringDepositAccountId
        in: path
        name: recurringDepositAccountId
        required: true
        schema:
          type: integer
          format: int64
      - description: command
        in: query
        name: command
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRecurringDepositAccountsRecurringDepositAccountIdTransactionsTemplateResponse'
          description: OK
      summary: Retrieve Recurring Deposit Account Transaction Template
      tags:
      - Recurring Deposit Account Transactions
  /v1/recurringdepositaccounts/{recurringDepositAccountId}/transactions/{transactionId}:
    get:
      description: |-
        Retrieves Recurring Deposit Account Transaction

        Example Requests:

        recurringdepositaccounts/1/transactions/1
      operationId: retrieveOne_21
      parameters:
      - description: recurringDepositAccountId
        in: path
        name: recurringDepositAccountId
        required: true
        schema:
          type: integer
          format: int64
      - description: transactionId
        in: path
        name: transactionId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRecurringDepositAccountsRecurringDepositAccountIdTransactionsTransactionIdResponse'
          description: OK
      summary: Retrieve Recurring Deposit Account Transaction
      tags:
      - Recurring Deposit Account Transactions
    post:
      description: |-
        Adjust Transaction:

        This command modifies the given transaction.

        Undo transaction:

        This command reverses the given transaction.

        Showing request/response for 'Adjust Transaction'
      operationId: handleTransactionCommands
      parameters:
      - description: recurringDepositAccountId
        in: path
        name: recurringDepositAccountId
        required: true
        schema:
          type: integer
          format: int64
      - description: transactionId
        in: path
        name: transactionId
        required: true
        schema:
          type: integer
          format: int64
      - description: command
        in: query
        name: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostRecurringDepositAccountsRecurringDepositAccountIdTransactionsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostRecurringDepositAccountsRecurringDepositAccountIdTransactionsTransactionIdResponse'
          description: OK
      summary: Adjust Transaction | Undo transaction
      tags:
      - Recurring Deposit Account Transactions
  /v1/recurringdepositproducts:
    get:
      description: |-
        Lists Recuring Deposit Products

        Example Requests:

        recurringdepositproducts


        recurringdepositproducts?fields=name
      operationId: retrieveAll_32
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetRecurringDepositProductsResponse'
          description: OK
      summary: List Recuring Deposit Products
      tags:
      - Recurring Deposit Product
    post:
      description: |-
        Creates a Recurring Deposit Product

        Mandatory Fields: name, shortName, description, currencyCode, digitsAfterDecimal,inMultiplesOf, interestCompoundingPeriodType, interestCalculationType, interestCalculationDaysInYearType, minDepositTerm, minDepositTermTypeId, recurringDepositFrequency, recurringDepositFrequencyTypeId, accountingRule, depositAmount

        Mandatory Fields for Cash based accounting (accountingRule = 2): savingsReferenceAccountId, savingsControlAccountId, interestOnSavingsAccountId, incomeFromFeeAccountId, transfersInSuspenseAccountId, incomeFromPenaltyAccountId

        Optional Fields: lockinPeriodFrequency, lockinPeriodFrequencyType, maxDepositTerm, maxDepositTermTypeId, inMultiplesOfDepositTerm, inMultiplesOfDepositTermTypeId, preClosurePenalApplicable, preClosurePenalInterest, preClosurePenalInterestOnTypeId, feeToIncomeAccountMappings, penaltyToIncomeAccountMappings, charges, charts, minDepositAmount, maxDepositAmount, withHoldTax, taxGroupId
      operationId: create_12
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostRecurringDepositProductsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostRecurringDepositProductsResponse'
          description: OK
      summary: Create a Recurring Deposit Product
      tags:
      - Recurring Deposit Product
  /v1/recurringdepositproducts/template:
    get:
      operationId: retrieveTemplate_17
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Recurring Deposit Product
  /v1/recurringdepositproducts/{productId}:
    delete:
      description: Deletes a Recurring Deposit Product
      operationId: delete_18
      parameters:
      - description: productId
        in: path
        name: productId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteRecurringDepositProductsProductIdResponse'
          description: OK
      summary: Delete a Recurring Deposit Product
      tags:
      - Recurring Deposit Product
    get:
      description: |-
        Retrieves a Recurring Deposit Product

        Example Requests:

        recurringdepositproducts/1


        recurringdepositproducts/1?template=true


        recurringdepositproducts/1?fields=name,description
      operationId: retrieveOne_23
      parameters:
      - description: productId
        in: path
        name: productId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRecurringDepositProductsProductIdResponse'
          description: OK
      summary: Retrieve a Recurring Deposit Product
      tags:
      - Recurring Deposit Product
    put:
      description: Updates a Recurring Deposit Product
      operationId: update_19
      parameters:
      - description: productId
        in: path
        name: productId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutRecurringDepositProductsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutRecurringDepositProductsResponse'
          description: OK
      summary: Update a Recurring Deposit Product
      tags:
      - Recurring Deposit Product
  /v1/reportmailingjobrunhistory:
    get:
      description: |-
        The list capability of report mailing job history can support pagination and sorting.

        Example Requests:

        reportmailingjobrunhistory/1
      operationId: retrieveAllByReportMailingJobId
      parameters:
      - description: reportMailingJobId
        in: query
        name: reportMailingJobId
        schema:
          type: integer
          format: int64
      - description: offset
        in: query
        name: offset
        schema:
          type: integer
          format: int32
      - description: limit
        in: query
        name: limit
        schema:
          type: integer
          format: int32
      - description: orderBy
        in: query
        name: orderBy
        schema:
          type: string
      - description: sortOrder
        in: query
        name: sortOrder
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportMailingJobRunHistoryData'
          description: OK
      summary: List Report Mailing Job History
      tags:
      - List Report Mailing Job History
  /v1/reportmailingjobs:
    get:
      description: |-
        Example Requests:

        reportmailingjobs
      operationId: retrieveAllReportMailingJobs
      parameters:
      - description: offset
        in: query
        name: offset
        schema:
          type: integer
          format: int32
      - description: limit
        in: query
        name: limit
        schema:
          type: integer
          format: int32
      - description: orderBy
        in: query
        name: orderBy
        schema:
          type: string
      - description: sortOrder
        in: query
        name: sortOrder
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetReportMailingJobsResponse'
          description: OK
      summary: List Report Mailing Jobs
      tags:
      - Report Mailing Jobs
    post:
      description: |-
        Mandatory Fields: name, startDateTime, stretchyReportId, emailRecipients, emailSubject, emailMessage, emailAttachmentFileFormatId, recurrence, isActive

        Optional Fields: description, stretchyReportParamMap
      operationId: createReportMailingJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostReportMailingJobsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostReportMailingJobsResponse'
          description: OK
      summary: Create a Report Mailing Job
      tags:
      - Report Mailing Jobs
  /v1/reportmailingjobs/template:
    get:
      description: |-
        This is a convenience resource. It can be useful when building maintenance user interface screens for report mailing job applications. The template data returned consists of any or all of:

        Field Defaults
        Allowed description Lists
        Example Request:

        reportmailingjobs/template
      operationId: retrieveReportMailingJobTemplate
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReportMailingJobsTemplate'
          description: OK
      summary: Retrieve Report Mailing Job Details Template
      tags:
      - Report Mailing Jobs
  /v1/reportmailingjobs/{entityId}:
    delete:
      operationId: deleteReportMailingJob
      parameters:
      - description: entityId
        in: path
        name: entityId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteReportMailingJobsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteReportMailingJobsResponse'
          description: OK
      summary: Delete a Report Mailing Job
      tags:
      - Report Mailing Jobs
    get:
      description: |-
        Example Requests:

        reportmailingjobs/1


        reportmailingjobs/1?template=true
      operationId: retrieveReportMailingJob
      parameters:
      - description: entityId
        in: path
        name: entityId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReportMailingJobsResponse'
          description: OK
      summary: Retrieve a Report Mailing Job
      tags:
      - Report Mailing Jobs
    put:
      operationId: updateReportMailingJob
      parameters:
      - description: entityId
        in: path
        name: entityId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutReportMailingJobsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutReportMailingJobsResponse'
          description: OK
      summary: |
        Update a Report Mailing Job
      tags:
      - Report Mailing Jobs
  /v1/reports:
    get:
      description: |-
        Lists all reports and their parameters.

        Example Request:

        reports
      operationId: retrieveReportList
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetReportsResponse'
          description: OK
      summary: List Reports
      tags:
      - Reports
    post:
      operationId: createReport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostRepostRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostReportsResponse'
          description: OK
      summary: Create a Report
      tags:
      - Reports
  /v1/reports/template:
    get:
      description: "This is a convenience resource. It can be useful when building\
        \ maintenance user interface screens for client applications. The template\
        \ data returned consists of any or all of:\n\nField Defaults\nAllowed description\
        \ Lists\n\nExample Request : \n\nreports/template"
      operationId: retrieveOfficeTemplate
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReportsTemplateResponse'
          description: OK
      summary: Retrieve Report Template
      tags:
      - Reports
  /v1/reports/{id}:
    delete:
      description: Only non-core reports can be deleted.
      operationId: deleteReport
      parameters:
      - description: id
        in: path
        name: id
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteReportsResponse'
          description: OK
      summary: Delete a Report
      tags:
      - Reports
    get:
      description: |-
        Example Requests:

        reports/1


        reports/1?template=true
      operationId: retrieveReport
      parameters:
      - description: id
        in: path
        name: id
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReportsResponse'
          description: OK
      summary: |
        Retrieve a Report
      tags:
      - Reports
    put:
      description: Only the useReport description can be updated for core reports.
      operationId: updateReport
      parameters:
      - description: id
        in: path
        name: id
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutReportRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutReportResponse'
          description: OK
      summary: Update a Report
      tags:
      - Reports
  /v1/rescheduleloans:
    get:
      description: Retrieve all reschedule requests.
      operationId: retrieveAllRescheduleRequest
      parameters:
      - in: query
        name: command
        schema:
          type: string
      - in: query
        name: loanId
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetLoanRescheduleRequestResponse'
          description: OK
      summary: Retrieve all reschedule requests
      tags:
      - Reschedule Loans
    post:
      description: Create a loan reschedule request.
      operationId: createLoanRescheduleRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostCreateRescheduleLoansRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostCreateRescheduleLoansResponse'
          description: OK
      summary: Create loan reschedule request
      tags:
      - Reschedule Loans
  /v1/rescheduleloans/template:
    get:
      description: Retrieve all reschedule loan reasons as a template
      operationId: retrieveTemplate_10
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRescheduleReasonsTemplateResponse'
          description: OK
      summary: Retrieve all reschedule loan reasons
      tags:
      - Reschedule Loans
  /v1/rescheduleloans/{scheduleId}:
    get:
      description: Retrieve loan reschedule request by schedule id
      operationId: readLoanRescheduleRequest
      parameters:
      - in: path
        name: scheduleId
        required: true
        schema:
          type: integer
          format: int64
      - in: query
        name: command
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLoanRescheduleRequestResponse'
          description: OK
      summary: Retrieve loan reschedule request by schedule id
      tags:
      - Reschedule Loans
    post:
      description: Update a loan reschedule request by either approving/rejecting
        it.
      operationId: updateLoanRescheduleRequest
      parameters:
      - in: path
        name: scheduleId
        required: true
        schema:
          type: integer
          format: int64
      - in: query
        name: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostUpdateRescheduleLoansRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostUpdateRescheduleLoansResponse'
          description: OK
      summary: Update loan reschedule request
      tags:
      - Reschedule Loans
  /v1/roles:
    get:
      description: |-
        Example Requests:

        roles


        roles?fields=name
      operationId: retrieveAllRoles
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetRolesResponse'
          description: OK
      summary: List Roles
      tags:
      - Roles
    post:
      description: |-
        Mandatory Fields
        name, description
      operationId: createRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostRolesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostRolesResponse'
          description: OK
      summary: Create a New Role
      tags:
      - Roles
  /v1/roles/{roleId}:
    delete:
      description: "Description : Delete the role in case role is not associated with\
        \ any users."
      operationId: deleteRole
      parameters:
      - description: roleId
        in: path
        name: roleId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteRolesRoleIdResponse'
          description: OK
      summary: Delete a Role
      tags:
      - Roles
    get:
      description: |-
        Example Requests:

        roles/1


        roles/1?fields=name
      operationId: retrieveRole
      parameters:
      - description: roleId
        in: path
        name: roleId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRolesRoleIdResponse'
          description: OK
      summary: Retrieve a Role
      tags:
      - Roles
    post:
      description: |-
        Description : Enable role in case role is disabled. | Disable the role in case role is not associated with any users.





        Example Request:   https://DomainName/api/v1/roles/{roleId}?command=enable





        https://DomainName/api/v1/roles/{roleId}?command=disable
      operationId: actionsOnRoles
      parameters:
      - description: roleId
        in: path
        name: roleId
        required: true
        schema:
          type: integer
          format: int64
      - description: command
        in: query
        name: command
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostRolesRoleIdResponse'
          description: OK
      summary: Enable Role | Disable Role
      tags:
      - Roles
    put:
      operationId: updateRole
      parameters:
      - description: roleId
        in: path
        name: roleId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutRolesRoleIdRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutRolesRoleIdResponse'
          description: OK
      summary: Update a Role
      tags:
      - Roles
  /v1/roles/{roleId}/permissions:
    get:
      description: |-
        Example Requests:

        roles/1/permissions
      operationId: retrieveRolePermissions
      parameters:
      - description: roleId
        in: path
        name: roleId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRolesRoleIdPermissionsResponse'
          description: OK
      summary: Retrieve a Role's Permissions
      tags:
      - Roles
    put:
      operationId: updateRolePermissions
      parameters:
      - description: roleId
        in: path
        name: roleId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutRolesRoleIdPermissionsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutRolesRoleIdPermissionsResponse'
          description: OK
      summary: Update a Role's Permissions
      tags:
      - Roles
  /v1/runaccruals:
    post:
      description: |
        Mandatory Fields

        tillDate
      operationId: executePeriodicAccrualAccounting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostRunaccrualsRequest'
        required: true
      responses:
        "200":
          description: OK
      summary: Executes Periodic Accrual Accounting
      tags:
      - Periodic Accrual Accounting
  /v1/runreports/availableExports/{reportName}:
    get:
      description: Returns the list of all available export types.
      operationId: retrieveAllAvailableExports
      parameters:
      - description: reportName
        in: path
        name: reportName
        required: true
        schema:
          type: string
      - description: isSelfServiceUserReport
        in: query
        name: isSelfServiceUserReport
        schema:
          type: boolean
          default: false
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReportExportType'
          description: "Successful running Reports"
      summary: Return all available export types for the specific report
      tags:
      - Run Reports
  /v1/runreports/{reportName}:
    get:
      description: |-
        This resource allows you to run and receive output from pre-defined Apache Fineract reports.

        Reports can also be used to provide data for searching and workflow functionality.

        The default output is a JSON formatted "Generic Resultset". The Generic Resultset contains Column Heading as well as Data information. However, you can export to CSV format by simply adding "&exportCSV=true" to the end of your URL.

        If Pentaho reports have been pre-defined, they can also be run through this resource. Pentaho reports can return HTML, PDF or CSV formats.

        The Apache Fineract reference application uses a JQuery plugin called stretchy reporting which, itself, uses this reports resource to provide a pretty flexible reporting User Interface (UI).



        Example Requests:

        runreports/Client%20Listing?R_officeId=1


        runreports/Client%20Listing?R_officeId=1&exportCSV=true


        runreports/OfficeIdSelectOne?R_officeId=1&parameterType=true


        runreports/OfficeIdSelectOne?R_officeId=1&parameterType=true&exportCSV=true


        runreports/Expected%20Payments%20By%20Date%20-%20Formatted?R_endDate=2013-04-30&R_loanOfficerId=-1&R_officeId=1&R_startDate=2013-04-16&output-type=HTML&R_officeId=1


        runreports/Expected%20Payments%20By%20Date%20-%20Formatted?R_endDate=2013-04-30&R_loanOfficerId=-1&R_officeId=1&R_startDate=2013-04-16&output-type=XLS&R_officeId=1


        runreports/Expected%20Payments%20By%20Date%20-%20Formatted?R_endDate=2013-04-30&R_loanOfficerId=-1&R_officeId=1&R_startDate=2013-04-16&output-type=CSV&R_officeId=1


        runreports/Expected%20Payments%20By%20Date%20-%20Formatted?R_endDate=2013-04-30&R_loanOfficerId=-1&R_officeId=1&R_startDate=2013-04-16&output-type=PDF&R_officeId=1
      operationId: runReport
      parameters:
      - description: reportName
        in: path
        name: reportName
        required: true
        schema:
          type: string
      - description: isSelfServiceUserReport
        in: query
        name: isSelfServiceUserReport
        schema:
          type: boolean
          default: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunReportsResponse'
            application/pdf:
              schema:
                $ref: '#/components/schemas/RunReportsResponse'
            application/vnd.ms-excel:
              schema:
                $ref: '#/components/schemas/RunReportsResponse'
            text/csv:
              schema:
                $ref: '#/components/schemas/RunReportsResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/RunReportsResponse'
          description: OK
      summary: Running a Report
      tags:
      - Run Reports
  /v1/savingsaccounts:
    get:
      description: |-
        Lists savings applications/accounts

        Example Requests:

        savingsaccounts


        savingsaccounts?fields=name
      operationId: retrieveAll_33
      parameters:
      - description: externalId
        in: query
        name: externalId
        schema:
          type: string
      - description: offset
        in: query
        name: offset
        schema:
          type: integer
          format: int32
      - description: limit
        in: query
        name: limit
        schema:
          type: integer
          format: int32
      - description: orderBy
        in: query
        name: orderBy
        schema:
          type: string
      - description: sortOrder
        in: query
        name: sortOrder
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSavingsAccountsResponse'
          description: OK
      summary: List savings applications/accounts
      tags:
      - Savings Account
    post:
      description: |-
        Submits new savings application

        Mandatory Fields: clientId or groupId, productId, submittedOnDate

        Optional Fields: accountNo, externalId, fieldOfficerId

        Inherited from Product (if not provided): nominalAnnualInterestRate, interestCompoundingPeriodType, interestCalculationType, interestCalculationDaysInYearType, minRequiredOpeningBalance, lockinPeriodFrequency, lockinPeriodFrequencyType, withdrawalFeeForTransfers, allowOverdraft, overdraftLimit, withHoldTax

        Additional Mandatory Field if Entity-Datatable Check is enabled for the entity of type Savings: datatables
      operationId: submitApplication_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostSavingsAccountsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostSavingsAccountsResponse'
          description: OK
      summary: Submit new savings application
      tags:
      - Savings Account
  /v1/savingsaccounts/downloadtemplate:
    get:
      operationId: getSavingsTemplate
      parameters:
      - in: query
        name: officeId
        schema:
          type: integer
          format: int64
      - in: query
        name: staffId
        schema:
          type: integer
          format: int64
      - in: query
        name: dateFormat
        schema:
          type: string
      responses:
        default:
          content:
            application/vnd.ms-excel: {}
          description: default response
      tags:
      - Savings Account
  /v1/savingsaccounts/external-id/{externalId}:
    delete:
      description: "At present we support hard delete of savings application so long\
        \ as its in 'Submitted and pending approval' state. One the application is\
        \ moves past this state, it is not possible to do a 'hard' delete of the application\
        \ or the account. An API endpoint will be added to close/de-activate the savings\
        \ account."
      operationId: delete_20
      parameters:
      - description: externalId
        in: path
        name: externalId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSavingsAccountsAccountIdResponse'
          description: OK
      summary: Delete a savings application
      tags:
      - Savings Account
    get:
      description: |-
        Retrieves a savings application/account by external id

        Example Requests :

        savingsaccounts/external-id/ExternalId1


        savingsaccounts/external-id/ExternalId1?associations=all
      operationId: retrieveOne_26
      parameters:
      - description: externalId
        in: path
        name: externalId
        required: true
        schema:
          type: string
      - description: staffInSelectedOfficeOnly
        in: query
        name: staffInSelectedOfficeOnly
        schema:
          type: boolean
          default: false
      - description: chargeStatus
        in: query
        name: chargeStatus
        schema:
          type: string
          default: all
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSavingsAccountsAccountIdResponse'
          description: OK
      summary: Retrieve a savings application/account by external id
      tags:
      - Savings Account
    post:
      description: |-
        Approve savings application:

        Approves savings application so long as its in 'Submitted and pending approval' state.

        Undo approval savings application:

        Will move 'approved' savings application back to 'Submitted and pending approval' state.

        Assign Savings Officer:

        Allows you to assign Savings Officer for existing Savings Account.

        Unassign Savings Officer:

        Allows you to unassign the Savings Officer.

        Reject savings application:

        Rejects savings application so long as its in 'Submitted and pending approval' state.

        Withdraw savings application:

        Used when an applicant withdraws from the savings application. It must be in 'Submitted and pending approval' state.

        Activate a savings account:

        Results in an approved savings application being converted into an 'active' savings account.

        Close a savings account:

        Results in an Activated savings application being converted into an 'closed' savings account.

        closedOnDate is closure date of savings account

        withdrawBalance is a boolean description, true value of this field performs a withdrawal transaction with account's running balance.

        Mandatory Fields: dateFormat,locale,closedOnDate

        Optional Fields: note, withdrawBalance, paymentTypeId, accountNumber, checkNumber, routingCode, receiptNumber, bankNumber

        Calculate Interest on Savings Account:

        Calculates interest earned on a savings account based on todays date. It does not attempt to post or credit the interest on the account. That is responsibility of the Post Interest API that will likely be called by overnight process.

        Post Interest on Savings Account:

        Calculates and Posts interest earned on a savings account based on today's date and whether an interest posting or crediting event is due.

        Block Savings Account:

        Blocks Savings account from all types of credit and debit transactions

        Unblock Savings Account:

        Unblock a blocked account. On unblocking account, user can perform debit and credit transactions

        Block Savings Account Credit transactions:

        Savings account will be blocked from all types of credit transactions.

        Unblock Savings Account Credit transactions:

        It unblocks the Saving account's credit operations. Now all types of credits can be transacted to Savings account

        Block Savings Account Debit transactions:

        All types of debit operations from Savings account wil be blocked

        Unblock Savings Account debit transactions:

        It unblocks the Saving account's debit operations. Now all types of debits can be transacted from Savings account

        Showing request/response for 'Unassign Savings Officer'
      operationId: handleCommands_7
      parameters:
      - description: externalId
        in: path
        name: externalId
        required: true
        schema:
          type: string
      - description: command
        in: query
        name: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostSavingsAccountsAccountIdRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostSavingsAccountsAccountIdResponse'
          description: OK
      summary: Approve savings application | Undo approval savings application | Assign
        Savings Officer | Unassign Savings Officer | Reject savings application |
        Withdraw savings application | Activate a savings account | Close a savings
        account | Calculate Interest on Savings Account | Post Interest on Savings
        Account | Block Savings Account | Unblock Savings Account | Block Savings
        Account Credit transactions | Unblock Savings Account Credit transactions
        | Block Savings Account Debit transactions | Unblock Savings Account debit
        transactions
      tags:
      - Savings Account
    put:
      description: |-
        Modify a savings application:

        Savings application can only be modified when in 'Submitted and pending approval' state. Once the application is approved, the details cannot be changed using this method. Specific api endpoints will be created to allow change of interest detail such as rate, compounding period, posting period etc

        Modify savings account withhold tax applicability:

        Savings application's withhold tax can be modified when in 'Active' state. Once the application is activated, can modify the account withhold tax to post tax or vice-versaShowing request/response for 'Modify a savings application'
      operationId: update_21
      parameters:
      - description: externalId
        in: path
        name: externalId
        required: true
        schema:
          type: string
      - description: command
        in: query
        name: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutSavingsAccountsAccountIdRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutSavingsAccountsAccountIdResponse'
          description: OK
      summary: Modify a savings application | Modify savings account withhold tax
        applicability
      tags:
      - Savings Account
  /v1/savingsaccounts/gsim:
    post:
      operationId: submitGSIMApplication
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Savings Account
  /v1/savingsaccounts/gsim/{parentAccountId}:
    put:
      operationId: updateGsim
      parameters:
      - in: path
        name: parentAccountId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Savings Account
  /v1/savingsaccounts/gsimcommands/{parentAccountId}:
    post:
      operationId: handleGSIMCommands
      parameters:
      - in: path
        name: parentAccountId
        required: true
        schema:
          type: integer
          format: int64
      - in: query
        name: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Savings Account
  /v1/savingsaccounts/template:
    get:
      description: |-
        This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:

        Field Defaults
        Allowed Value Lists

        Example Requests:

        savingsaccounts/template?clientId=1


        savingsaccounts/template?clientId=1&productId=1
      operationId: template_14
      parameters:
      - description: clientId
        in: query
        name: clientId
        schema:
          type: integer
          format: int64
      - description: groupId
        in: query
        name: groupId
        schema:
          type: integer
          format: int64
      - description: productId
        in: query
        name: productId
        schema:
          type: integer
          format: int64
      - description: staffInSelectedOfficeOnly
        in: query
        name: staffInSelectedOfficeOnly
        schema:
          type: boolean
          default: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSavingsAccountsTemplateResponse'
          description: OK
      summary: Retrieve Savings Account Template
      tags:
      - Savings Account
  /v1/savingsaccounts/transactions/downloadtemplate:
    get:
      operationId: getSavingsTransactionTemplate
      parameters:
      - in: query
        name: officeId
        schema:
          type: integer
          format: int64
      - in: query
        name: dateFormat
        schema:
          type: string
      responses:
        default:
          content:
            application/vnd.ms-excel: {}
          description: default response
      tags:
      - Savings Account
  /v1/savingsaccounts/transactions/uploadtemplate:
    post:
      operationId: postSavingsTransactionTemplate
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadRequest'
        description: Upload savings transaction template
      responses:
        default:
          content:
            '*/*':
              schema:
                type: string
          description: default response
      tags:
      - Savings Account
  /v1/savingsaccounts/uploadtemplate:
    post:
      operationId: postSavingsTemplate
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadRequest'
        description: Upload savings template
      responses:
        default:
          content:
            '*/*':
              schema:
                type: string
          description: default response
      tags:
      - Savings Account
  /v1/savingsaccounts/{accountId}:
    delete:
      description: "At present we support hard delete of savings application so long\
        \ as its in 'Submitted and pending approval' state. One the application is\
        \ moves past this state, it is not possible to do a 'hard' delete of the application\
        \ or the account. An API endpoint will be added to close/de-activate the savings\
        \ account."
      operationId: delete_19
      parameters:
      - description: accountId
        in: path
        name: accountId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSavingsAccountsAccountIdResponse'
          description: OK
      summary: Delete a savings application
      tags:
      - Savings Account
    get:
      description: |-
        Retrieves a savings application/account

        Example Requests :

        savingsaccounts/1


        savingsaccounts/1?associations=all
      operationId: retrieveOne_25
      parameters:
      - description: accountId
        in: path
        name: accountId
        required: true
        schema:
          type: integer
          format: int64
      - description: staffInSelectedOfficeOnly
        in: query
        name: staffInSelectedOfficeOnly
        schema:
          type: boolean
          default: false
      - description: chargeStatus
        in: query
        name: chargeStatus
        schema:
          type: string
          default: all
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSavingsAccountsAccountIdResponse'
          description: OK
      summary: Retrieve a savings application/account
      tags:
      - Savings Account
    post:
      description: |-
        Approve savings application:

        Approves savings application so long as its in 'Submitted and pending approval' state.

        Undo approval savings application:

        Will move 'approved' savings application back to 'Submitted and pending approval' state.

        Assign Savings Officer:

        Allows you to assign Savings Officer for existing Savings Account.

        Unassign Savings Officer:

        Allows you to unassign the Savings Officer.

        Reject savings application:

        Rejects savings application so long as its in 'Submitted and pending approval' state.

        Withdraw savings application:

        Used when an applicant withdraws from the savings application. It must be in 'Submitted and pending approval' state.

        Activate a savings account:

        Results in an approved savings application being converted into an 'active' savings account.

        Close a savings account:

        Results in an Activated savings application being converted into an 'closed' savings account.

        closedOnDate is closure date of savings account

        withdrawBalance is a boolean description, true value of this field performs a withdrawal transaction with account's running balance.

        Mandatory Fields: dateFormat,locale,closedOnDate

        Optional Fields: note, withdrawBalance, paymentTypeId, accountNumber, checkNumber, routingCode, receiptNumber, bankNumber

        Calculate Interest on Savings Account:

        Calculates interest earned on a savings account based on todays date. It does not attempt to post or credit the interest on the account. That is responsibility of the Post Interest API that will likely be called by overnight process.

        Post Interest on Savings Account:

        Calculates and Posts interest earned on a savings account based on today's date and whether an interest posting or crediting event is due.

        Block Savings Account:

        Blocks Savings account from all types of credit and debit transactions

        Unblock Savings Account:

        Unblock a blocked account. On unblocking account, user can perform debit and credit transactions

        Block Savings Account Credit transactions:

        Savings account will be blocked from all types of credit transactions.

        Unblock Savings Account Credit transactions:

        It unblocks the Saving account's credit operations. Now all types of credits can be transacted to Savings account

        Block Savings Account Debit transactions:

        All types of debit operations from Savings account wil be blocked

        Unblock Savings Account debit transactions:

        It unblocks the Saving account's debit operations. Now all types of debits can be transacted from Savings account

        Showing request/response for 'Unassign Savings Officer'
      operationId: handleCommands_6
      parameters:
      - description: accountId
        in: path
        name: accountId
        required: true
        schema:
          type: integer
          format: int64
      - description: command
        in: query
        name: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostSavingsAccountsAccountIdRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostSavingsAccountsAccountIdResponse'
          description: OK
      summary: Approve savings application | Undo approval savings application | Assign
        Savings Officer | Unassign Savings Officer | Reject savings application |
        Withdraw savings application | Activate a savings account | Close a savings
        account | Calculate Interest on Savings Account | Post Interest on Savings
        Account | Block Savings Account | Unblock Savings Account | Block Savings
        Account Credit transactions | Unblock Savings Account Credit transactions
        | Block Savings Account Debit transactions | Unblock Savings Account debit
        transactions
      tags:
      - Savings Account
    put:
      description: |-
        Modify a savings application:

        Savings application can only be modified when in 'Submitted and pending approval' state. Once the application is approved, the details cannot be changed using this method. Specific api endpoints will be created to allow change of interest detail such as rate, compounding period, posting period etc

        Modify savings account withhold tax applicability:

        Savings application's withhold tax can be modified when in 'Active' state. Once the application is activated, can modify the account withhold tax to post tax or vice-versaShowing request/response for 'Modify a savings application'
      operationId: update_20
      parameters:
      - description: accountId
        in: path
        name: accountId
        required: true
        schema:
          type: integer
          format: int64
      - description: command
        in: query
        name: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutSavingsAccountsAccountIdRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutSavingsAccountsAccountIdResponse'
          description: OK
      summary: Modify a savings application | Modify savings account withhold tax
        applicability
      tags:
      - Savings Account
  /v1/savingsaccounts/{savingsAccountId}/charges:
    get:
      description: |-
        Lists Savings Charges

        Example Requests:

        savingsaccounts/1/charges

        savingsaccounts/1/charges?chargeStatus=all

        savingsaccounts/1/charges?chargeStatus=inactive

        savingsaccounts/1/charges?chargeStatus=active

        savingsaccounts/1/charges?fields=name,amountOrPercentage
      operationId: retrieveAllSavingsAccountCharges
      parameters:
      - description: savingsAccountId
        in: path
        name: savingsAccountId
        required: true
        schema:
          type: integer
          format: int64
      - description: chargeStatus
        in: query
        name: chargeStatus
        schema:
          type: string
          default: all
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetSavingsAccountsSavingsAccountIdChargesResponse'
          description: OK
      summary: List Savings Charges
      tags:
      - Savings Charges
    post:
      description: |-
        Creates a Savings account Charge

        Mandatory Fields for Savings account Charges: chargeId, amount

        chargeId, amount, dueDate, dateFormat, locale

        chargeId, amount, feeOnMonthDay, monthDayFormat, locale
      operationId: addSavingsAccountCharge
      parameters:
      - description: savingsAccountId
        in: path
        name: savingsAccountId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostSavingsAccountsSavingsAccountIdChargesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostSavingsAccountsSavingsAccountIdChargesResponse'
          description: OK
      summary: Create a Savings account Charge
      tags:
      - Savings Charges
  /v1/savingsaccounts/{savingsAccountId}/charges/template:
    get:
      description: |-
        This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:

        Field Defaults
        Allowed description Lists
        Example Request:

        savingsaccounts/1/charges/template
      operationId: retrieveTemplate_18
      parameters:
      - description: savingsAccountId
        in: path
        name: savingsAccountId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSavingsAccountsSavingsAccountIdChargesTemplateResponse'
          description: OK
      summary: Retrieve Savings Charges Template
      tags:
      - Savings Charges
  /v1/savingsaccounts/{savingsAccountId}/charges/{savingsAccountChargeId}:
    delete:
      description: "Note: Currently, A Savings account Charge may only be removed\
        \ from Savings that are not yet approved."
      operationId: deleteSavingsAccountCharge
      parameters:
      - description: savingsAccountId
        in: path
        name: savingsAccountId
        required: true
        schema:
          type: integer
          format: int64
      - description: savingsAccountChargeId
        in: path
        name: savingsAccountChargeId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdResponse'
          description: OK
      summary: Delete a Savings account Charge
      tags:
      - Savings Charges
    get:
      description: |-
        Retrieves a Savings account Charge

        Example Requests:

        /savingsaccounts/1/charges/5


        /savingsaccounts/1/charges/5?fields=name,amountOrPercentage
      operationId: retrieveSavingsAccountCharge
      parameters:
      - description: savingsAccountId
        in: path
        name: savingsAccountId
        required: true
        schema:
          type: integer
          format: int64
      - description: savingsAccountChargeId
        in: path
        name: savingsAccountChargeId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdResponse'
          description: OK
      summary: Retrieve a Savings account Charge
      tags:
      - Savings Charges
    post:
      description: |-
        Pay a Savings account Charge:

        An active charge will be paid when savings account is active and having sufficient balance.

        Waive off a Savings account Charge:

        Outstanding charge amount will be waived off.

        Inactivate a Savings account Charge:

        A charge will be allowed to inactivate when savings account is active and not having any dues as of today. If charge is overpaid, corresponding charge payment transactions will be reversed.

        Showing request/response for 'Pay a Savings account Charge'
      operationId: payOrWaiveSavingsAccountCharge
      parameters:
      - description: savingsAccountId
        in: path
        name: savingsAccountId
        required: true
        schema:
          type: integer
          format: int64
      - description: savingsAccountChargeId
        in: path
        name: savingsAccountChargeId
        required: true
        schema:
          type: integer
          format: int64
      - description: command
        in: query
        name: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdResponse'
          description: OK
      summary: Pay a Savings account Charge | Waive off a Savings account Charge |
        Inactivate a Savings account Charge
      tags:
      - Savings Charges
    put:
      description: Currently Savings account Charges may be updated only if the Savings
        account is not yet approved.
      operationId: updateSavingsAccountCharge
      parameters:
      - description: savingsAccountId
        in: path
        name: savingsAccountId
        required: true
        schema:
          type: integer
          format: int64
      - description: savingsAccountChargeId
        in: path
        name: savingsAccountChargeId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdResponse'
          description: OK
      summary: Update a Savings account Charge
      tags:
      - Savings Charges
  /v1/savingsaccounts/{savingsId}/onholdtransactions:
    get:
      operationId: retrieveAll_28
      parameters:
      - in: path
        name: savingsId
        required: true
        schema:
          type: integer
          format: int64
      - in: query
        name: guarantorFundingId
        schema:
          type: integer
          format: int64
      - in: query
        name: offset
        schema:
          type: integer
          format: int32
      - in: query
        name: limit
        schema:
          type: integer
          format: int32
      - in: query
        name: orderBy
        schema:
          type: string
      - in: query
        name: sortOrder
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Deposit Account On Hold Fund Transactions
  /v1/savingsaccounts/{savingsId}/transactions:
    post:
      operationId: transaction_2
      parameters:
      - in: path
        name: savingsId
        required: true
        schema:
          type: integer
          format: int64
      - in: query
        name: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostSavingsAccountTransactionsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostSavingsAccountTransactionsResponse'
          description: OK
      tags:
      - Savings Account Transactions
  /v1/savingsaccounts/{savingsId}/transactions/query:
    post:
      operationId: advancedQuery_1
      parameters:
      - description: savingsId
        in: path
        name: savingsId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PagedLocalRequestAdvancedQueryRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
      summary: Advanced search Savings Account Transactions
      tags:
      - Savings Account Transactions
  /v1/savingsaccounts/{savingsId}/transactions/search:
    get:
      operationId: searchTransactions
      parameters:
      - description: savings account id
        in: path
        name: savingsId
        required: true
        schema:
          type: integer
          format: int64
      - description: minimum value date (inclusive)
        example: 2023-08-08
        in: query
        name: fromDate
        schema:
          type: string
      - description: maximum value date (inclusive)
        example: 2023-08-15
        in: query
        name: toDate
        schema:
          type: string
      - description: minimum booking date (inclusive)
        example: 2023-08-08
        in: query
        name: fromSubmittedDate
        schema:
          type: string
      - description: maximum booking date (inclusive)
        example: 2023-08-15
        in: query
        name: toSubmittedDate
        schema:
          type: string
      - description: minimum transaction amount (inclusive)
        example: 1000
        in: query
        name: fromAmount
        schema:
          type: number
      - description: maximum transaction amount (inclusive)
        example: 50000000
        in: query
        name: toAmount
        schema:
          type: number
      - description: transaction types
        example: "1,2,4,20,21"
        in: query
        name: types
        schema:
          type: string
      - description: credit
        in: query
        name: credit
        schema:
          type: boolean
      - description: debit
        in: query
        name: debit
        schema:
          type: boolean
      - description: offset
        in: query
        name: offset
        schema:
          type: integer
          format: int32
      - description: limit
        in: query
        name: limit
        schema:
          type: integer
          format: int32
      - description: sort properties
        example: "createdDate,transactionDate,id"
        in: query
        name: orderBy
        schema:
          type: string
      - description: sort direction
        in: query
        name: sortOrder
        schema:
          type: string
          enum:
          - ASC
          - DESC
      - description: locale
        in: query
        name: locale
        schema:
          type: string
      - description: date format
        example: yyyy-MM-dd
        in: query
        name: dateFormat
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SavingsAccountTransactionsSearchResponse'
          description: OK
      summary: Search Savings Account Transactions
      tags:
      - Savings Account Transactions
  /v1/savingsaccounts/{savingsId}/transactions/template:
    get:
      operationId: retrieveTemplate_19
      parameters:
      - in: path
        name: savingsId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Savings Account Transactions
  /v1/savingsaccounts/{savingsId}/transactions/{transactionId}:
    get:
      operationId: retrieveOne_24
      parameters:
      - in: path
        name: savingsId
        required: true
        schema:
          type: integer
          format: int64
      - in: path
        name: transactionId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Savings Account Transactions
    post:
      description: |-
        Undo/Reverse/Modify/Release Amount transaction API

        Example Requests:


        savingsaccounts/{savingsId}/transactions/{transactionId}?command=reverse

        Accepted command = undo, reverse, modify, releaseAmount
      operationId: adjustTransaction_1
      parameters:
      - in: path
        name: savingsId
        required: true
        schema:
          type: integer
          format: int64
      - in: path
        name: transactionId
        required: true
        schema:
          type: integer
          format: int64
      - in: query
        name: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostSavingsAccountBulkReversalTransactionsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PostSavingsAccountBulkReversalTransactionsRequest'
          description: OK
      summary: Undo/Reverse/Modify/Release Amount transaction API
      tags:
      - Savings Account Transactions
  /v1/savingsproducts:
    get:
      description: |-
        Lists Savings Products

        Example Requests:

        savingsproducts

        savingsproducts?fields=name
      operationId: retrieveAll_34
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetSavingsProductsResponse'
          description: OK
      summary: List Savings Products
      tags:
      - Savings Product
    post:
      description: |-
        Creates a Savings Product

        Mandatory Fields: name, shortName, description, currencyCode, digitsAfterDecimal,inMultiplesOf, nominalAnnualInterestRate, interestCompoundingPeriodType, interestCalculationType, interestCalculationDaysInYearType,accountingRule

        Mandatory Fields for Cash based accounting (accountingRule = 2): savingsReferenceAccountId, savingsControlAccountId, interestOnSavingsAccountId, incomeFromFeeAccountId, transfersInSuspenseAccountId, incomeFromPenaltyAccountId

        Optional Fields: minRequiredOpeningBalance, lockinPeriodFrequency, lockinPeriodFrequencyType, withdrawalFeeForTransfers, paymentChannelToFundSourceMappings, feeToIncomeAccountMappings, penaltyToIncomeAccountMappings, charges, allowOverdraft, overdraftLimit, minBalanceForInterestCalculation,withHoldTax,taxGroupId,accountMapping, lienAllowed, maxAllowedLienLimit
      operationId: create_13
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostSavingsProductsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostSavingsProductsResponse'
          description: OK
      summary: Create a Savings Product
      tags:
      - Savings Product
  /v1/savingsproducts/template:
    get:
      description: |-
        This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:

        Field Defaults
        Allowed description Lists
        Example Request:
        Account Mapping:

        savingsproducts/template
      operationId: retrieveTemplate_20
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSavingsProductsTemplateResponse'
          description: OK
      summary: Retrieve Savings Product Template
      tags:
      - Savings Product
  /v1/savingsproducts/{productId}:
    delete:
      description: Deletes a Savings Product
      operationId: delete_21
      parameters:
      - description: productId
        in: path
        name: productId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSavingsProductsProductIdResponse'
          description: OK
      summary: Delete a Savings Product
      tags:
      - Savings Product
    get:
      description: |-
        Retrieves a Savings Product

        Example Requests:

        savingsproducts/1

        savingsproducts/1?template=true

        savingsproducts/1?fields=name,description
      operationId: retrieveOne_27
      parameters:
      - description: productId
        in: path
        name: productId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSavingsProductsProductIdResponse'
          description: OK
      summary: Retrieve a Savings Product
      tags:
      - Savings Product
    put:
      description: Updates a Savings Product
      operationId: update_22
      parameters:
      - description: productId
        in: path
        name: productId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutSavingsProductsProductIdRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutSavingsProductsProductIdResponse'
          description: OK
      summary: Update a Savings Product
      tags:
      - Savings Product
  /v1/scheduler:
    get:
      description: |-
        Returns the scheduler status.

        Example Requests:

        scheduler
      operationId: retrieveStatus
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSchedulerResponse'
          description: OK
      summary: Retrieve Scheduler Status
      tags:
      - Scheduler
    post:
      description: Activates the scheduler job service. | Suspends the scheduler job
        service.
      operationId: changeSchedulerStatus
      parameters:
      - description: command
        in: query
        name: command
        schema:
          type: string
      responses:
        "200":
          description: |-
            POST :  scheduler?command=start


            POST : scheduler?command=stop
      summary: Activate Scheduler Jobs | Suspend Scheduler Jobs
      tags:
      - Scheduler
  /v1/search:
    get:
      description: |-
        Example Requests:

        search?query=000000001


        search?query=Petra&resource=clients,groups


        search?query=Petra&resource=clients,groups&exactMatch=true
      operationId: searchData
      parameters:
      - description: query
        in: query
        name: query
        schema:
          type: string
      - description: resource
        in: query
        name: resource
        schema:
          type: string
      - description: exactMatch
        in: query
        name: exactMatch
        schema:
          type: boolean
          default: false
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetSearchResponse'
          description: OK
      summary: Search Resources
      tags:
      - Search API
  /v1/search/advance:
    post:
      description: "AdHocQuery search has more search options, it is a POST request,\
        \ it uses request body to send search parameters\n\n\nMandatory fields:entities\n\
        \nOptional fields:loanStatus, loanProducts, offices, loanDateOption, loanFromDate,\
        \ loanToDate, \nincludeOutStandingAmountPercentage, outStandingAmountPercentageCondition,\
        \ \nminOutStandingAmountPercentage and maxOutStandingAmountPercentage OR outStandingAmountPercentage,\
        \ \nincludeOutstandingAmount, outstandingAmountCondition, \nminOutstandingAmount\
        \ and maxOutstandingAmount OR outstandingAmount"
      operationId: advancedSearch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostAdhocQuerySearchRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PostAdhocQuerySearchResponse'
          description: OK
      summary: Adhoc query search
      tags:
      - Search API
  /v1/search/template:
    get:
      description: |
        Mandatory Fields

        search?query=000000001
      operationId: retrieveAdHocSearchQueryTemplate
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSearchResponse'
          description: OK
      summary: Retrive Adhoc Search query template
      tags:
      - Search API
  /v1/self/accounttransfers:
    post:
      description: |
        Ability to create new transfer of monetary funds from one account to another.


        Example Requests:

         self/accounttransfers/
      operationId: create_14
      parameters:
      - in: query
        name: type
        schema:
          type: string
          default: ""
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PostNewTransferResponse'
          description: OK
      summary: Create new Transfer
      tags:
      - Self Account receiveTransfer
  /v1/self/accounttransfers/template:
    get:
      description: |
        Returns list of loan/savings accounts that can be used for account transfer


        Example Requests:

        self/accounttransfers/template
      operationId: template_15
      parameters:
      - in: query
        name: type
        schema:
          type: string
          default: ""
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetAccountTransferTemplateResponse'
          description: OK
      summary: Retrieve Account Transfer Template
      tags:
      - Self Account receiveTransfer
  /v1/self/authentication:
    post:
      description: |-
        Authenticates the credentials provided and returns the set roles and permissions allowed.

        Please visit this link for more info - https://fineract.apache.org/legacy-docs/apiLive.htm#selfbasicauth
      operationId: authenticate_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostAuthenticationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostSelfAuthenticationResponse'
          description: OK
      summary: Verify authentication
      tags:
      - Self Authentication
  /v1/self/beneficiaries/tpt:
    get:
      description: |-
        Api to get all third party beneficiary linked to current user.

        Example Requests:

        /self/beneficiaries/tpt
      operationId: retrieveAll_35
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetSelfBeneficiariesTPTResponse'
          description: OK
      summary: Get All TPT Beneficiary
      tags:
      - Self Third Party Transfer
    post:
      description: |-
        Api to add third party beneficiary linked to current user.

        Parameter Definitions

        name : Nick name for beneficiary, should be unique for an self service user

        officeName : Office Name of beneficiary(not id)

        accountNumber : Account Number of beneficiary(not id)

        transferLimit : Each transfer initiated to this account will not exceed this amount

        Example Requests:

        /self/beneficiaries/tpt

        Mandatory Fields: name, officeName, accountNumber, accountType

        Optional Fields: transferLimit
      operationId: add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostSelfBeneficiariesTPTRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostSelfBeneficiariesTPTResponse'
          description: OK
      summary: Add TPT Beneficiary
      tags:
      - Self Third Party Transfer
  /v1/self/beneficiaries/tpt/template:
    get:
      description: |-
        Returns Account Type enumerations. Self User is expected to know office name and account number to be able to add beneficiary.

        Example Requests:

        /self/beneficiaries/tpt/template
      operationId: template_16
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSelfBeneficiariesTPTTemplateResponse'
          description: OK
      summary: Beneficiary Third Party Transfer Template
      tags:
      - Self Third Party Transfer
  /v1/self/beneficiaries/tpt/{beneficiaryId}:
    delete:
      description: |-
        Api to delete third party beneficiary linked to current user.

        Example Requests:

        /self/beneficiaries/tpt/{beneficiaryId}
      operationId: delete_22
      parameters:
      - in: path
        name: beneficiaryId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSelfBeneficiariesTPTBeneficiaryIdResponse'
          description: OK
      summary: Delete TPT Beneficiary
      tags:
      - Self Third Party Transfer
    put:
      description: |-
        Api to update third party beneficiary linked to current user.

        Example Requests:

        /self/beneficiaries/tpt/{beneficiaryId}

        Optional Fields: name, transferLimit
      operationId: update_23
      parameters:
      - description: beneficiaryId
        in: path
        name: beneficiaryId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutSelfBeneficiariesTPTBeneficiaryIdRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutSelfBeneficiariesTPTBeneficiaryIdResponse'
          description: OK
      summary: Update TPT Beneficiary
      tags:
      - Self Third Party Transfer
  /v1/self/clients:
    get:
      description: |-
        The list capability of clients can support pagination and sorting.

        Example Requests:

        self/clients

        self/clients?fields=displayName,officeName

        self/clients?offset=10&limit=50

        self/clients?orderBy=displayName&sortOrder=DESC
      operationId: retrieveAll_36
      parameters:
      - description: displayName
        in: query
        name: displayName
        schema:
          type: string
      - description: firstName
        in: query
        name: firstName
        schema:
          type: string
      - description: lastName
        in: query
        name: lastName
        schema:
          type: string
      - description: offset
        in: query
        name: offset
        schema:
          type: integer
          format: int32
      - description: status
        in: query
        name: status
        schema:
          type: string
      - description: limit
        in: query
        name: limit
        schema:
          type: integer
          format: int32
      - description: orderBy
        in: query
        name: orderBy
        schema:
          type: string
      - description: sortOrder
        in: query
        name: sortOrder
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSelfClientsResponse'
          description: OK
      summary: List Clients associated to the user
      tags:
      - Self Client
  /v1/self/clients/{clientId}:
    get:
      description: |-
        Retrieves a Client

        Example Requests:

        self/clients/1

        self/clients/1?fields=id,displayName,officeName
      operationId: retrieveOne_28
      parameters:
      - description: clientId
        in: path
        name: clientId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSelfClientsClientIdResponse'
          description: OK
      summary: Retrieve a Client
      tags:
      - Self Client
  /v1/self/clients/{clientId}/accounts:
    get:
      description: |-
        An example of how a loan portfolio summary can be provided. This is requested in a specific use case of the community application.
        It is quite reasonable to add resources like this to simplify User Interface development.

        Example Requests:

        self/clients/1/accounts


        self/clients/1/accounts?fields=loanAccounts,savingsAccounts
      operationId: retrieveAssociatedAccounts_2
      parameters:
      - description: clientId
        in: path
        name: clientId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSelfClientsClientIdAccountsResponse'
          description: OK
      summary: Retrieve client accounts overview
      tags:
      - Self Client
  /v1/self/clients/{clientId}/charges:
    get:
      description: |-
        The list capability of client charges supports pagination.

        Example Requests:

        self/clients/1/charges

        self/clients/1/charges?offset=0&limit=5
      operationId: retrieveAllClientCharges_1
      parameters:
      - description: clientId
        in: path
        name: clientId
        required: true
        schema:
          type: integer
          format: int64
      - description: chargeStatus
        in: query
        name: chargeStatus
        schema:
          type: string
          default: all
      - description: pendingPayment
        in: query
        name: pendingPayment
        schema:
          type: boolean
      - description: limit
        in: query
        name: limit
        schema:
          type: integer
          format: int32
      - description: offset
        in: query
        name: offset
        schema:
          type: integer
          format: int32
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSelfClientsClientIdChargesResponse'
          description: OK
      summary: List Client Charges
      tags:
      - Self Client
  /v1/self/clients/{clientId}/charges/{chargeId}:
    get:
      description: |-
        Retrieves a Client Charge

        Example Requests:

        self/clients/1/charges/1


        self/clients/1/charges/1?fields=name,id
      operationId: retrieveClientCharge_1
      parameters:
      - description: clientId
        in: path
        name: clientId
        required: true
        schema:
          type: integer
          format: int64
      - description: chargeId
        in: path
        name: chargeId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSelfClientsClientIdChargesChargeIdResponse'
          description: OK
      summary: Retrieve a Client Charge
      tags:
      - Self Client
  /v1/self/clients/{clientId}/images:
    delete:
      operationId: deleteClientImage_1
      parameters:
      - in: path
        name: clientId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Self Client
    get:
      description: |-
        Optional arguments are identical to those of Get Image associated with an Entity (Binary file)

        Example Requests:

        self/clients/1/images
      operationId: retrieveImage_1
      parameters:
      - description: clientId
        in: path
        name: clientId
        required: true
        schema:
          type: integer
          format: int64
      - example: maxWidth
        in: query
        name: maxWidth
        schema:
          type: integer
          format: int32
      - example: maxHeight
        in: query
        name: maxHeight
        schema:
          type: integer
          format: int32
      - example: output
        in: query
        name: output
        schema:
          type: string
      responses:
        "200":
          description: OK
      summary: Retrieve Client Image
      tags:
      - Self Client
    post:
      operationId: addNewClientImage_2
      parameters:
      - in: path
        name: clientId
        required: true
        schema:
          type: integer
          format: int64
      - in: header
        name: Content-Length
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadRequest'
        description: Add new client image
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Self Client
  /v1/self/clients/{clientId}/obligeedetails:
    get:
      operationId: retrieveObligeeDetails_2
      parameters:
      - in: path
        name: clientId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Self Client
  /v1/self/clients/{clientId}/transactions:
    get:
      description: |-
        The list capability of client transaction can support pagination.

        Example Requests:

        self/clients/189/transactions

        self/clients/189/transactions?offset=10&limit=50
      operationId: retrieveAllClientTransactions_2
      parameters:
      - description: clientId
        in: path
        name: clientId
        required: true
        schema:
          type: integer
          format: int64
      - description: offset
        in: query
        name: offset
        schema:
          type: integer
          format: int32
      - description: limit
        in: query
        name: limit
        schema:
          type: integer
          format: int32
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSelfClientsClientIdTransactionsResponse'
          description: OK
      summary: List Client Transactions
      tags:
      - Self Client
  /v1/self/clients/{clientId}/transactions/{transactionId}:
    get:
      description: |-
        Retrieves a Client TransactionExample Requests:

        self/clients/1/transactions/1


        self/clients/1/transactions/1?fields=id,officeName
      operationId: retrieveClientTransaction_4
      parameters:
      - description: clientId
        in: path
        name: clientId
        required: true
        schema:
          type: integer
          format: int64
      - description: transactionId
        in: path
        name: transactionId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSelfClientsClientIdTransactionsTransactionIdResponse'
          description: OK
      summary: Retrieve a Client Transaction
      tags:
      - Self Client
  /v1/self/device/registration:
    get:
      operationId: retrieveAllDeviceRegistrations
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Device Registration
    post:
      operationId: registerDevice
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Device Registration
  /v1/self/device/registration/client/{clientId}:
    get:
      operationId: retrieveDeviceRegistrationByClientId
      parameters:
      - in: path
        name: clientId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Device Registration
  /v1/self/device/registration/{id}:
    delete:
      operationId: delete_5
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Device Registration
    get:
      operationId: retrieveDeviceRegiistration
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Device Registration
    put:
      operationId: updateDeviceRegistration
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Device Registration
  /v1/self/loanproducts:
    get:
      operationId: retrieveAllLoanProducts_1
      parameters:
      - in: query
        name: clientId
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Self Loan Products
  /v1/self/loanproducts/{productId}:
    get:
      operationId: retrieveLoanProductDetails_2
      parameters:
      - in: query
        name: clientId
        schema:
          type: integer
          format: int64
      - in: path
        name: productId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Self Loan Products
  /v1/self/loans:
    post:
      description: |-
        Calculate Loan Repayment Schedule:

        Calculates Loan Repayment Schedule

        Mandatory Fields: productId, principal, loanTermFrequency, loanTermFrequencyType, numberOfRepayments, repaymentEvery, repaymentFrequencyType, interestRatePerPeriod, amortizationType, interestType, interestCalculationPeriodType, expectedDisbursementDate, transactionProcessingStrategyCode

        Submit a new Loan Application:

        Mandatory Fields: clientId, productId, principal, loanTermFrequency, loanTermFrequencyType, loanType, numberOfRepayments, repaymentEvery, repaymentFrequencyType, interestRatePerPeriod, amortizationType, interestType, interestCalculationPeriodType, transactionProcessingStrategyCode, expectedDisbursementDate, submittedOnDate, loanType

        Additional Mandatory Fields if interest recalculation is enabled for product and Rest frequency not same as repayment period: recalculationRestFrequencyDate

        Additional Mandatory Fields if interest recalculation with interest/fee compounding is enabled for product and compounding frequency not same as repayment period: recalculationCompoundingFrequencyDate

        Additional Mandatory Field if Entity-Datatable Check is enabled for the entity of type loan: datatables

        Optional Fields: graceOnPrincipalPayment, graceOnInterestPayment, graceOnInterestCharged, linkAccountId, allowPartialPeriodInterestCalcualtion, fixedEmiAmount, maxOutstandingLoanBalance, disbursementData, graceOnArrearsAgeing, createStandingInstructionAtDisbursement (requires linkedAccountId if set to true)

        Showing request/response for 'Submit a new Loan Application'
      operationId: calculateLoanScheduleOrSubmitLoanApplication_1
      parameters:
      - description: command
        in: query
        name: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostSelfLoansRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostSelfLoansResponse'
          description: OK
      summary: Calculate Loan Repayment Schedule | Submit a new Loan Application
      tags:
      - Self Loans
  /v1/self/loans/template:
    get:
      description: |-
        Retrieves Loan Details Template

        This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:

        Field Defaults
        Allowed description Lists

        Example Requests:

        self/loans/template?templateType=individual&clientId=1


        self/loans/template?templateType=individual&clientId=1&productId=1
      operationId: template_17
      parameters:
      - description: clientId
        in: query
        name: clientId
        schema:
          type: integer
          format: int64
      - description: productId
        in: query
        name: productId
        schema:
          type: integer
          format: int64
      - description: templateType
        in: query
        name: templateType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSelfLoansTemplateResponse'
          description: OK
      summary: Retrieve Loan Details Template
      tags:
      - Self Loans
  /v1/self/loans/{loanId}:
    get:
      description: |-
        Retrieves a Loan

        Example Requests:

        self/loans/1


        self/loans/1?fields=id,principal,annualInterestRate


        self/loans/1?fields=id,principal,annualInterestRate&associations=repaymentSchedule,transactions
      operationId: retrieveLoan_2
      parameters:
      - description: loanId
        in: path
        name: loanId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSelfLoansLoanIdResponse'
          description: OK
      summary: Retrieve a Loan
      tags:
      - Self Loans
    post:
      description: |-
        Applicant Withdraws from Loan Application

        Mandatory Fields: withdrawnOnDate
      operationId: stateTransitions_2
      parameters:
      - description: loanId
        in: path
        name: loanId
        required: true
        schema:
          type: integer
          format: int64
      - description: command
        in: query
        name: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostSelfLoansLoanIdRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostSelfLoansLoanIdResponse'
          description: OK
      summary: Applicant Withdraws from Loan Application
      tags:
      - Self Loans
    put:
      description: "Loan application can only be modified when in 'Submitted and pending\
        \ approval' state. Once the application is approved, the details cannot be\
        \ changed using this method."
      operationId: modifyLoanApplication_2
      parameters:
      - description: loanId
        in: path
        name: loanId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutSelfLoansLoanIdRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutSelfLoansLoanIdResponse'
          description: OK
      summary: Update a Loan Application
      tags:
      - Self Loans
  /v1/self/loans/{loanId}/charges:
    get:
      description: |-
        Lists loan Charges

        Example Requests:

        self/loans/1/charges


        self/loans/1/charges?fields=name,amountOrPercentage
      operationId: retrieveAllLoanCharges_2
      parameters:
      - description: loanId
        in: path
        name: loanId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetSelfLoansLoanIdChargesResponse'
          description: OK
      summary: List Loan Charges
      tags:
      - Self Loans
  /v1/self/loans/{loanId}/charges/{chargeId}:
    get:
      description: |-
        Retrieves a Loan Charge

        Example Requests:

        self/loans/1/charges/1


        self/loans/1/charges/1?fields=name,amountOrPercentage
      operationId: retrieveLoanCharge_4
      parameters:
      - description: loanId
        in: path
        name: loanId
        required: true
        schema:
          type: integer
          format: int64
      - description: chargeId
        in: path
        name: chargeId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSelfLoansLoanIdChargesResponse'
          description: OK
      summary: Retrieve a Loan Charge
      tags:
      - Self Loans
  /v1/self/loans/{loanId}/guarantors:
    get:
      operationId: retrieveGuarantorDetails_2
      parameters:
      - in: path
        name: loanId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Self Loans
  /v1/self/loans/{loanId}/transactions/{transactionId}:
    get:
      description: |-
        Retrieves a Loan Transaction DetailsExample Request:

        self/loans/5/transactions/3
      operationId: retrieveTransaction_1
      parameters:
      - description: loanId
        in: path
        name: loanId
        required: true
        schema:
          type: integer
          format: int64
      - description: transactionId
        in: path
        name: transactionId
        required: true
        schema:
          type: integer
          format: int64
      - description: Optional Loan Transaction attribute list to be in the response
        example: "id,date,amount"
        in: query
        name: fields
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSelfLoansLoanIdTransactionsTransactionIdResponse'
          description: OK
      summary: Retrieve a Loan Transaction Details
      tags:
      - Self Loans
  /v1/self/pockets:
    get:
      description: |-
        All linked loan

        Example Requests:


        self/pockets
      operationId: retrieveAll_37
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountsLinkedToPocketResponse'
          description: OK
      summary: Retrieve accounts linked to pocket
      tags:
      - Pocket
    post:
      description: |-
        Pockets behave as favourites. An user can link his/her Loan, Savings and Share accounts to pocket for faster access. In a similar way linked accounts can be delinked from the pocket.

        Example Requests:

        self/pockets?command=linkAccounts

        self/pockets?command=delinkAccounts
      operationId: handleCommands_8
      parameters:
      - description: command
        in: query
        name: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostLinkDelinkAccountsToFromPocketResponse'
          description: OK
      summary: Link/delink accounts to/from pocket
      tags:
      - Pocket
  /v1/self/products/share:
    get:
      operationId: retrieveAllProducts_1
      parameters:
      - in: query
        name: clientId
        schema:
          type: integer
          format: int64
      - in: query
        name: offset
        schema:
          type: integer
          format: int32
      - in: query
        name: limit
        schema:
          type: integer
          format: int32
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Self Share Products
  /v1/self/products/share/{productId}:
    get:
      operationId: retrieveProduct_1
      parameters:
      - in: query
        name: clientId
        schema:
          type: integer
          format: int64
      - in: path
        name: productId
        required: true
        schema:
          type: integer
          format: int64
      - in: path
        name: type
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Self Share Products
  /v1/self/registration:
    post:
      operationId: createSelfServiceRegistrationRequest
      requestBody:
        content:
          '*/*':
            schema:
              type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Self Service Registration
  /v1/self/registration/user:
    post:
      operationId: createSelfServiceUser
      requestBody:
        content:
          '*/*':
            schema:
              type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Self Service Registration
  /v1/self/runreports/{reportName}:
    get:
      description: |-
        Example Requests:


        self/runreports/Client%20Details?R_officeId=1


        self/runreports/Client%20Details?R_officeId=1&exportCSV=true
      operationId: runReport_1
      parameters:
      - description: reportName
        in: path
        name: reportName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRunReportResponse'
            application/pdf:
              schema:
                $ref: '#/components/schemas/GetRunReportResponse'
            application/vnd.ms-excel:
              schema:
                $ref: '#/components/schemas/GetRunReportResponse'
            text/csv:
              schema:
                $ref: '#/components/schemas/GetRunReportResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/GetRunReportResponse'
          description: OK
      summary: Running A Report
      tags:
      - Self Run Report
  /v1/self/savingsaccounts:
    post:
      operationId: submitSavingsAccountApplication
      parameters:
      - in: query
        name: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Self Savings Account
  /v1/self/savingsaccounts/template:
    get:
      operationId: template_18
      parameters:
      - in: query
        name: clientId
        schema:
          type: integer
          format: int64
      - in: query
        name: productId
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Self Savings Account
  /v1/self/savingsaccounts/{accountId}:
    get:
      description: |-
        Retrieves a savings account

        Example Requests :

        self/savingsaccounts/1


        self/savingsaccounts/1?associations=transactions
      operationId: retrieveSavings
      parameters:
      - description: accountId
        in: path
        name: accountId
        required: true
        schema:
          type: integer
          format: int64
      - description: chargeStatus
        in: query
        name: chargeStatus
        schema:
          type: string
          default: all
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSelfSavingsAccountsResponse'
          description: OK
      summary: Retrieve a savings account
      tags:
      - Self Savings Account
    put:
      operationId: modifySavingsAccountApplication
      parameters:
      - in: path
        name: accountId
        required: true
        schema:
          type: integer
          format: int64
      - in: query
        name: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Self Savings Account
  /v1/self/savingsaccounts/{accountId}/charges:
    get:
      description: |-
        Lists Savings Charges

        Example Requests:

        self/savingsaccounts/1/charges

        self/savingsaccounts/1/charges?chargeStatus=inactive

        self/savingsaccounts/1/charges?fields=name,amountOrPercentage
      operationId: retrieveAllSavingsAccountCharges_1
      parameters:
      - description: accountId
        in: path
        name: accountId
        required: true
        schema:
          type: integer
          format: int64
      - description: chargeStatus
        in: query
        name: chargeStatus
        schema:
          type: string
          default: all
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetSelfSavingsAccountsAccountIdChargesResponse'
          description: OK
      summary: List Savings Charges
      tags:
      - Self Savings Account
  /v1/self/savingsaccounts/{accountId}/charges/{savingsAccountChargeId}:
    get:
      description: |-
        Retrieves a Savings account Charge

        Example Requests:

        self/savingsaccounts/1/charges/5


        self/savingsaccounts/1/charges/5?fields=name,amountOrPercentage
      operationId: retrieveSavingsAccountCharge_1
      parameters:
      - description: accountId
        in: path
        name: accountId
        required: true
        schema:
          type: integer
          format: int64
      - description: savingsAccountChargeId
        in: path
        name: savingsAccountChargeId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSelfSavingsAccountsAccountIdChargesSavingsAccountChargeIdResponse'
          description: OK
      summary: Retrieve a Savings account Charge
      tags:
      - Self Savings Account
  /v1/self/savingsaccounts/{accountId}/transactions/{transactionId}:
    get:
      description: |-
        Retrieves Savings Account Transaction

        Example Requests:

        self/savingsaccounts/1/transactions/1
      operationId: retrieveSavingsTransaction
      parameters:
      - description: accountId
        in: path
        name: accountId
        required: true
        schema:
          type: integer
          format: int64
      - description: transactionId
        in: path
        name: transactionId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSelfSavingsAccountsAccountIdTransactionsTransactionIdResponse'
          description: OK
      summary: Retrieve Savings Account Transaction
      tags:
      - Self Savings Account
  /v1/self/savingsproducts:
    get:
      operationId: retrieveAll_38
      parameters:
      - in: query
        name: clientId
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Self Savings Products
  /v1/self/savingsproducts/{productId}:
    get:
      operationId: retrieveOne_29
      parameters:
      - in: path
        name: productId
        required: true
        schema:
          type: integer
          format: int64
      - in: query
        name: clientId
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Self Savings Products
  /v1/self/shareaccounts:
    post:
      description: |-
        Mandatory fields:

        clientId, productId, submittedDate, savingsAccountId, requestedShares, applicationDate


        Optional Fields

        accountNo, externalId


        Inherited from Product (if not provided)

        minimumActivePeriod, minimumActivePeriodFrequencyType, lockinPeriodFrequency, lockinPeriodFrequencyType.
      operationId: createAccount_1
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PostNewShareApplicationResponse'
          description: OK
      summary: Submit new share application
      tags:
      - Self Share Accounts
  /v1/self/shareaccounts/template:
    get:
      description: |
        This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:
        Field Defaults

        Allowed Value Lists


        Arguments

        clientId:Integer mandatory
        productId:Integer optionalIf entered, productId, productName and selectedProduct fields are returned.
        Example Requests:

        self/shareaccounts/template?clientId=14

        self/shareaccounts/template?clientId=14&productId=3
      operationId: template_19
      parameters:
      - in: query
        name: clientId
        schema:
          type: integer
          format: int64
      - in: query
        name: productId
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetShareAccountsClientIdProductIdResponse'
          description: OK
      summary: Retrieve Share Account Template
      tags:
      - Self Share Accounts
  /v1/self/shareaccounts/{accountId}:
    get:
      description: |2



        Example Requests:

        self/shareaccounts/12
      operationId: retrieveShareAccount
      parameters:
      - in: path
        name: accountId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      summary: Retrieve a share application/account
      tags:
      - Self Share Accounts
  /v1/self/surveys:
    get:
      operationId: fetchAllSurveys
      responses:
        default:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SurveyData'
          description: default response
      tags:
      - Self Spm
  /v1/self/surveys/scorecards/clients/{clientId}:
    get:
      operationId: findByClient
      parameters:
      - in: path
        name: clientId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScorecardData'
          description: default response
      tags:
      - Self Score Card
  /v1/self/surveys/scorecards/{surveyId}:
    post:
      operationId: createScorecard
      parameters:
      - in: path
        name: surveyId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScorecardData'
      responses:
        default:
          content:
            application/json: {}
          description: default response
      tags:
      - Self Score Card
  /v1/self/user:
    put:
      description: "This API can be used by Self Service user to update their own\
        \ user information. Currently, \"password\" and \"repeatPassword\" are the\
        \ only parameters accepted."
      operationId: update_24
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/PutSelfUserRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PutSelfUserResponse'
          description: OK
      summary: Update User
      tags:
      - Self User
  /v1/self/userdetails:
    get:
      description: |-
        Checks the Authentication and returns the set roles and permissions allowed

        For more info visit this link - https://fineract.apache.org/legacy-docs/apiLive.htm#selfoauth
      operationId: fetchAuthenticatedUserData_1
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSelfUserDetailsResponse'
          description: OK
      summary: Fetch authenticated user details
      tags:
      - Self User Details
  /v1/shareproduct/{productId}/dividend:
    get:
      operationId: retrieveAll_39
      parameters:
      - in: path
        name: productId
        required: true
        schema:
          type: integer
          format: int64
      - in: query
        name: offset
        schema:
          type: integer
          format: int32
      - in: query
        name: limit
        schema:
          type: integer
          format: int32
      - in: query
        name: orderBy
        schema:
          type: string
      - in: query
        name: sortOrder
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: integer
          format: int32
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Self Dividend
    post:
      operationId: createDividendDetail
      parameters:
      - in: path
        name: productId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Self Dividend
  /v1/shareproduct/{productId}/dividend/{dividendId}:
    delete:
      operationId: deleteDividendDetail
      parameters:
      - in: path
        name: productId
        required: true
        schema:
          type: integer
          format: int64
      - in: path
        name: dividendId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Self Dividend
    get:
      operationId: retrieveDividendDetails
      parameters:
      - in: path
        name: dividendId
        required: true
        schema:
          type: integer
          format: int64
      - in: query
        name: offset
        schema:
          type: integer
          format: int32
      - in: query
        name: limit
        schema:
          type: integer
          format: int32
      - in: query
        name: orderBy
        schema:
          type: string
      - in: query
        name: sortOrder
        schema:
          type: string
      - in: query
        name: accountNo
        schema:
          type: string
      - in: path
        name: productId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Self Dividend
    put:
      operationId: updateDividendDetail
      parameters:
      - in: path
        name: productId
        required: true
        schema:
          type: integer
          format: int64
      - in: path
        name: dividendId
        required: true
        schema:
          type: integer
          format: int64
      - in: query
        name: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Self Dividend
  /v1/sms:
    get:
      operationId: retrieveAll_10
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - SMS
    post:
      operationId: create_2
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - SMS
  /v1/sms/{campaignId}/messageByStatus:
    get:
      operationId: retrieveAllSmsByStatus
      parameters:
      - in: path
        name: campaignId
        required: true
        schema:
          type: integer
          format: int64
      - in: query
        name: status
        schema:
          type: integer
          format: int64
      - in: query
        name: fromDate
        schema:
          $ref: '#/components/schemas/DateParam'
      - in: query
        name: toDate
        schema:
          $ref: '#/components/schemas/DateParam'
      - in: query
        name: locale
        schema:
          type: string
      - in: query
        name: dateFormat
        schema:
          type: string
      - in: query
        name: offset
        schema:
          type: integer
          format: int32
      - in: query
        name: limit
        schema:
          type: integer
          format: int32
      - in: query
        name: orderBy
        schema:
          type: string
      - in: query
        name: sortOrder
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - SMS
  /v1/sms/{resourceId}:
    delete:
      operationId: delete_6
      parameters:
      - in: path
        name: resourceId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - SMS
    get:
      operationId: retrieveOne_6
      parameters:
      - in: path
        name: resourceId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - SMS
    put:
      operationId: update_3
      parameters:
      - in: path
        name: resourceId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - SMS
  /v1/smscampaigns:
    get:
      description: |-
        Example Requests:

        smscampaigns
      operationId: retrieveAllEmails_1
      parameters:
      - in: query
        name: offset
        schema:
          type: integer
          format: int32
      - in: query
        name: limit
        schema:
          type: integer
          format: int32
      - in: query
        name: orderBy
        schema:
          type: string
      - in: query
        name: sortOrder
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsCampaignData'
          description: OK
      summary: List SMS Campaigns
    post:
      description: |-
        Mandatory Fields
        campaignName, campaignType, triggerType, providerId, runReportId, message

        Mandatory Fields for Cash based on selected report id
        paramValue in json format
      operationId: createCampaign_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommandWrapper'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommandProcessingResult'
          description: OK
      summary: Create a SMS Campaign
  /v1/smscampaigns/preview:
    post:
      operationId: preview_1
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
  /v1/smscampaigns/template:
    get:
      description: |-
        Example Requests:

        smscampaigns/1


        smscampaigns/1?template=true


        smscampaigns/template
      operationId: template_2
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SmsCampaignData'
          description: OK
      summary: Retrieve a SMS Campaign
  /v1/smscampaigns/{campaignId}:
    delete:
      description: "Note: Only closed SMS Campaigns can be deleted"
      operationId: delete_3
      parameters:
      - in: path
        name: campaignId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CommandProcessingResult'
          description: OK
      summary: Delete a SMS Campaign
    post:
      description: Activates | Deactivates | Reactivates
      operationId: handleCommands
      parameters:
      - in: path
        name: campaignId
        required: true
        schema:
          type: integer
          format: int64
      - in: query
        name: command
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommandProcessingResult'
          description: OK
      summary: SMS Campaign
    put:
      operationId: updateCampaign_1
      parameters:
      - in: path
        name: campaignId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommandWrapper'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommandProcessingResult'
          description: OK
      summary: Update a Campaign
  /v1/smscampaigns/{resourceId}:
    get:
      description: |
        Example Requests:

        smscampaigns/1
      operationId: retrieveCampaign
      parameters:
      - in: path
        name: resourceId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsCampaignData'
          description: OK
      summary: Retrieve a SMS Campaign
  /v1/staff:
    get:
      description: |-
        Returns the list of staff members.

        Example Requests:

        staff




        Retrieve a Staff by status

        Returns the details of a Staff based on status.

        By default it Returns all the ACTIVE Staff.

        If status=INACTIVE, then it returns all INACTIVE Staff.

        and for status=ALL, it Returns both ACTIVE and INACTIVE Staff.

        Example Requests:

        staff?status=active
      operationId: retrieveAll_16
      parameters:
      - description: officeId
        in: query
        name: officeId
        schema:
          type: integer
          format: int64
      - description: staffInOfficeHierarchy
        in: query
        name: staffInOfficeHierarchy
        schema:
          type: boolean
          default: false
      - description: loanOfficersOnly
        in: query
        name: loanOfficersOnly
        schema:
          type: boolean
          default: false
      - description: status
        in: query
        name: status
        schema:
          type: string
          default: active
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RetrieveOneResponse'
          description: OK
      summary: Retrieve Staff
      tags:
      - Staff
    post:
      description: "Creates a staff member.\n\nMandatory Fields: \nofficeId, firstname,\
        \ lastname\n\nOptional Fields: \nisLoanOfficer, isActive"
      operationId: create_3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostStaffRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateStaffResponse'
          description: OK
      summary: Create a staff member
      tags:
      - Staff
  /v1/staff/downloadtemplate:
    get:
      operationId: getTemplate_1
      parameters:
      - in: query
        name: officeId
        schema:
          type: integer
          format: int64
      - in: query
        name: dateFormat
        schema:
          type: string
      responses:
        default:
          content:
            application/vnd.ms-excel: {}
          description: default response
      tags:
      - Staff
  /v1/staff/uploadtemplate:
    post:
      operationId: postTemplate
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadRequest'
        description: Upload staff template
      responses:
        default:
          content:
            '*/*':
              schema:
                type: string
          description: default response
      tags:
      - Staff
  /v1/staff/{staffId}:
    get:
      description: |-
        Returns the details of a Staff Member.

        Example Requests:

        staff/1
      operationId: retrieveOne_8
      parameters:
      - description: staffId
        in: path
        name: staffId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveOneResponse'
          description: OK
      summary: Retrieve a Staff Member
      tags:
      - Staff
    put:
      description: Updates the details of a staff member.
      operationId: update_7
      parameters:
      - description: staffId
        in: path
        name: staffId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutStaffRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateStaffResponse'
          description: OK
      summary: Update a Staff Member
      tags:
      - Staff
  /v1/standinginstructionrunhistory:
    get:
      description: "The list capability of history can support pagination and sorting\
        \ \n\nExample Requests :\n\nstandinginstructionrunhistory\n\nstandinginstructionrunhistory?orderBy=name&sortOrder=DESC\n\
        \nstandinginstructionrunhistory?offset=10&limit=50"
      operationId: retrieveAll_20
      parameters:
      - description: externalId
        in: query
        name: externalId
        schema:
          type: string
      - description: offset
        in: query
        name: offset
        schema:
          type: integer
          format: int32
      - description: limit
        in: query
        name: limit
        schema:
          type: integer
          format: int32
      - description: orderBy
        in: query
        name: orderBy
        schema:
          type: string
      - description: sortOrder
        in: query
        name: sortOrder
        schema:
          type: string
      - description: transferType
        in: query
        name: transferType
        schema:
          type: integer
          format: int32
      - description: clientName
        in: query
        name: clientName
        schema:
          type: string
      - description: clientId
        in: query
        name: clientId
        schema:
          type: integer
          format: int64
      - description: fromAccountId
        in: query
        name: fromAccountId
        schema:
          type: integer
          format: int64
      - description: fromAccountType
        in: query
        name: fromAccountType
        schema:
          type: integer
          format: int32
      - description: locale
        in: query
        name: locale
        schema:
          type: string
      - description: dateFormat
        in: query
        name: dateFormat
        schema:
          type: string
      - description: fromDate
        in: query
        name: fromDate
        schema:
          $ref: '#/components/schemas/DateParam'
      - description: toDate
        in: query
        name: toDate
        schema:
          $ref: '#/components/schemas/DateParam'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStandingInstructionRunHistoryResponse'
          description: OK
      summary: Standing Instructions Logged History
      tags:
      - Standing Instructions History
  /v1/standinginstructions:
    get:
      description: |-
        Example Requests:

        standinginstructions
      operationId: retrieveAll_19
      parameters:
      - description: externalId
        in: query
        name: externalId
        schema:
          type: string
      - description: offset
        in: query
        name: offset
        schema:
          type: integer
          format: int32
      - description: limit
        in: query
        name: limit
        schema:
          type: integer
          format: int32
      - description: orderBy
        in: query
        name: orderBy
        schema:
          type: string
      - description: sortOrder
        in: query
        name: sortOrder
        schema:
          type: string
      - description: transferType
        in: query
        name: transferType
        schema:
          type: integer
          format: int32
      - description: clientName
        in: query
        name: clientName
        schema:
          type: string
      - description: clientId
        in: query
        name: clientId
        schema:
          type: integer
          format: int64
      - description: fromAccountId
        in: query
        name: fromAccountId
        schema:
          type: integer
          format: int64
      - description: fromAccountType
        in: query
        name: fromAccountType
        schema:
          type: integer
          format: int32
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStandingInstructionsResponse'
          description: OK
      summary: List Standing Instructions
      tags:
      - Standing Instructions
    post:
      description: Ability to create new instruction for receiveTransfer of monetary funds
        from one account to another
      operationId: create_5
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostStandingInstructionsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostStandingInstructionsResponse'
          description: OK
      summary: Create new Standing Instruction
      tags:
      - Standing Instructions
  /v1/standinginstructions/template:
    get:
      description: |-
        This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:

        Field Defaults
        Allowed Value Lists
        Example Requests:

        standinginstructions/template?fromAccountType=2&fromOfficeId=1

        standinginstructions/template?fromAccountType=2&fromOfficeId=1&fromClientId=1&transferType=1

        standinginstructions/template?fromClientId=1&fromAccountType=2&fromAccountId=1&transferType=1
      operationId: template_6
      parameters:
      - description: fromOfficeId
        in: query
        name: fromOfficeId
        schema:
          type: integer
          format: int64
      - description: fromClientId
        in: query
        name: fromClientId
        schema:
          type: integer
          format: int64
      - description: fromAccountId
        in: query
        name: fromAccountId
        schema:
          type: integer
          format: int64
      - description: fromAccountType
        in: query
        name: fromAccountType
        schema:
          type: integer
          format: int32
      - description: toOfficeId
        in: query
        name: toOfficeId
        schema:
          type: integer
          format: int64
      - description: toClientId
        in: query
        name: toClientId
        schema:
          type: integer
          format: int64
      - description: toAccountId
        in: query
        name: toAccountId
        schema:
          type: integer
          format: int64
      - description: toAccountType
        in: query
        name: toAccountType
        schema:
          type: integer
          format: int32
      - description: transferType
        in: query
        name: transferType
        schema:
          type: integer
          format: int32
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStandingInstructionsTemplateResponse'
          description: OK
      summary: Retrieve Standing Instruction Template
      tags:
      - Standing Instructions
  /v1/standinginstructions/{standingInstructionId}:
    get:
      description: |-
        Example Requests :

        standinginstructions/1
      operationId: retrieveOne_10
      parameters:
      - description: standingInstructionId
        in: path
        name: standingInstructionId
        required: true
        schema:
          type: integer
          format: int64
      - description: externalId
        in: query
        name: externalId
        schema:
          type: string
      - description: offset
        in: query
        name: offset
        schema:
          type: integer
          format: int32
      - description: limit
        in: query
        name: limit
        schema:
          type: integer
          format: int32
      - description: orderBy
        in: query
        name: orderBy
        schema:
          type: string
      - description: sortOrder
        in: query
        name: sortOrder
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStandingInstructionsStandingInstructionIdResponse'
          description: OK
      summary: Retrieve Standing Instruction
      tags:
      - Standing Instructions
    put:
      description: |-
        Ability to modify existing instruction for transfer of monetary funds from one account to another.

        PUT https://DomainName/api/v1/standinginstructions/1?command=update


        Ability to modify existing instruction for transfer of monetary funds from one account to another.

        PUT https://DomainName/api/v1/standinginstructions/1?command=delete
      operationId: update_9
      parameters:
      - description: standingInstructionId
        in: path
        name: standingInstructionId
        required: true
        schema:
          type: integer
          format: int64
      - description: command
        in: query
        name: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutStandingInstructionsStandingInstructionIdRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutStandingInstructionsStandingInstructionIdResponse'
          description: OK
      summary: Update Standing Instruction | Delete Standing Instruction
      tags:
      - Standing Instructions
  /v1/survey:
    get:
      description: Retrieve surveys. This allows to retrieve the list of survey tables
        registered .
      operationId: retrieveSurveys
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetSurveyResponse'
          description: OK
      summary: Retrieve surveys
      tags:
      - Survey
  /v1/survey/register/{surveyName}/{apptable}:
    put:
      operationId: register
      parameters:
      - in: path
        name: surveyName
        required: true
        schema:
          type: string
      - in: path
        name: apptable
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Survey
  /v1/survey/{surveyName}:
    get:
      description: Lists a registered survey table details and the Apache Fineract
        Core application table they are registered to.
      operationId: retrieveSurvey
      parameters:
      - description: surveyName
        in: path
        name: surveyName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSurveyResponse'
          description: OK
      summary: Retrieve survey
      tags:
      - Survey
  /v1/survey/{surveyName}/{apptableId}:
    post:
      description: "Insert and entry in a survey table (full fill the survey).\n\n\
        Refer Link for sample Body:  [ https://fineract.apache.org/legacy-docs/apiLive.htm#survey_create\
        \ ] "
      operationId: createDatatableEntry_1
      parameters:
      - description: surveyName
        in: path
        name: surveyName
        required: true
        schema:
          type: string
      - description: apptableId
        in: path
        name: apptableId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostSurveySurveyNameApptableIdRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostSurveySurveyNameApptableIdResponse'
          description: OK
      summary: Create an entry in the survey table
      tags:
      - Survey
  /v1/survey/{surveyName}/{clientId}:
    get:
      operationId: getClientSurveyOverview
      parameters:
      - in: path
        name: surveyName
        required: true
        schema:
          type: string
      - in: path
        name: clientId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Survey
  /v1/survey/{surveyName}/{clientId}/{entryId}:
    get:
      operationId: getSurveyEntry
      parameters:
      - in: path
        name: surveyName
        required: true
        schema:
          type: string
      - in: path
        name: clientId
        required: true
        schema:
          type: integer
          format: int64
      - in: path
        name: entryId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Survey
  /v1/survey/{surveyName}/{clientId}/{fulfilledId}:
    delete:
      operationId: deleteDatatableEntries_1
      parameters:
      - in: path
        name: surveyName
        required: true
        schema:
          type: string
      - in: path
        name: clientId
        required: true
        schema:
          type: integer
          format: int64
      - in: path
        name: fulfilledId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Survey
  /v1/surveys:
    get:
      operationId: fetchAllSurveys_1
      parameters:
      - in: query
        name: isActive
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SurveyData'
          description: OK
      summary: List all Surveys
      tags:
      - Spm-Surveys
    post:
      description: |-
        Adds a new survey to collect client related data.

        Mandatory Fields

        countryCode, key, name, questions, responses, sequenceNo, text, description
      operationId: createSurvey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SurveyData'
        description: Create survey
      responses:
        "200":
          description: OK
      summary: Create a Survey
      tags:
      - Spm-Surveys
  /v1/surveys/scorecards/clients/{clientId}:
    get:
      operationId: findByClient_1
      parameters:
      - in: path
        name: clientId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScorecardData'
          description: default response
      tags:
      - Score Card
  /v1/surveys/scorecards/{surveyId}:
    get:
      description: List all Scorecard entries for a survey.
      operationId: findBySurvey
      parameters:
      - description: Enter surveyId
        in: path
        name: surveyId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Scorecard'
          description: OK
      summary: List all Scorecard entries
      tags:
      - Score Card
    post:
      description: |-
        Add a new entry to a survey.

        Mandatory Fields
        clientId, createdOn, questionId, responseId, staffId
      operationId: createScorecard_1
      parameters:
      - description: Enter surveyId
        in: path
        name: surveyId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScorecardData'
        description: scorecardData
      responses:
        "200":
          description: OK
      summary: Create a Scorecard entry
      tags:
      - Score Card
  /v1/surveys/scorecards/{surveyId}/clients/{clientId}:
    get:
      operationId: findBySurveyAndClient
      parameters:
      - description: Enter surveyId
        in: path
        name: surveyId
        required: true
        schema:
          type: integer
          format: int64
      - description: Enter clientId
        in: path
        name: clientId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScorecardData'
          description: default response
      tags:
      - Score Card
  /v1/surveys/{id}:
    get:
      operationId: findSurvey
      parameters:
      - description: Enter id
        in: path
        name: id
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SurveyData'
          description: OK
      summary: Retrieve a Survey
      tags:
      - Spm-Surveys
    post:
      operationId: activateOrDeactivateSurvey
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
          format: int64
      - in: query
        name: command
        schema:
          type: string
      responses:
        "200":
          description: OK
      summary: Deactivate Survey
      tags:
      - Spm-Surveys
    put:
      operationId: editSurvey
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SurveyData'
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Spm-Surveys
  /v1/surveys/{surveyId}/lookuptables:
    get:
      description: List all Lookup Table entries for a survey.
      operationId: fetchLookupTables
      parameters:
      - description: Enter surveyId
        in: path
        name: surveyId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LookupTableData'
          description: OK
      summary: List all Lookup Table entries
      tags:
      - SPM API - LookUp Table
    post:
      description: |-
        Add a new entry to a survey.

        Mandatory Fields
        key, score, validFrom, validTo
      operationId: createLookupTable
      parameters:
      - description: Enter surveyId
        in: path
        name: surveyId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LookupTableData'
      responses:
        "200":
          description: OK
      summary: Create a Lookup Table entry
      tags:
      - SPM API - LookUp Table
  /v1/surveys/{surveyId}/lookuptables/{key}:
    get:
      description: Retrieve a Lookup Table entry for a survey.
      operationId: findLookupTable
      parameters:
      - description: Enter surveyId
        in: path
        name: surveyId
        required: true
        schema:
          type: integer
          format: int64
      - description: Enter key
        in: path
        name: key
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LookupTableData'
          description: OK
      summary: Retrieve a Lookup Table entry
      tags:
      - SPM API - LookUp Table
  /v1/taxes/component:
    get:
      description: List Tax Components
      operationId: retrieveAllTaxComponents
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetTaxesComponentsResponse'
          description: OK
      summary: List Tax Components
      tags:
      - Tax Components
    post:
      description: |-
        Creates a new Tax Component

        Mandatory Fields: name, percentage

        Optional Fields: debitAccountType, debitAcountId, creditAccountType, creditAcountId, startDate
      operationId: createTaxCompoent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostTaxesComponentsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostTaxesComponentsResponse'
          description: OK
      summary: Create a new Tax Component
      tags:
      - Tax Components
  /v1/taxes/component/template:
    get:
      operationId: retrieveTemplate_21
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Tax Components
  /v1/taxes/component/{taxComponentId}:
    get:
      description: Retrieve Tax Component
      operationId: retrieveTaxComponent
      parameters:
      - description: taxComponentId
        in: path
        name: taxComponentId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTaxesComponentsResponse'
          description: OK
      summary: Retrieve Tax Component
      tags:
      - Tax Components
    put:
      description: Updates Tax component. Debit and credit account details cannot
        be modified. All the future tax components would be replaced with the new
        percentage.
      operationId: updateTaxCompoent
      parameters:
      - description: taxComponentId
        in: path
        name: taxComponentId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutTaxesComponentsTaxComponentIdRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutTaxesComponentsTaxComponentIdResponse'
          description: OK
      summary: Update Tax Component
      tags:
      - Tax Components
  /v1/taxes/group:
    get:
      description: List Tax Group
      operationId: retrieveAllTaxGroups
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetTaxesGroupResponse'
          description: OK
      summary: List Tax Group
      tags:
      - Tax Group
    post:
      description: |-
        Create a new Tax Group
        Mandatory Fields: name and taxComponents
        Mandatory Fields in taxComponents: taxComponentId
        Optional Fields in taxComponents: id, startDate and endDate
      operationId: createTaxGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostTaxesGroupRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostTaxesGroupResponse'
          description: OK
      summary: Create a new Tax Group
      tags:
      - Tax Group
  /v1/taxes/group/template:
    get:
      operationId: retrieveTemplate_22
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Tax Group
  /v1/taxes/group/{taxGroupId}:
    get:
      description: Retrieve Tax Group
      operationId: retrieveTaxGroup
      parameters:
      - description: taxGroupId
        in: path
        name: taxGroupId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTaxesGroupResponse'
          description: OK
      summary: Retrieve Tax Group
      tags:
      - Tax Group
    put:
      description: Updates Tax Group. Only end date can be up-datable and can insert
        new tax components.
      operationId: updateTaxGroup
      parameters:
      - description: taxGroupId
        in: path
        name: taxGroupId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutTaxesGroupTaxGroupIdRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutTaxesGroupTaxGroupIdResponse'
          description: OK
      summary: Update Tax Group
      tags:
      - Tax Group
  /v1/tellers:
    get:
      description: Retrieves list tellers
      operationId: getTellerData
      parameters:
      - description: officeId
        in: query
        name: officeId
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetTellersResponse'
          description: OK
      summary: List all tellers
      tags:
      - Teller Cash Management
    post:
      description: |-
        Mandatory Fields
        Teller name, OfficeId, Description, Start Date, Status
        Optional Fields
        End Date
      operationId: createTeller
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostTellersRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostTellersResponse'
          description: OK
      summary: Create teller
      tags:
      - Teller Cash Management
  /v1/tellers/{tellerId}:
    delete:
      operationId: deleteTeller
      parameters:
      - description: tellerId
        in: path
        name: tellerId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Teller Cash Management
    get:
      operationId: findTeller
      parameters:
      - description: tellerId
        in: path
        name: tellerId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTellersResponse'
          description: OK
      summary: Retrieve tellers
      tags:
      - Teller Cash Management
    put:
      operationId: updateTeller
      parameters:
      - description: tellerId
        in: path
        name: tellerId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutTellersRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutTellersResponse'
          description: OK
      summary: Update teller
      tags:
      - Teller Cash Management
  /v1/tellers/{tellerId}/cashiers:
    get:
      operationId: getCashierData_1
      parameters:
      - description: tellerId
        in: path
        name: tellerId
        required: true
        schema:
          type: integer
          format: int64
      - description: fromdate
        in: query
        name: fromdate
        schema:
          type: string
      - description: todate
        in: query
        name: todate
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTellersTellerIdCashiersResponse'
          description: OK
      summary: List Cashiers
      tags:
      - Teller Cash Management
    post:
      description: "Mandatory Fields: \nCashier/staff, Fromm Date, To Date, Full Day\
        \ or From time and To time\n\n\n\nOptional Fields: \nDescription/Notes"
      operationId: createCashier
      parameters:
      - description: tellerId
        in: path
        name: tellerId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostTellersTellerIdCashiersRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostTellersTellerIdCashiersResponse'
          description: OK
      summary: Create Cashiers
      tags:
      - Teller Cash Management
  /v1/tellers/{tellerId}/cashiers/template:
    get:
      operationId: getCashierTemplate
      parameters:
      - description: tellerId
        in: path
        name: tellerId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTellersTellerIdCashiersTemplateResponse'
          description: OK
      summary: Find Cashiers
      tags:
      - Teller Cash Management
  /v1/tellers/{tellerId}/cashiers/{cashierId}:
    delete:
      operationId: deleteCashier
      parameters:
      - description: tellerId
        in: path
        name: tellerId
        required: true
        schema:
          type: integer
          format: int64
      - description: cashierId
        in: path
        name: cashierId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTellersTellerIdCashiersCashierIdResponse'
          description: OK
      summary: Delete Cashier
      tags:
      - Teller Cash Management
    get:
      operationId: findCashierData
      parameters:
      - description: tellerId
        in: path
        name: tellerId
        required: true
        schema:
          type: integer
          format: int64
      - description: cashierId
        in: path
        name: cashierId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTellersTellerIdCashiersCashierIdResponse'
          description: OK
      summary: Retrieve a cashier
      tags:
      - Teller Cash Management
    put:
      operationId: updateCashier
      parameters:
      - description: tellerId
        in: path
        name: tellerId
        required: true
        schema:
          type: integer
          format: int64
      - description: cashierId
        in: path
        name: cashierId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutTellersTellerIdCashiersCashierIdRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutTellersTellerIdCashiersCashierIdResponse'
          description: OK
      summary: Update Cashier
      tags:
      - Teller Cash Management
  /v1/tellers/{tellerId}/cashiers/{cashierId}/allocate:
    post:
      description: "Mandatory Fields: \nDate, Amount, Currency, Notes/Comments"
      operationId: allocateCashToCashier
      parameters:
      - description: tellerId
        in: path
        name: tellerId
        required: true
        schema:
          type: integer
          format: int64
      - description: cashierId
        in: path
        name: cashierId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostTellersTellerIdCashiersCashierIdAllocateRequest'
          text/html:
            schema:
              $ref: '#/components/schemas/PostTellersTellerIdCashiersCashierIdAllocateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostTellersTellerIdCashiersCashierIdAllocateResponse'
          description: OK
      summary: Allocate Cash To Cashier
      tags:
      - Teller Cash Management
  /v1/tellers/{tellerId}/cashiers/{cashierId}/settle:
    post:
      description: |-
        Mandatory Fields
        Date, Amount, Currency, Notes/Comments
      operationId: settleCashFromCashier
      parameters:
      - description: tellerId
        in: path
        name: tellerId
        required: true
        schema:
          type: integer
          format: int64
      - description: cashierId
        in: path
        name: cashierId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostTellersTellerIdCashiersCashierIdSettleRequest'
          text/html:
            schema:
              $ref: '#/components/schemas/PostTellersTellerIdCashiersCashierIdSettleRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostTellersTellerIdCashiersCashierIdSettleResponse'
          description: OK
      summary: Settle Cash From Cashier
      tags:
      - Teller Cash Management
  /v1/tellers/{tellerId}/cashiers/{cashierId}/summaryandtransactions:
    get:
      operationId: getTransactionsWtihSummaryForCashier
      parameters:
      - description: tellerId
        in: path
        name: tellerId
        required: true
        schema:
          type: integer
          format: int64
      - description: cashierId
        in: path
        name: cashierId
        required: true
        schema:
          type: integer
          format: int64
      - description: currencyCode
        in: query
        name: currencyCode
        schema:
          type: string
      - description: offset
        in: query
        name: offset
        schema:
          type: integer
          format: int32
      - description: limit
        in: query
        name: limit
        schema:
          type: integer
          format: int32
      - description: orderBy
        in: query
        name: orderBy
        schema:
          type: string
      - description: sortOrder
        in: query
        name: sortOrder
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse'
          description: OK
      summary: Transactions Wtih Summary For Cashier
      tags:
      - Teller Cash Management
  /v1/tellers/{tellerId}/cashiers/{cashierId}/transactions:
    get:
      operationId: getTransactionsForCashier
      parameters:
      - description: tellerId
        in: path
        name: tellerId
        required: true
        schema:
          type: integer
          format: int64
      - description: cashierId
        in: path
        name: cashierId
        required: true
        schema:
          type: integer
          format: int64
      - description: currencyCode
        in: query
        name: currencyCode
        schema:
          type: string
      - description: offset
        in: query
        name: offset
        schema:
          type: integer
          format: int32
      - description: limit
        in: query
        name: limit
        schema:
          type: integer
          format: int32
      - description: orderBy
        in: query
        name: orderBy
        schema:
          type: string
      - description: sortOrder
        in: query
        name: sortOrder
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetTellersTellerIdCashiersCashiersIdTransactionsResponse'
          description: OK
      summary: Retrieve Cashier Transaction
      tags:
      - Teller Cash Management
  /v1/tellers/{tellerId}/cashiers/{cashierId}/transactions/template:
    get:
      operationId: getCashierTxnTemplate
      parameters:
      - description: tellerId
        in: path
        name: tellerId
        required: true
        schema:
          type: integer
          format: int64
      - description: cashierId
        in: path
        name: cashierId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTellersTellerIdCashiersCashiersIdTransactionsTemplateResponse'
          description: OK
      summary: Retrieve Cashier Transaction Template
      tags:
      - Teller Cash Management
  /v1/tellers/{tellerId}/journals:
    get:
      operationId: getJournalData
      parameters:
      - description: tellerId
        in: path
        name: tellerId
        required: true
        schema:
          type: integer
          format: int64
      - description: cashierId
        in: query
        name: cashierId
        schema:
          type: integer
          format: int64
      - description: dateRange
        in: query
        name: dateRange
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Teller Cash Management
  /v1/tellers/{tellerId}/transactions:
    get:
      operationId: getTransactionData
      parameters:
      - description: tellerId
        in: path
        name: tellerId
        required: true
        schema:
          type: integer
          format: int64
      - description: dateRange
        in: query
        name: dateRange
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Teller Cash Management
  /v1/tellers/{tellerId}/transactions/{transactionId}:
    get:
      operationId: findTransactionData
      parameters:
      - description: tellerId
        in: path
        name: tellerId
        required: true
        schema:
          type: integer
          format: int64
      - description: transactionId
        in: path
        name: transactionId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Teller Cash Management
  /v1/templates:
    get:
      description: |-
        Example Requests:

        templates

        It is also possible to get specific UGDs by entity and type:

        templates?type=0&entity=0
        [Entity: Id]





        client: 0, loan: 1

        [Type: Id]



        Document: 0, E-Mail (not yet): 1,  SMS: 2
      operationId: retrieveAll_40
      parameters:
      - description: typeId
        in: query
        name: typeId
        schema:
          type: integer
          format: int32
          default: -1
      - description: entityId
        in: query
        name: entityId
        schema:
          type: integer
          format: int32
          default: -1
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTemplatesResponse'
          description: OK
      summary: Retrieve all UGDs
      tags:
      - User Generated Documents
    post:
      description: |-
        Adds a new UGD.

        Mandatory Fields
        name



        Example Requests:

        templates/1
      operationId: createTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostTemplatesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostTemplatesResponse'
          description: OK
      summary: Add a UGD
      tags:
      - User Generated Documents
  /v1/templates/template:
    get:
      description: |-
        This is a convenience resource. It can be useful when building maintenance user interface screens for UGDs. The UGD data returned consists of any or all of:

        ARGUMENTS
        name String entity String type String text String optional mappers Mapper optional
        Example Request:

        templates/template
      operationId: template_20
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTemplatesTemplateResponse'
          description: OK
      summary: Retrieve UGD Details Template
      tags:
      - User Generated Documents
  /v1/templates/{templateId}:
    delete:
      operationId: deleteTemplate
      parameters:
      - description: templateId
        in: path
        name: templateId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTemplatesTemplateIdResponse'
          description: OK
      summary: Delete a UGD
      tags:
      - User Generated Documents
    get:
      description: |-
        Example Requests:

        templates/1
      operationId: retrieveOne_30
      parameters:
      - description: templateId
        in: path
        name: templateId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTemplatesTemplateIdResponse'
          description: OK
      summary: Retrieve a UGD
      tags:
      - User Generated Documents
    post:
      operationId: mergeTemplate
      parameters:
      - in: path
        name: templateId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          content:
            text/html:
              schema:
                type: string
          description: default response
      tags:
      - User Generated Documents
    put:
      operationId: saveTemplate
      parameters:
      - description: templateId
        in: path
        name: templateId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutTemplatesTemplateIdRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutTemplatesTemplateIdResponse'
          description: OK
      summary: Update a UGD
      tags:
      - User Generated Documents
  /v1/templates/{templateId}/template:
    get:
      operationId: getTemplateByTemplate
      parameters:
      - in: path
        name: templateId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - User Generated Documents
  /v1/twofactor:
    get:
      operationId: getOTPDeliveryMethods
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Two Factor
    post:
      operationId: requestToken
      parameters:
      - in: query
        name: deliveryMethod
        schema:
          type: string
      - in: query
        name: extendedToken
        schema:
          type: boolean
          default: false
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Two Factor
  /v1/twofactor/configure:
    get:
      operationId: retrieveAll_9
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
    put:
      operationId: updateConfiguration_3
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
  /v1/twofactor/invalidate:
    post:
      operationId: updateConfiguration_2
      requestBody:
        content:
          '*/*':
            schema:
              type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Two Factor
  /v1/twofactor/validate:
    post:
      operationId: validate
      parameters:
      - in: query
        name: token
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Two Factor
  /v1/userdetails:
    get:
      description: checks the Authentication and returns the set roles and permissions
        allowed.
      operationId: fetchAuthenticatedUserData
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserDetailsResponse'
          description: OK
      summary: |
        Fetch authenticated user details
      tags:
      - Fetch authenticated user details
  /v1/users:
    get:
      description: |-
        Example Requests:

        users


        users?fields=id,username,email,officeName
      operationId: retrieveAll_41
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetUsersResponse'
          description: OK
      summary: Retrieve list of users
      tags:
      - Users
    post:
      description: "Adds new application user.\n\nNote: Password information is not\
        \ required (or processed). Password details at present are auto-generated\
        \ and then sent to the email account given (which is why it can take a few\
        \ seconds to complete).\n\nMandatory Fields: \nusername, firstname, lastname,\
        \ email, officeId, roles, sendPasswordToEmail\n\nOptional Fields: \nstaffId,passwordNeverExpires,isSelfServiceUser,clients"
      operationId: create_15
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostUsersRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostUsersResponse'
          description: OK
      summary: Create a User
      tags:
      - Users
  /v1/users/downloadtemplate:
    get:
      operationId: getUserTemplate
      parameters:
      - in: query
        name: officeId
        schema:
          type: integer
          format: int64
      - in: query
        name: staffId
        schema:
          type: integer
          format: int64
      - in: query
        name: dateFormat
        schema:
          type: string
      responses:
        default:
          content:
            application/vnd.ms-excel: {}
          description: default response
      tags:
      - Users
  /v1/users/template:
    get:
      description: |-
        This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:

        Field Defaults
        Allowed description Lists
        Example Request:

        users/template
      operationId: template_22
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUsersTemplateResponse'
          description: OK
      summary: Retrieve User Details Template
      tags:
      - Users
  /v1/users/uploadtemplate:
    post:
      operationId: postUsersTemplate
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadRequest'
        description: Upload users template
      responses:
        default:
          content:
            '*/*':
              schema:
                type: string
          description: default response
      tags:
      - Users
  /v1/users/{userId}:
    delete:
      description: Removes the user and the associated roles and permissions.
      operationId: delete_23
      parameters:
      - description: userId
        in: path
        name: userId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteUsersUserIdResponse'
          description: OK
      summary: Delete a User
      tags:
      - Users
    get:
      description: |-
        Example Requests:

        users/1


        users/1?template=true


        users/1?fields=username,officeName
      operationId: retrieveOne_31
      parameters:
      - description: userId
        in: path
        name: userId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUsersUserIdResponse'
          description: OK
      summary: Retrieve a User
      tags:
      - Users
    put:
      description: When updating a password you must provide the repeatPassword parameter
        also.
      operationId: update_26
      parameters:
      - description: userId
        in: path
        name: userId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutUsersUserIdRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutUsersUserIdResponse'
          description: OK
      summary: Update a User
      tags:
      - Users
  /v1/workingdays:
    get:
      description: |-
        Example Requests:

        workingdays
      operationId: retrieveAll_17
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetWorkingDaysResponse'
          description: OK
      summary: List Working days
      tags:
      - Working days
    put:
      description: |-
        Mandatory Fields
        recurrence,repaymentRescheduleType,extendTermForDailyRepayments,locale
      operationId: update_8
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutWorkingDaysRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutWorkingDaysResponse'
          description: OK
      summary: Update a Working Day
      tags:
      - Working days
  /v1/workingdays/template:
    get:
      description: |-
        This is a convenience resource. It can be useful when building maintenance user interface screens for working days.

        Example Request:

        workingdays/template
      operationId: template_4
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWorkingDaysTemplateResponse'
          description: OK
      summary: Working Days Template
      tags:
      - Working days
  /v1/{entityType}/{entityId}/calendars:
    get:
      operationId: retrieveCalendarsByEntity
      parameters:
      - in: path
        name: entityType
        required: true
        schema:
          type: string
      - in: path
        name: entityId
        required: true
        schema:
          type: integer
          format: int64
      - in: query
        name: calendarType
        schema:
          type: string
          default: all
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Calendar
    post:
      operationId: createCalendar
      parameters:
      - in: path
        name: entityType
        required: true
        schema:
          type: string
      - in: path
        name: entityId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Calendar
  /v1/{entityType}/{entityId}/calendars/template:
    get:
      operationId: retrieveNewCalendarDetails
      parameters:
      - in: path
        name: entityType
        required: true
        schema:
          type: string
      - in: path
        name: entityId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Calendar
  /v1/{entityType}/{entityId}/calendars/{calendarId}:
    delete:
      operationId: deleteCalendar
      parameters:
      - in: path
        name: entityType
        required: true
        schema:
          type: string
      - in: path
        name: entityId
        required: true
        schema:
          type: integer
          format: int64
      - in: path
        name: calendarId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Calendar
    get:
      operationId: retrieveCalendar
      parameters:
      - in: path
        name: calendarId
        required: true
        schema:
          type: integer
          format: int64
      - in: path
        name: entityType
        required: true
        schema:
          type: string
      - in: path
        name: entityId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Calendar
    put:
      operationId: updateCalendar
      parameters:
      - in: path
        name: entityType
        required: true
        schema:
          type: string
      - in: path
        name: entityId
        required: true
        schema:
          type: integer
          format: int64
      - in: path
        name: calendarId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Calendar
  /v1/{entityType}/{entityId}/documents:
    get:
      description: |-
        Example Requests:

        clients/1/documents

        client_identifiers/1/documents

        loans/1/documents?fields=name,description
      operationId: retrieveAllDocuments
      parameters:
      - description: entityType
        in: path
        name: entityType
        required: true
        schema:
          type: string
      - description: entityId
        in: path
        name: entityId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetEntityTypeEntityIdDocumentsResponse'
          description: OK
      summary: List documents
      tags:
      - Documents
    post:
      description: "Note: A document is created using a Multi-part form upload \n\n\
        Body Parts\n\nname : \nName or summary of the document\n\ndescription : \n\
        Description of the document\n\nfile : \nThe file to be uploaded\n\nMandatory\
        \ Fields : \nfile and description"
      operationId: createDocument
      parameters:
      - description: entityType
        in: path
        name: entityType
        required: true
        schema:
          type: string
      - description: entityId
        in: path
        name: entityId
        required: true
        schema:
          type: integer
          format: int64
      - description: Content-Length
        in: header
        name: Content-Length
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentUploadRequest'
        description: Create document
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostEntityTypeEntityIdDocumentsResponse'
          description: Not Shown (multi-part form data)
      summary: Create a Document
      tags:
      - Documents
  /v1/{entityType}/{entityId}/documents/{documentId}:
    delete:
      operationId: deleteDocument
      parameters:
      - description: entityType
        in: path
        name: entityType
        required: true
        schema:
          type: string
      - description: entityId
        in: path
        name: entityId
        required: true
        schema:
          type: integer
          format: int64
      - description: documentId
        in: path
        name: documentId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteEntityTypeEntityIdDocumentsResponse'
          description: OK
      summary: Remove a Document
      tags:
      - Documents
    get:
      description: |-
        Example Requests:

        clients/1/documents/1


        loans/1/documents/1


        client_identifiers/1/documents/1?fields=name,description
      operationId: getDocument
      parameters:
      - description: entityType
        in: path
        name: entityType
        required: true
        schema:
          type: string
      - description: entityId
        in: path
        name: entityId
        required: true
        schema:
          type: integer
          format: int64
      - description: documentId
        in: path
        name: documentId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEntityTypeEntityIdDocumentsResponse'
          description: OK
      summary: Retrieve a Document
      tags:
      - Documents
    put:
      description: "Note: A document is updated using a Multi-part form upload \n\
        Body Parts\nname\nName or summary of the document\ndescription\nDescription\
        \ of the document\nfile\nThe file to be uploaded"
      operationId: updateDocument
      parameters:
      - description: entityType
        in: path
        name: entityType
        required: true
        schema:
          type: string
      - description: entityId
        in: path
        name: entityId
        required: true
        schema:
          type: integer
          format: int64
      - description: documentId
        in: path
        name: documentId
        required: true
        schema:
          type: integer
          format: int64
      - description: Content-Length
        in: header
        name: Content-Length
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentUploadRequest'
        description: Update document
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutEntityTypeEntityIdDocumentsResponse'
          description: Not Shown (multi-part form data)
      summary: Update a Document
      tags:
      - Documents
  /v1/{entityType}/{entityId}/documents/{documentId}/attachment:
    get:
      description: |-
        Request used to download the file associated with the document

        Example Requests:

        clients/1/documents/1/attachment


        loans/1/documents/1/attachment
      operationId: downloadFile
      parameters:
      - description: entityType
        in: path
        name: entityType
        required: true
        schema:
          type: string
      - description: entityId
        in: path
        name: entityId
        required: true
        schema:
          type: integer
          format: int64
      - description: documentId
        in: path
        name: documentId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "Not Shown: The corresponding Binary file"
      summary: Retrieve Binary File associated with Document
      tags:
      - Documents
  /v1/{entityType}/{entityId}/meetings:
    get:
      operationId: retrieveMeetings
      parameters:
      - in: path
        name: entityType
        required: true
        schema:
          type: string
      - in: path
        name: entityId
        required: true
        schema:
          type: integer
          format: int64
      - in: query
        name: limit
        schema:
          type: integer
          format: int32
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Meetings
    post:
      operationId: createMeeting
      parameters:
      - in: path
        name: entityType
        required: true
        schema:
          type: string
      - in: path
        name: entityId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Meetings
  /v1/{entityType}/{entityId}/meetings/template:
    get:
      operationId: template_11
      parameters:
      - in: path
        name: entityType
        required: true
        schema:
          type: string
      - in: path
        name: entityId
        required: true
        schema:
          type: integer
          format: int64
      - in: query
        name: calendarId
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Meetings
  /v1/{entityType}/{entityId}/meetings/{meetingId}:
    delete:
      operationId: deleteMeeting
      parameters:
      - in: path
        name: entityType
        required: true
        schema:
          type: string
      - in: path
        name: entityId
        required: true
        schema:
          type: integer
          format: int64
      - in: path
        name: meetingId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Meetings
    get:
      operationId: retrieveMeeting
      parameters:
      - in: path
        name: meetingId
        required: true
        schema:
          type: integer
          format: int64
      - in: path
        name: entityType
        required: true
        schema:
          type: string
      - in: path
        name: entityId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Meetings
    post:
      operationId: performMeetingCommands
      parameters:
      - in: path
        name: entityType
        required: true
        schema:
          type: string
      - in: path
        name: entityId
        required: true
        schema:
          type: integer
          format: int64
      - in: path
        name: meetingId
        required: true
        schema:
          type: integer
          format: int64
      - in: query
        name: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Meetings
    put:
      operationId: updateMeeting
      parameters:
      - in: path
        name: entityType
        required: true
        schema:
          type: string
      - in: path
        name: entityId
        required: true
        schema:
          type: integer
          format: int64
      - in: path
        name: meetingId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Meetings
  /v1/{entity}/{entityId}/images:
    delete:
      operationId: deleteClientImage
      parameters:
      - in: path
        name: entity
        required: true
        schema:
          type: string
      - in: path
        name: entityId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
    get:
      operationId: retrieveImage
      parameters:
      - in: path
        name: entity
        required: true
        schema:
          type: string
      - in: path
        name: entityId
        required: true
        schema:
          type: integer
          format: int64
      - in: query
        name: maxWidth
        schema:
          type: integer
          format: int32
      - in: query
        name: maxHeight
        schema:
          type: integer
          format: int32
      - in: query
        name: output
        schema:
          type: string
      - in: header
        name: Accept
        schema:
          type: string
      responses:
        default:
          content:
            '*/*': {}
          description: default response
    post:
      operationId: addNewClientImage_1
      parameters:
      - in: path
        name: entity
        required: true
        schema:
          type: string
      - in: path
        name: entityId
        required: true
        schema:
          type: integer
          format: int64
      - in: header
        name: Content-Length
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadRequest'
        description: Upload new client image
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
    put:
      operationId: updateClientImage_1
      parameters:
      - in: path
        name: entity
        required: true
        schema:
          type: string
      - in: path
        name: entityId
        required: true
        schema:
          type: integer
          format: int64
      - in: header
        name: Content-Length
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadRequest'
        description: Update client image
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
  /v1/{resourceType}/{resourceId}/notes:
    get:
      description: |-
        Retrieves a Resource's Notes

        Note: Notes are returned in descending createOn order.

        Example Requests:

        clients/2/notes


        groups/2/notes?fields=note,createdOn,createdByUsername
      operationId: retrieveNotesByResource
      parameters:
      - description: resourceType
        in: path
        name: resourceType
        required: true
        schema:
          type: string
      - description: resourceId
        in: path
        name: resourceId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetResourceTypeResourceIdNotesResponse'
          description: OK
      summary: Retrieve a Resource's description
      tags:
      - Notes
    post:
      description: |-
        Adds a new note to a supported resource.

        Example Requests:

        clients/1/notes


        groups/1/notes
      operationId: addNewNote
      parameters:
      - description: resourceType
        in: path
        name: resourceType
        required: true
        schema:
          type: string
      - description: resourceId
        in: path
        name: resourceId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostResourceTypeResourceIdNotesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostResourceTypeResourceIdNotesResponse'
          description: OK
      summary: Add a Resource Note
      tags:
      - Notes
  /v1/{resourceType}/{resourceId}/notes/{noteId}:
    delete:
      description: Deletes a Resource Note
      operationId: deleteNote
      parameters:
      - description: resourceType
        in: path
        name: resourceType
        required: true
        schema:
          type: string
      - description: resourceId
        in: path
        name: resourceId
        required: true
        schema:
          type: integer
          format: int64
      - description: noteId
        in: path
        name: noteId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResourceTypeResourceIdNotesNoteIdResponse'
          description: OK
      summary: Delete a Resource Note
      tags:
      - Notes
    get:
      description: |-
        Retrieves a Resource Note

        Example Requests:

        clients/1/notes/76


        groups/1/notes/20


        clients/1/notes/76?fields=note,createdOn,createdByUsername


        groups/1/notes/20?fields=note,createdOn,createdByUsername
      operationId: retrieveNote
      parameters:
      - description: resourceType
        in: path
        name: resourceType
        required: true
        schema:
          type: string
      - description: resourceId
        in: path
        name: resourceId
        required: true
        schema:
          type: integer
          format: int64
      - description: noteId
        in: path
        name: noteId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetResourceTypeResourceIdNotesNoteIdResponse'
          description: OK
      summary: Retrieve a Resource Note
      tags:
      - Notes
    put:
      description: Updates a Resource Note
      operationId: updateNote
      parameters:
      - description: resourceType
        in: path
        name: resourceType
        required: true
        schema:
          type: string
      - description: resourceId
        in: path
        name: resourceId
        required: true
        schema:
          type: integer
          format: int64
      - description: noteId
        in: path
        name: noteId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutResourceTypeResourceIdNotesNoteIdRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutResourceTypeResourceIdNotesNoteIdResponse'
          description: OK
      summary: Update a Resource Note
      tags:
      - Notes
  /v2/clients/search:
    post:
      operationId: searchByText
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PagedRequestClientTextSearch'
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageClientSearchData'
          description: default response
      summary: Search Clients by text
      tags:
      - ClientSearchV2
components:
  schemas:
    AccountTransferData:
      type: object
      properties:
        currency:
          $ref: '#/components/schemas/CurrencyData'
        fromAccount:
          $ref: '#/components/schemas/PortfolioAccountData'
        fromAccountOptions:
          type: array
          items:
            $ref: '#/components/schemas/PortfolioAccountData'
        fromAccountType:
          $ref: '#/components/schemas/EnumOptionData'
        fromAccountTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
        fromClient:
          $ref: '#/components/schemas/ClientData'
        fromClientOptions:
          type: array
          items:
            $ref: '#/components/schemas/ClientData'
        fromOffice:
          $ref: '#/components/schemas/OfficeData'
        fromOfficeOptions:
          type: array
          items:
            $ref: '#/components/schemas/OfficeData'
        id:
          type: integer
          format: int64
        reversed:
          type: boolean
        toAccount:
          $ref: '#/components/schemas/PortfolioAccountData'
        toAccountOptions:
          type: array
          items:
            $ref: '#/components/schemas/PortfolioAccountData'
        toAccountType:
          $ref: '#/components/schemas/EnumOptionData'
        toAccountTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
        toClient:
          $ref: '#/components/schemas/ClientData'
        toClientOptions:
          type: array
          items:
            $ref: '#/components/schemas/ClientData'
        toOffice:
          $ref: '#/components/schemas/OfficeData'
        toOfficeOptions:
          type: array
          items:
            $ref: '#/components/schemas/OfficeData'
        transferAmount:
          type: number
        transferDate:
          type: string
          format: date
        transferDescription:
          type: string
    AccountingRuleData:
      type: object
      properties:
        allowMultipleCreditEntries:
          type: boolean
        allowMultipleDebitEntries:
          type: boolean
        allowedAccounts:
          type: array
          items:
            $ref: '#/components/schemas/GLAccountData'
        allowedCreditTagOptions:
          type: array
          items:
            $ref: '#/components/schemas/CodeValueData'
        allowedDebitTagOptions:
          type: array
          items:
            $ref: '#/components/schemas/CodeValueData'
        allowedOffices:
          type: array
          items:
            $ref: '#/components/schemas/OfficeData'
        creditAccounts:
          type: array
          items:
            $ref: '#/components/schemas/GLAccountDataForLookup'
        creditTags:
          type: array
          items:
            $ref: '#/components/schemas/AccountingTagRuleData'
        debitAccounts:
          type: array
          items:
            $ref: '#/components/schemas/GLAccountDataForLookup'
        debitTags:
          type: array
          items:
            $ref: '#/components/schemas/AccountingTagRuleData'
        description:
          type: string
        id:
          type: integer
          format: int64
        name:
          type: string
        officeId:
          type: integer
          format: int64
        officeName:
          type: string
        systemDefined:
          type: boolean
    AccountingTagRuleData:
      type: object
      properties:
        id:
          type: integer
          format: int64
        tag:
          $ref: '#/components/schemas/CodeValueData'
        transactionType:
          $ref: '#/components/schemas/EnumOptionData'
    AddressData:
      type: object
    AdvancedPaymentData:
      type: object
      example: []
      properties:
        futureInstallmentAllocationRule:
          type: string
          example: NEXT_INSTALLMENT
        paymentAllocationOrder:
          type: array
          example: []
          items:
            $ref: '#/components/schemas/PaymentAllocationOrder'
        transactionType:
          type: string
          example: DEFAULT
    AdvancedQueryData:
      type: object
      properties:
        columnFilters:
          type: array
          items:
            $ref: '#/components/schemas/ColumnFilterData'
        nonNullFilters:
          type: array
          items:
            $ref: '#/components/schemas/ColumnFilterData'
        nonNullResultColumns:
          type: array
          items:
            type: string
        resultColumns:
          type: array
          items:
            type: string
    AdvancedQueryRequest:
      type: object
      properties:
        baseQuery:
          $ref: '#/components/schemas/AdvancedQueryData'
        datatableQueries:
          type: array
          items:
            $ref: '#/components/schemas/TableQueryData'
    AllowAttributeOverrides:
      type: object
      properties:
        amortizationType:
          type: boolean
          example: true
        graceOnArrearsAgeing:
          type: boolean
          example: true
        graceOnPrincipalAndInterestPayment:
          type: boolean
          example: true
        inArrearsTolerance:
          type: boolean
          example: true
        interestCalculationPeriodType:
          type: boolean
          example: true
        interestType:
          type: boolean
          example: true
        repaymentEvery:
          type: boolean
          example: true
        transactionProcessingStrategyCode:
          type: boolean
          example: true
    AppUser:
      type: object
      properties:
        accountNonExpired:
          type: boolean
        accountNonLocked:
          type: boolean
        appUserClientMappings:
          type: array
          items:
            $ref: '#/components/schemas/AppUserClientMapping'
          uniqueItems: true
        authorities:
          type: array
          items:
            $ref: '#/components/schemas/GrantedAuthority'
        bypassUser:
          type: boolean
        checkerSuperUser:
          type: boolean
        credentialsNonExpired:
          type: boolean
        deleted:
          type: boolean
        displayName:
          type: string
        email:
          type: string
        enabled:
          type: boolean
        firstname:
          type: string
        id:
          type: integer
          format: int64
        lastTimePasswordUpdated:
          type: string
          format: date
        lastname:
          type: string
        new:
          type: boolean
        notEnabled:
          type: boolean
        office:
          $ref: '#/components/schemas/Office'
        password:
          type: string
        passwordNeverExpires:
          type: boolean
        roles:
          type: array
          items:
            $ref: '#/components/schemas/Role'
          uniqueItems: true
        selfServiceUser:
          type: boolean
        staff:
          $ref: '#/components/schemas/Staff'
        staffDisplayName:
          type: string
        staffId:
          type: integer
          format: int64
        systemUser:
          type: boolean
        username:
          type: string
    AppUserClientMapping:
      type: object
      properties:
        appUser:
          $ref: '#/components/schemas/AppUser'
        client:
          $ref: '#/components/schemas/Client'
        id:
          type: integer
          format: int64
        new:
          type: boolean
    AppUserData:
      type: object
      properties:
        clients:
          type: array
          items:
            $ref: '#/components/schemas/ClientData'
          uniqueItems: true
          writeOnly: true
        rowIndex:
          type: integer
          format: int32
        selfServiceUser:
          type: boolean
    BatchRequest:
      type: object
      properties:
        body:
          type: string
        headers:
          type: array
          items:
            $ref: '#/components/schemas/Header'
          uniqueItems: true
        method:
          type: string
        reference:
          type: integer
          format: int64
        relativeUrl:
          type: string
        requestId:
          type: integer
          format: int64
    BatchResponse:
      type: object
      properties:
        body:
          type: string
        headers:
          type: array
          items:
            $ref: '#/components/schemas/Header'
          uniqueItems: true
        requestId:
          type: integer
          format: int64
        statusCode:
          type: integer
          format: int32
    BodyPart:
      type: object
      properties:
        contentDisposition:
          $ref: '#/components/schemas/ContentDisposition'
        entity:
          type: object
        headers:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          properties:
            empty:
              type: boolean
        mediaType:
          $ref: '#/components/schemas/MediaType'
        messageBodyWorkers:
          $ref: '#/components/schemas/MessageBodyWorkers'
        parameterizedHeaders:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ParameterizedHeader'
          properties:
            empty:
              type: boolean
        parent:
          $ref: '#/components/schemas/MultiPart'
        providers:
          $ref: '#/components/schemas/Providers'
    BusinessDateRequest:
      type: object
      description: BusinessDateRequest
      properties:
        date:
          type: string
          example: 2015-02-15
        dateFormat:
          type: string
          example: yyyy-MM-dd
        locale:
          type: string
          example: en
        type:
          type: string
          example: COB_DATE
    BusinessDateResponse:
      type: object
      description: BusinessDateResponse
      properties:
        date:
          type: string
          format: date
        description:
          type: string
          example: COB date
        type:
          type: string
          example: COB_DATE
    BusinessStep:
      type: object
      description: BusinessStep
      properties:
        order:
          type: integer
          format: int64
          example: 1
        stepName:
          type: string
          example: APPLY_PENALTY_FOR_OVERDUE_LOANS
    CalendarData:
      type: object
      properties:
        calendarInstanceId:
          type: integer
          format: int64
        calendarTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
        centerId:
          type: string
        createdByUserId:
          type: integer
          format: int64
        createdByUsername:
          type: string
        createdDate:
          type: string
          format: date-time
        dateFormat:
          type: string
        description:
          type: string
        duration:
          type: integer
          format: int32
        endDate:
          type: string
          format: date
        entityId:
          type: integer
          format: int64
        entityType:
          $ref: '#/components/schemas/EnumOptionData'
        entityTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
        firstReminder:
          type: integer
          format: int32
        frequency:
          $ref: '#/components/schemas/EnumOptionData'
        frequencyNthDayTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
        frequencyOptions:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
        humanReadable:
          type: string
        id:
          type: integer
          format: int64
        interval:
          type: integer
          format: int32
        lastUpdatedByUserId:
          type: integer
          format: int64
        lastUpdatedByUsername:
          type: string
        lastUpdatedDate:
          type: string
          format: date-time
        locale:
          type: string
        location:
          type: string
        meetingTime:
          $ref: '#/components/schemas/LocalTime'
        nextTenRecurringDates:
          type: array
          items:
            type: string
            format: date
        recentEligibleMeetingDate:
          type: string
          format: date
        recurrence:
          type: string
        recurringDates:
          type: array
          items:
            type: string
            format: date
        remindBy:
          $ref: '#/components/schemas/EnumOptionData'
        remindByOptions:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
        repeating:
          type: boolean
        repeatsOnDay:
          $ref: '#/components/schemas/EnumOptionData'
        repeatsOnDayOfMonth:
          type: integer
          format: int32
        repeatsOnDayOptions:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
        repeatsOnNthDayOfMonth:
          $ref: '#/components/schemas/EnumOptionData'
        rowIndex:
          type: integer
          format: int32
        secondReminder:
          type: integer
          format: int32
        startDate:
          type: string
          format: date
        title:
          type: string
        type:
          $ref: '#/components/schemas/EnumOptionData'
        typeId:
          type: string
    CashierData:
      type: object
      properties:
        description:
          type: string
        endDate:
          type: string
          format: date
        endTime:
          type: string
        id:
          type: integer
          format: int64
        isFullDay:
          type: boolean
        officeId:
          type: integer
          format: int64
        officeName:
          type: string
        staffId:
          type: integer
          format: int64
        staffName:
          type: string
        staffOptions:
          type: array
          items:
            $ref: '#/components/schemas/StaffData'
        startDate:
          type: string
          format: date
        startTime:
          type: string
        tellerId:
          type: integer
          format: int64
        tellerName:
          type: string
    CashierTransactionData:
      type: object
      properties:
        cashierData:
          $ref: '#/components/schemas/CashierData'
        cashierId:
          type: integer
          format: int64
        cashierName:
          type: string
        createdDate:
          type: string
          format: date-time
        currencyOptions:
          type: array
          items:
            $ref: '#/components/schemas/CurrencyData'
        endDate:
          type: string
          format: date
        entityId:
          type: integer
          format: int64
        entityType:
          type: string
        id:
          type: integer
          format: int64
        officeId:
          type: integer
          format: int64
        officeName:
          type: string
        startDate:
          type: string
          format: date
        tellerId:
          type: integer
          format: int64
        tellerName:
          type: string
        txnAmount:
          type: number
        txnDate:
          type: string
          format: date
        txnNote:
          type: string
        txnType:
          $ref: '#/components/schemas/CashierTxnType'
    CashierTxnType:
      type: object
      properties:
        id:
          type: integer
          format: int32
        value:
          type: string
    CenterData:
      type: object
      properties:
        accountNo:
          type: string
        collectionMeetingCalendar:
          $ref: '#/components/schemas/CalendarData'
        datatables:
          type: array
          items:
            $ref: '#/components/schemas/DatatableData'
          writeOnly: true
        hierarchy:
          type: string
        id:
          type: integer
          format: int64
        name:
          type: string
        officeName:
          type: string
        rowIndex:
          type: integer
          format: int32
        staffName:
          type: string
    ChangeInstanceModeRequest:
      type: object
      description: ChangeInstanceModeRequest
      properties:
        batchManagerEnabled:
          type: boolean
          example: true
        batchWorkerEnabled:
          type: boolean
          example: true
        readEnabled:
          type: boolean
          example: true
        writeEnabled:
          type: boolean
          example: true
      required:
      - batchManagerEnabled
      - batchWorkerEnabled
      - readEnabled
      - writeEnabled
    Charge:
      type: object
      properties:
        account:
          $ref: '#/components/schemas/GLAccount'
        active:
          type: boolean
        allowedClientChargeCalculationType:
          type: boolean
        allowedClientChargeTime:
          type: boolean
        allowedLoanChargeTime:
          type: boolean
        allowedSavingsChargeCalculationType:
          type: boolean
        allowedSavingsChargeTime:
          type: boolean
        amount:
          type: number
        annualFee:
          type: boolean
        chargeCalculation:
          type: integer
          format: int32
        chargePaymentMode:
          type: integer
          format: int32
        chargeTimeType:
          type: integer
          format: int32
        clientCharge:
          type: boolean
        currencyCode:
          type: string
        deleted:
          type: boolean
        disbursementCharge:
          type: boolean
        enableFreeWithdrawal:
          type: boolean
        enablePaymentType:
          type: boolean
        feeInterval:
          type: integer
          format: int32
        feeOnMonthDay:
          type: object
          properties:
            dayOfMonth:
              type: integer
              format: int32
            month:
              type: string
              enum:
              - JANUARY
              - FEBRUARY
              - MARCH
              - APRIL
              - MAY
              - JUNE
              - JULY
              - AUGUST
              - SEPTEMBER
              - OCTOBER
              - NOVEMBER
              - DECEMBER
            monthValue:
              type: integer
              format: int32
        frequencyFreeWithdrawalCharge:
          type: integer
          format: int32
        id:
          type: integer
          format: int64
        incomeAccountId:
          type: integer
          format: int64
        loanCharge:
          type: boolean
        maxCap:
          type: number
        minCap:
          type: number
        monthlyFee:
          type: boolean
        name:
          type: string
        new:
          type: boolean
        overdueInstallment:
          type: boolean
        paymentType:
          $ref: '#/components/schemas/PaymentType'
        penalty:
          type: boolean
        percentageOfApprovedAmount:
          type: boolean
        percentageOfDisbursementAmount:
          type: boolean
        restartFrequency:
          type: integer
          format: int32
        restartFrequencyEnum:
          type: integer
          format: int32
        savingsCharge:
          type: boolean
        taxGroup:
          $ref: '#/components/schemas/TaxGroup'
    ChargeData:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
    ChargeToGLAccountMapper:
      type: object
      properties:
        charge:
          $ref: '#/components/schemas/ChargeData'
        incomeAccount:
          $ref: '#/components/schemas/GLAccountData'
    Client:
      type: object
      properties:
        accountNumber:
          type: string
        accountNumberRequiresAutoGeneration:
          type: boolean
        activatedBy:
          $ref: '#/components/schemas/AppUser'
        activationDate:
          type: string
          format: date
        active:
          type: boolean
        clientClassification:
          $ref: '#/components/schemas/CodeValue'
        clientType:
          $ref: '#/components/schemas/CodeValue'
        closed:
          type: boolean
        closedBy:
          $ref: '#/components/schemas/AppUser'
        closureDate:
          type: string
          format: date
        closureReason:
          $ref: '#/components/schemas/CodeValue'
        createdBy:
          type: integer
          format: int64
        createdDate:
          type: string
          format: date-time
        createdDateTime:
          type: string
          format: date-time
        dateOfBirth:
          type: string
          format: date
        displayName:
          type: string
        emailAddress:
          type: string
        externalId:
          $ref: '#/components/schemas/ExternalId'
        firstname:
          type: string
        fullname:
          type: string
        gender:
          $ref: '#/components/schemas/CodeValue'
        groups:
          type: array
          items:
            $ref: '#/components/schemas/Group'
          uniqueItems: true
        id:
          type: integer
          format: int64
        image:
          $ref: '#/components/schemas/Image'
        lastModifiedBy:
          type: integer
          format: int64
        lastModifiedDate:
          type: string
          format: date-time
        lastModifiedDateTime:
          type: string
          format: date-time
        lastname:
          type: string
        legalForm:
          type: integer
          format: int32
        middlename:
          type: string
        mobileNo:
          type: string
        new:
          type: boolean
        notActive:
          type: boolean
        notPending:
          type: boolean
        notStaff:
          type: boolean
        office:
          $ref: '#/components/schemas/Office'
        officeJoiningDate:
          type: string
          format: date
        pending:
          type: boolean
        proposedTransferDate:
          type: string
          format: date
        reactivateDate:
          type: string
          format: date
        reactivatedBy:
          $ref: '#/components/schemas/AppUser'
        rejected:
          type: boolean
        rejectedBy:
          $ref: '#/components/schemas/AppUser'
        rejectedDate:
          type: string
          format: date
        rejectionDate:
          type: string
          format: date
        rejectionReason:
          $ref: '#/components/schemas/CodeValue'
        reopenedBy:
          $ref: '#/components/schemas/AppUser'
        reopenedDate:
          type: string
          format: date
        savingsAccountId:
          type: integer
          format: int64
        savingsProductId:
          type: integer
          format: int64
        staff:
          $ref: '#/components/schemas/Staff'
        status:
          type: integer
          format: int32
        subStatus:
          $ref: '#/components/schemas/CodeValue'
        submittedOnDate:
          type: string
          format: date
        transferInProgress:
          type: boolean
        transferInProgressOrOnHold:
          type: boolean
        transferOnHold:
          type: boolean
        transferToOffice:
          $ref: '#/components/schemas/Office'
        withdrawalDate:
          type: string
          format: date
        withdrawalReason:
          $ref: '#/components/schemas/CodeValue'
        withdrawn:
          type: boolean
        withdrawnBy:
          $ref: '#/components/schemas/AppUser'
      required:
      - createdBy
      - createdDate
      - createdDateTime
      - lastModifiedBy
      - lastModifiedDate
      - lastModifiedDateTime
    ClientCollateralManagementData:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        pctToBase:
          type: number
        quantity:
          type: number
        total:
          type: number
        totalCollateral:
          type: number
        unitPrice:
          type: number
    ClientData:
      type: object
      properties:
        accountNo:
          type: string
        activationDate:
          type: string
          format: date
        active:
          type: boolean
        address:
          type: array
          items:
            $ref: '#/components/schemas/AddressData'
        clientClassification:
          $ref: '#/components/schemas/CodeValueData'
        clientClassificationId:
          type: integer
          format: int64
        clientClassificationOptions:
          type: array
          items:
            $ref: '#/components/schemas/CodeValueData'
        clientCollateralManagements:
          type: array
          items:
            $ref: '#/components/schemas/ClientCollateralManagementData'
          uniqueItems: true
        clientLegalFormOptions:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
        clientNonPersonConstitutionOptions:
          type: array
          items:
            $ref: '#/components/schemas/CodeValueData'
        clientNonPersonDetails:
          $ref: '#/components/schemas/ClientNonPersonData'
        clientNonPersonMainBusinessLineOptions:
          type: array
          items:
            $ref: '#/components/schemas/CodeValueData'
        clientType:
          $ref: '#/components/schemas/CodeValueData'
        clientTypeId:
          type: integer
          format: int64
        clientTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/CodeValueData'
        datatables:
          type: array
          items:
            $ref: '#/components/schemas/DatatableData'
        dateFormat:
          type: string
        dateOfBirth:
          type: string
          format: date
        displayName:
          type: string
        emailAddress:
          type: string
        externalId:
          $ref: '#/components/schemas/ExternalId'
        familyMemberOptions:
          $ref: '#/components/schemas/ClientFamilyMembersData'
        firstname:
          type: string
        fullname:
          type: string
        gender:
          $ref: '#/components/schemas/CodeValueData'
        genderId:
          type: integer
          format: int64
        genderOptions:
          type: array
          items:
            $ref: '#/components/schemas/CodeValueData'
        groups:
          type: array
          items:
            $ref: '#/components/schemas/GroupGeneralData'
        id:
          type: integer
          format: int64
        imageId:
          type: integer
          format: int64
        imagePresent:
          type: boolean
        isAddressEnabled:
          type: boolean
        isStaff:
          type: boolean
        lastname:
          type: string
        legalForm:
          $ref: '#/components/schemas/EnumOptionData'
        legalFormId:
          type: integer
          format: int64
        locale:
          type: string
        middlename:
          type: string
        mobileNo:
          type: string
        narrations:
          type: array
          items:
            $ref: '#/components/schemas/CodeValueData'
        officeId:
          type: integer
          format: int64
        officeName:
          type: string
        officeOptions:
          type: array
          items:
            $ref: '#/components/schemas/OfficeData'
        rowIndex:
          type: integer
          format: int32
        savingAccountOptions:
          type: array
          items:
            $ref: '#/components/schemas/SavingsAccountData'
        savingProductOptions:
          type: array
          items:
            $ref: '#/components/schemas/SavingsProductData'
        savingsAccountId:
          type: integer
          format: int64
        savingsProductId:
          type: integer
          format: int64
        savingsProductName:
          type: string
        staffId:
          type: integer
          format: int64
        staffName:
          type: string
        staffOptions:
          type: array
          items:
            $ref: '#/components/schemas/StaffData'
        status:
          $ref: '#/components/schemas/EnumOptionData'
        subStatus:
          $ref: '#/components/schemas/CodeValueData'
        submittedOnDate:
          type: string
          format: date
        timeline:
          $ref: '#/components/schemas/ClientTimelineData'
        transferToOfficeId:
          type: integer
          format: int64
        transferToOfficeName:
          type: string
    ClientFamilyMembersData:
      type: object
      properties:
        age:
          type: integer
          format: int64
        clientId:
          type: integer
          format: int64
        dateOfBirth:
          type: string
          format: date
        firstName:
          type: string
        gender:
          type: string
        genderId:
          type: integer
          format: int64
        id:
          type: integer
          format: int64
        isDependent:
          type: boolean
        lastName:
          type: string
        maritalStatus:
          type: string
        maritalStatusId:
          type: integer
          format: int64
        middleName:
          type: string
        mobileNumber:
          type: string
        profession:
          type: string
        professionId:
          type: integer
          format: int64
        qualification:
          type: string
        relationship:
          type: string
        relationshipId:
          type: integer
          format: int64
    ClientNonPersonData:
      type: object
    ClientSearchData:
      type: object
      properties:
        accountNumber:
          type: string
        activationDate:
          type: string
          format: date
        createdDate:
          type: string
          format: date-time
        displayName:
          type: string
        externalId:
          $ref: '#/components/schemas/ExternalId'
        id:
          type: integer
          format: int64
        mobileNo:
          type: string
        officeId:
          type: integer
          format: int64
        officeName:
          type: string
        status:
          $ref: '#/components/schemas/EnumOptionData'
    ClientTextSearch:
      type: object
      properties:
        text:
          type: string
    ClientTimelineData:
      type: object
      properties:
        activatedByFirstname:
          type: string
        activatedByLastname:
          type: string
        activatedByUsername:
          type: string
        activatedOnDate:
          type: string
          format: date
        closedByFirstname:
          type: string
        closedByLastname:
          type: string
        closedByUsername:
          type: string
        closedOnDate:
          type: string
          format: date
        submittedByFirstname:
          type: string
        submittedByLastname:
          type: string
        submittedByUsername:
          type: string
        submittedOnDate:
          type: string
          format: date
    Code:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        new:
          type: boolean
        systemDefined:
          type: boolean
        values:
          type: array
          items:
            $ref: '#/components/schemas/CodeValue'
          uniqueItems: true
    CodeValue:
      type: object
      properties:
        active:
          type: boolean
        code:
          $ref: '#/components/schemas/Code'
        description:
          type: string
        id:
          type: integer
          format: int64
        label:
          type: string
        mandatory:
          type: boolean
        new:
          type: boolean
        position:
          type: integer
          format: int32
    CodeValueData:
      type: object
      properties:
        active:
          type: boolean
        description:
          type: string
        id:
          type: integer
          format: int64
        mandatory:
          type: boolean
        name:
          type: string
        position:
          type: integer
          format: int32
    ColumnFilterData:
      type: object
      properties:
        column:
          type: string
        filters:
          type: array
          items:
            $ref: '#/components/schemas/FilterData'
    CommandProcessingResult:
      type: object
      properties:
        changes:
          type: object
          additionalProperties:
            type: object
        clientId:
          type: integer
          format: int64
        commandId:
          type: integer
          format: int64
        creditBureauReportData:
          type: object
          additionalProperties:
            type: object
        glimId:
          type: integer
          format: int64
        groupId:
          type: integer
          format: int64
        gsimId:
          type: integer
          format: int64
        loanId:
          type: integer
          format: int64
        officeId:
          type: integer
          format: int64
        productId:
          type: integer
          format: int64
        resourceExternalId:
          $ref: '#/components/schemas/ExternalId'
        resourceId:
          type: integer
          format: int64
        resourceIdentifier:
          type: string
        rollbackTransaction:
          type: boolean
        savingsId:
          type: integer
          format: int64
        subResourceExternalId:
          $ref: '#/components/schemas/ExternalId'
        subResourceId:
          type: integer
          format: int64
        transactionId:
          type: string
    CommandWrapper:
      type: object
      properties:
        cacheResource:
          type: boolean
        clientId:
          type: integer
          format: int64
        create:
          type: boolean
        createDatatable:
          type: boolean
        creditBureauId:
          type: integer
          format: int64
        currencyResource:
          type: boolean
        datatableResource:
          type: boolean
        delete:
          type: boolean
        deleteDatatable:
          type: boolean
        deleteMultiple:
          type: boolean
        deleteOneToOne:
          type: boolean
        deleteOperation:
          type: boolean
        entityId:
          type: integer
          format: int64
        entityName:
          type: string
        fullFilSurvey:
          type: boolean
        groupId:
          type: integer
          format: int64
        href:
          type: string
        idempotencyKey:
          type: string
        jobName:
          type: string
        json:
          type: string
        loanDisburseDetailResource:
          type: boolean
        loanId:
          type: integer
          format: int64
        noteResource:
          type: boolean
        officeId:
          type: integer
          format: int64
        organisationCreditBureauId:
          type: integer
          format: int64
        passwordPreferencesResource:
          type: boolean
        permissionResource:
          type: boolean
        productId:
          type: integer
          format: int64
        registerDatatable:
          type: boolean
        registerSurvey:
          type: boolean
        savingsId:
          type: integer
          format: int64
        subentityId:
          type: integer
          format: int64
        surveyResource:
          type: boolean
        taskPermissionName:
          type: string
        transactionId:
          type: string
        update:
          type: boolean
        updateDatatable:
          type: boolean
        updateDisbursementDate:
          type: boolean
        updateMultiple:
          type: boolean
        updateOneToOne:
          type: boolean
        updateOperation:
          type: boolean
        userResource:
          type: boolean
        workingDaysResource:
          type: boolean
    Component:
      type: object
      properties:
        description:
          type: string
        id:
          type: integer
          format: int64
        key:
          type: string
        new:
          type: boolean
        sequenceNo:
          type: integer
          format: int32
        survey:
          $ref: '#/components/schemas/Survey'
        text:
          type: string
    ComponentData:
      type: object
      properties:
        description:
          type: string
        id:
          type: integer
          format: int64
        key:
          type: string
        sequenceNo:
          type: integer
          format: int32
        text:
          type: string
    ContentDisposition:
      type: object
      properties:
        creationDate:
          type: string
          format: date-time
        fileName:
          type: string
        modificationDate:
          type: string
          format: date-time
        parameters:
          type: object
          additionalProperties:
            type: string
        readDate:
          type: string
          format: date-time
        size:
          type: integer
          format: int64
        type:
          type: string
    CreateStaffResponse:
      type: object
      description: PostStaffResponse
      properties:
        officeId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int64
          example: 1
    CreditAllocationData:
      type: object
      example: []
      properties:
        creditAllocationOrder:
          type: array
          example: []
          items:
            $ref: '#/components/schemas/CreditAllocationOrder'
        transactionType:
          type: string
          example: Chargeback
    CreditAllocationOrder:
      type: object
      example: []
      properties:
        creditAllocationRule:
          type: string
          example: PENALTY
        order:
          type: integer
          format: int32
          example: 1
    CreditDebit:
      type: object
      properties:
        amount:
          type: number
        glAccountId:
          type: integer
          format: int64
    CurrencyData:
      type: object
      properties:
        code:
          type: string
        decimalPlaces:
          type: integer
          format: int32
        displayLabel:
          type: string
        displaySymbol:
          type: string
        inMultiplesOf:
          type: integer
          format: int32
        name:
          type: string
        nameCode:
          type: string
    CurrencyItem:
      type: object
      properties:
        code:
          type: string
          example: USD
        decimalPlaces:
          type: integer
          format: int32
          example: 2
        displayLabel:
          type: string
          example: US Dollar ($)
        displaySymbol:
          type: string
          example: $
        inMultiplesOf:
          type: integer
          format: int32
          example: 100
        name:
          type: string
          example: US Dollar
        nameCode:
          type: string
          example: currency.USD
    DatatableCheckStatusData:
      type: object
    DatatableChecksData:
      type: object
    DatatableData:
      type: object
      properties:
        registeredTableName:
          type: string
    DateParam:
      type: object
    DeleteAccountNumberFormatsResponse:
      type: object
      description: DeleteAccountNumberFormatsResponse
      properties:
        resourceId:
          type: integer
          format: int64
          example: 2
    DeleteAccountingRulesResponse:
      type: object
      description: DeleteAccountingRulesResponse
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
    DeleteCentersCenterIdResponse:
      type: object
      description: DeleteCentersCenterIdResponse
      properties:
        changes:
          $ref: '#/components/schemas/DeleteCentersChanges'
        resourceId:
          type: integer
          format: int64
          example: 1
    DeleteCentersChanges:
      type: object
    DeleteChargesChargeIdResponse:
      type: object
      description: DeleteChargesChargeIdResponse
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
    DeleteClientCollateralResponse:
      type: object
      description: DeleteClientCollateralResponse
      properties:
        resourceId:
          type: integer
          format: int64
          example: 12
    DeleteClientsClientIdChargesChargeIdResponse:
      type: object
      description: DeleteClientsClientIdChargesChargeIdResponse
      properties:
        clientId:
          type: integer
          format: int64
          example: 189
        officeId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int64
          example: 164
    DeleteClientsClientIdIdentifiersIdentifierIdResponse:
      type: object
      description: DeleteClientsClientIdIdentifiersIdentifierIdResponse
      properties:
        clientId:
          type: integer
          format: int64
          example: 1
        officeId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int64
          example: 3
    DeleteClientsClientIdRequest:
      type: object
      description: DeleteClientsClientIdRequest
    DeleteClientsClientIdResponse:
      type: object
      description: DeleteClientsClientIdResponse
      properties:
        clientId:
          type: integer
          format: int64
          example: 3
        officeId:
          type: integer
          format: int64
          example: 1
        resourceExternalId:
          type: string
          example: 123-456
        resourceId:
          type: integer
          format: int64
          example: 3
    DeleteCodeValueDataResponse:
      type: object
      description: DeleteCodeValueDataResponse
      properties:
        resourceId:
          type: integer
          format: int64
          example: 4
    DeleteCodesResponse:
      type: object
      description: DeleteCodesResponse
      properties:
        resourceId:
          type: integer
          format: int64
          example: 4
    DeleteCollateralProductResponse:
      type: object
      description: DeleteCollateralProductResponse
      properties:
        resourceId:
          type: integer
          format: int64
          example: 12
    DeleteDataTablesDatatableAppTableIdDatatableIdResponse:
      type: object
      description: 'DeleteDataTablesDatatableAppTableIdDatatableIdResponse '
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
    DeleteDataTablesDatatableAppTableIdResponse:
      type: object
      description: 'DeleteDataTablesDatatableAppTableIdResponse '
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
    DeleteDataTablesResponse:
      type: object
      description: DeleteDataTablesResponse
      properties:
        resourceIdentifier:
          type: string
          example: extra_client_details
    DeleteDelinquencyBucketResponse:
      type: object
      description: DeleteDelinquencyBucketResponse
      properties:
        resourceId:
          type: integer
          format: int32
          example: 1
    DeleteDelinquencyRangeResponse:
      type: object
      description: DeleteDelinquencyRangeResponse
      properties:
        resourceId:
          type: integer
          format: int32
          example: 1
    DeleteEntityDatatableChecksTemplateResponse:
      type: object
      description: DeleteEntityDatatableChecksTemplateResponse
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
    DeleteEntityTypeEntityIdDocumentsResponse:
      type: object
      description: DeleteEntityTypeEntityIdDocumentsResponse
      properties:
        changes:
          $ref: '#/components/schemas/PutEntityTypeEntityIdDocumentsResponseChangesSwagger'
        resourceId:
          type: integer
          format: int64
          example: 3
        resourceIdentifier:
          type: string
          example: "3"
    DeleteFinancialActivityAccountsResponse:
      type: object
      description: DeleteFinancialActivityAccountsResponse
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
    DeleteFixedDepositAccountsAccountIdResponse:
      type: object
      description: DeleteFixedDepositAccountsAccountIdResponse
      properties:
        clientId:
          type: integer
          format: int64
          example: 1
        officeId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int64
          example: 1
    DeleteFixedDepositProductsProductIdResponse:
      type: object
      description: DeleteFixedDepositProductsProductIdResponse
      properties:
        resourceId:
          type: integer
          format: int32
          example: 1
    DeleteGLAccountsRequest:
      type: object
      description: DeleteGLAccountsRequest
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
    DeleteGlClosuresResponse:
      type: object
      description: DeleteGlClosuresResponse
      properties:
        officeId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int64
          example: 9
    DeleteGroupsGroupIdResponse:
      type: object
      description: DeleteGroupsGroupIdResponse
      properties:
        groupId:
          type: integer
          format: int64
          example: 2
        officeId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int64
          example: 2
    DeleteHolidaysHolidayIdResponse:
      type: object
      description: DeleteHolidaysHolidayIdResponse
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
    DeleteHookResponse:
      type: object
      description: DeleteHookResponse
      properties:
        resourceId:
          type: integer
          format: int64
          example: 4
    DeleteInterestRateChartsChartIdChartSlabsResponse:
      type: object
      description: DeleteInterestRateChartsChartIdChartSlabsResponse
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
    DeleteInterestRateChartsChartIdResponse:
      type: object
      description: DeleteInterestRateChartsChartIdResponse
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
    DeleteLoansLoanIdChargesChargeIdResponse:
      type: object
      description: DeleteLoansLoanIdChargesChargeIdResponse
      properties:
        clientId:
          type: integer
          format: int64
          example: 1
        loanId:
          type: integer
          format: int64
          example: 1
        officeId:
          type: integer
          format: int64
          example: 1
        resourceExternalId:
          type: string
          example: 95174ff9-1a75-4d72-a413-6f9b1cb988b7
        resourceId:
          type: integer
          format: int64
          example: 2
    DeleteLoansLoanIdCollateralsCollateralIdResponse:
      type: object
      description: DeleteLoansLoanIdCollateralsCollateralIdResponse
      properties:
        loanId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int64
          example: 12
    DeleteLoansLoanIdResponse:
      type: object
      description: DeleteLoansLoanIdResponse
      properties:
        clientId:
          type: integer
          format: int64
          example: 1
        loanId:
          type: integer
          format: int64
          example: 1
        officeId:
          type: integer
          format: int64
          example: 1
        resourceExternalId:
          type: string
          example: 95174ff9-1a75-4d72-a413-6f9b1cb988b7
        resourceId:
          type: integer
          format: int64
          example: 1
    DeletePaymentTypesPaymentTypeIdResponse:
      type: object
      description: DeletePaymentTypesPaymentTypeIdResponse
      properties:
        resourceId:
          type: integer
          format: int64
          example: 13
    DeletePostDatedCheck:
      type: object
      description: DeletePostDatedCheck
      properties:
        loanId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int64
          example: 2
    DeleteProvisioningCriteriaResponse:
      type: object
      description: DeleteProvisioningCriteriaResponse
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
    DeleteRecurringDepositAccountsResponse:
      type: object
      description: DeleteRecurringDepositAccountsResponse
      properties:
        clientId:
          type: integer
          format: int64
          example: 1
        officeId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int64
          example: 1
    DeleteRecurringDepositProductsProductIdResponse:
      type: object
      description: DeleteRecurringDepositProductsProductIdResponse
      properties:
        resourceId:
          type: integer
          format: int32
          example: 1
    DeleteReportMailingJobsRequest:
      type: object
      description: 'DeleteReportMailingJobsRequest '
    DeleteReportMailingJobsResponse:
      type: object
      description: DeleteReportMailingJobsResponse
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
    DeleteReportsResponse:
      type: object
      description: DeleteReportsResponse
      properties:
        resourceId:
          type: integer
          format: int64
          example: 132
    DeleteResourceTypeResourceIdNotesNoteIdResponse:
      type: object
      description: DeleteResourceTypeResourceIdNotesNoteIdResponse
      properties:
        resourceId:
          type: integer
          format: int32
          example: 76
    DeleteRolesRoleIdResponse:
      type: object
      description: DeleteRolesRoleIdResponse
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
    DeleteSavingsAccountsAccountIdResponse:
      type: object
      description: DeleteSavingsAccountsAccountIdResponse
      properties:
        clientId:
          type: integer
          format: int32
          example: 1
        officeId:
          type: integer
          format: int32
          example: 1
        resourceId:
          type: integer
          format: int32
          example: 1
    DeleteSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdResponse:
      type: object
      description: DeleteSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdResponse
      properties:
        clientId:
          type: integer
          format: int64
          example: 1
        officeId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int64
          example: 2
        savingsId:
          type: integer
          format: int64
          example: 1
    DeleteSavingsProductsProductIdResponse:
      type: object
      description: DeleteSavingsProductsProductIdResponse
      properties:
        resourceId:
          type: integer
          format: int32
          example: 1
    DeleteSelfBeneficiariesTPTBeneficiaryIdResponse:
      type: object
      description: DeleteSelfBeneficiariesTPTBeneficiaryIdResponse
      properties:
        resourceId:
          type: integer
          format: int32
          example: 5
    DeleteTellersTellerIdCashiersCashierIdResponse:
      type: object
      description: DeleteTellersTellerIdCashiersCashierIdResponse
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
    DeleteTemplatesTemplateIdResponse:
      type: object
      description: DeleteTemplatesTemplateIdResponse
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
    DeleteUsersUserIdResponse:
      type: object
      description: DeleteUsersUserIdResponse
      properties:
        changes:
          $ref: '#/components/schemas/DeleteUsersUserIdResponseChanges'
        officeId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int64
          example: 11
    DeleteUsersUserIdResponseChanges:
      type: object
    DelinquencyBucket:
      type: object
      properties:
        createdBy:
          type: integer
          format: int64
        createdDate:
          type: string
          format: date-time
        createdDateTime:
          type: string
          format: date-time
        id:
          type: integer
          format: int64
        lastModifiedBy:
          type: integer
          format: int64
        lastModifiedDate:
          type: string
          format: date-time
        lastModifiedDateTime:
          type: string
          format: date-time
        name:
          type: string
        new:
          type: boolean
        ranges:
          type: array
          items:
            $ref: '#/components/schemas/DelinquencyRange'
        version:
          type: integer
          format: int64
      required:
      - createdBy
      - createdDate
      - createdDateTime
      - lastModifiedBy
      - lastModifiedDate
      - lastModifiedDateTime
    DelinquencyBucketData:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        ranges:
          type: array
          items:
            $ref: '#/components/schemas/DelinquencyRangeData'
    DelinquencyRange:
      type: object
      properties:
        classification:
          type: string
        createdBy:
          type: integer
          format: int64
        createdDate:
          type: string
          format: date-time
        createdDateTime:
          type: string
          format: date-time
        id:
          type: integer
          format: int64
        lastModifiedBy:
          type: integer
          format: int64
        lastModifiedDate:
          type: string
          format: date-time
        lastModifiedDateTime:
          type: string
          format: date-time
        maximumAgeDays:
          type: integer
          format: int32
        minimumAgeDays:
          type: integer
          format: int32
        new:
          type: boolean
        version:
          type: integer
          format: int64
      required:
      - createdBy
      - createdDate
      - createdDateTime
      - lastModifiedBy
      - lastModifiedDate
      - lastModifiedDateTime
    DelinquencyRangeData:
      type: object
      properties:
        classification:
          type: string
        id:
          type: integer
          format: int64
        maximumAgeDays:
          type: integer
          format: int32
        minimumAgeDays:
          type: integer
          format: int32
    DocumentUploadRequest:
      type: object
      description: Document upload request
      properties:
        dateFormat:
          type: string
        description:
          type: string
        locale:
          type: string
        name:
          type: string
        uploadedInputStream:
          type: string
          format: binary
    Entity:
      type: object
      properties:
        actions:
          type: array
          items:
            type: string
        name:
          type: string
    EnumOptionData:
      type: object
      properties:
        code:
          type: string
        id:
          type: integer
          format: int64
        value:
          type: string
    EnumOptionType:
      type: object
      properties:
        code:
          type: string
          example: accountType.asset
        id:
          type: integer
          format: int64
          example: 2
        value:
          type: string
          example: ASSET
    Event:
      type: object
      example: 1
      properties:
        actionName:
          type: string
        entityName:
          type: string
    ExecuteJobRequest:
      type: object
      description: ExecuteJobRequest
      properties:
        jobParameters:
          type: array
          example: Update loan Summary
          items:
            $ref: '#/components/schemas/JobParameterDTO'
    ExtensionData:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
      required:
      - key
    ExternalAssetOwnerSearchRequest:
      type: object
      properties:
        effectiveFromDate:
          type: string
          format: date
        effectiveToDate:
          type: string
          format: date
        submittedFromDate:
          type: string
          format: date
        submittedToDate:
          type: string
          format: date
        text:
          type: string
    ExternalAssetOwnerTransferChangesData:
      type: object
      description: ExternalAssetOwnerTransferChangesData
      properties:
        ownerExternalId:
          type: string
          example: 1234567890987654321abc
        purchasePriceRatio:
          type: string
          example: "1.23456789"
        settlementDate:
          type: string
          format: date
        transferExternalId:
          type: string
          example: 36efeb06-d835-48a1-99eb-09bd1d348c1e
    ExternalEventConfigurationItemData:
      type: object
      properties:
        enabled:
          type: boolean
        type:
          type: string
    ExternalId:
      type: object
      properties:
        empty:
          type: boolean
        value:
          type: string
    ExternalOwnerJournalEntryData:
      type: object
      properties:
        journalEntryData:
          $ref: '#/components/schemas/PageJournalEntryData'
        ownerData:
          $ref: '#/components/schemas/ExternalTransferOwnerData'
    ExternalOwnerTransferJournalEntryData:
      type: object
      properties:
        journalEntryData:
          $ref: '#/components/schemas/PageJournalEntryData'
        transferData:
          $ref: '#/components/schemas/ExternalTransferData'
    ExternalServicesPropertiesData:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
    ExternalTransferData:
      type: object
      properties:
        details:
          $ref: '#/components/schemas/ExternalTransferDataDetails'
        effectiveFrom:
          type: string
          format: date
        effectiveTo:
          type: string
          format: date
        loan:
          $ref: '#/components/schemas/ExternalTransferLoanData'
        owner:
          $ref: '#/components/schemas/ExternalTransferOwnerData'
        purchasePriceRatio:
          type: string
        settlementDate:
          type: string
          format: date
        status:
          type: string
          enum:
          - ACTIVE
          - DECLINED
          - PENDING
          - BUYBACK
          - CANCELLED
        subStatus:
          type: string
          enum:
          - BALANCE_ZERO
          - BALANCE_NEGATIVE
          - SAMEDAY_TRANSFERS
          - USER_REQUESTED
          - UNSOLD
        transferExternalId:
          type: string
        transferId:
          type: integer
          format: int64
    ExternalTransferDataDetails:
      type: object
      properties:
        detailsId:
          type: integer
          format: int64
        totalFeeChargesOutstanding:
          type: number
        totalInterestOutstanding:
          type: number
        totalOutstanding:
          type: number
        totalOverpaid:
          type: number
        totalPenaltyChargesOutstanding:
          type: number
        totalPrincipalOutstanding:
          type: number
    ExternalTransferLoanData:
      type: object
      properties:
        externalId:
          type: string
        loanId:
          type: integer
          format: int64
    ExternalTransferOwnerData:
      type: object
      properties:
        externalId:
          type: string
    Field:
      type: object
      properties:
        fieldName:
          type: string
        fieldType:
          type: string
        fieldValue:
          type: string
        optional:
          type: boolean
        placeholder:
          type: string
    FilterData:
      type: object
      properties:
        operator:
          type: string
          enum:
          - EQ
          - NEQ
          - GTE
          - LTE
          - GT
          - LT
          - LIKE
          - NLIKE
          - BTW
          - NBTW
          - IN
          - NIN
          - "NULL"
          - NNULL
        values:
          type: array
          items:
            type: string
    FinancialActivityData:
      type: object
      properties:
        id:
          type: integer
          format: int32
        mappedGLAccountType:
          type: string
          enum:
          - ASSET
          - LIABILITY
          - EQUITY
          - INCOME
          - EXPENSE
        name:
          type: string
    FloatingRate:
      type: object
      properties:
        active:
          type: boolean
        baseLendingRate:
          type: boolean
        createdBy:
          type: integer
          format: int64
        createdDate:
          type: string
          format: date-time
        createdDateTime:
          type: string
          format: date-time
        floatingRatePeriods:
          type: array
          items:
            $ref: '#/components/schemas/FloatingRatePeriod'
        id:
          type: integer
          format: int64
        lastModifiedBy:
          type: integer
          format: int64
        lastModifiedDate:
          type: string
          format: date-time
        lastModifiedDateTime:
          type: string
          format: date-time
        name:
          type: string
        new:
          type: boolean
      required:
      - createdBy
      - createdDate
      - createdDateTime
      - lastModifiedBy
      - lastModifiedDate
      - lastModifiedDateTime
    FloatingRateData:
      type: object
      properties:
        active:
          type: boolean
        baseLendingRate:
          type: boolean
        createdBy:
          type: string
        createdOn:
          type: string
          format: date-time
        id:
          type: integer
          format: int64
        modifiedBy:
          type: string
        modifiedOn:
          type: string
          format: date-time
        name:
          type: string
        ratePeriods:
          type: array
          items:
            $ref: '#/components/schemas/FloatingRatePeriodData'
    FloatingRatePeriod:
      type: object
      properties:
        active:
          type: boolean
        createdBy:
          type: integer
          format: int64
        createdDate:
          type: string
          format: date-time
        createdDateTime:
          type: string
          format: date-time
        differentialToBaseLendingRate:
          type: boolean
        floatingRate:
          $ref: '#/components/schemas/FloatingRate'
        fromDate:
          type: string
          format: date
        id:
          type: integer
          format: int64
        interestRate:
          type: number
        lastModifiedBy:
          type: integer
          format: int64
        lastModifiedDate:
          type: string
          format: date-time
        lastModifiedDateTime:
          type: string
          format: date-time
        new:
          type: boolean
      required:
      - createdBy
      - createdDate
      - createdDateTime
      - lastModifiedBy
      - lastModifiedDate
      - lastModifiedDateTime
    FloatingRatePeriodData:
      type: object
      properties:
        active:
          type: boolean
        createdBy:
          type: string
        createdOn:
          type: string
          format: date-time
        differentialToBaseLendingRate:
          type: boolean
        fromDate:
          type: string
          format: date
        fromDateAsLocalDate:
          type: string
          format: date
        id:
          type: integer
          format: int64
        interestRate:
          type: number
        modifiedBy:
          type: string
        modifiedOn:
          type: string
          format: date-time
    FormDataBodyPart:
      type: object
      properties:
        content:
          type: object
        contentDisposition:
          $ref: '#/components/schemas/ContentDisposition'
        entity:
          type: object
        fileName:
          type: string
        formDataContentDisposition:
          $ref: '#/components/schemas/FormDataContentDisposition'
        headers:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          properties:
            empty:
              type: boolean
        mediaType:
          $ref: '#/components/schemas/MediaType'
        messageBodyWorkers:
          $ref: '#/components/schemas/MessageBodyWorkers'
        name:
          type: string
        parameterizedHeaders:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ParameterizedHeader'
          properties:
            empty:
              type: boolean
        parent:
          $ref: '#/components/schemas/MultiPart'
        providers:
          $ref: '#/components/schemas/Providers'
        simple:
          type: boolean
        value:
          type: string
    FormDataContentDisposition:
      type: object
      properties:
        creationDate:
          type: string
          format: date-time
        fileName:
          type: string
        modificationDate:
          type: string
          format: date-time
        name:
          type: string
        parameters:
          type: object
          additionalProperties:
            type: string
        readDate:
          type: string
          format: date-time
        size:
          type: integer
          format: int64
        type:
          type: string
    FundData:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    GLAccount:
      type: object
      properties:
        children:
          type: array
          items:
            $ref: '#/components/schemas/GLAccount'
        description:
          type: string
        detailAccount:
          type: boolean
        disabled:
          type: boolean
        glCode:
          type: string
        headerAccount:
          type: boolean
        hierarchy:
          type: string
        id:
          type: integer
          format: int64
        manualEntriesAllowed:
          type: boolean
        name:
          type: string
        new:
          type: boolean
        parent:
          $ref: '#/components/schemas/GLAccount'
        tagId:
          $ref: '#/components/schemas/CodeValue'
        type:
          type: integer
          format: int32
        usage:
          type: integer
          format: int32
    GLAccountData:
      type: object
      properties:
        accountTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
        allowedAssetsTagOptions:
          type: array
          items:
            $ref: '#/components/schemas/CodeValueData'
        allowedEquityTagOptions:
          type: array
          items:
            $ref: '#/components/schemas/CodeValueData'
        allowedExpensesTagOptions:
          type: array
          items:
            $ref: '#/components/schemas/CodeValueData'
        allowedIncomeTagOptions:
          type: array
          items:
            $ref: '#/components/schemas/CodeValueData'
        allowedLiabilitiesTagOptions:
          type: array
          items:
            $ref: '#/components/schemas/CodeValueData'
        assetHeaderAccountOptions:
          type: array
          items:
            $ref: '#/components/schemas/GLAccountData'
        description:
          type: string
        disabled:
          type: boolean
        equityHeaderAccountOptions:
          type: array
          items:
            $ref: '#/components/schemas/GLAccountData'
        expenseHeaderAccountOptions:
          type: array
          items:
            $ref: '#/components/schemas/GLAccountData'
        glCode:
          type: string
        id:
          type: integer
          format: int64
        incomeHeaderAccountOptions:
          type: array
          items:
            $ref: '#/components/schemas/GLAccountData'
        liabilityHeaderAccountOptions:
          type: array
          items:
            $ref: '#/components/schemas/GLAccountData'
        manualEntriesAllowed:
          type: boolean
        name:
          type: string
        nameDecorated:
          type: string
        organizationRunningBalance:
          type: integer
          format: int64
        parentId:
          type: integer
          format: int64
        rowIndex:
          type: integer
          format: int32
        tagId:
          $ref: '#/components/schemas/CodeValueData'
        type:
          $ref: '#/components/schemas/EnumOptionData'
        usage:
          $ref: '#/components/schemas/EnumOptionData'
        usageOptions:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
    GLAccountDataForLookup:
      type: object
      properties:
        glCode:
          type: string
        id:
          type: integer
          format: int64
        name:
          type: string
    GeoCodeData:
      type: object
      properties:
        latitude:
          type: string
        longitude:
          type: string
      required:
      - latitude
      - longitude
    GetAccountNumberFormatsIdResponse:
      type: object
      description: GetAccountNumberFormatsIdResponse
      properties:
        accountType:
          $ref: '#/components/schemas/EnumOptionData'
        id:
          type: integer
          format: int64
          example: 2
        prefixType:
          $ref: '#/components/schemas/EnumOptionData'
    GetAccountNumberFormatsResponseTemplate:
      type: object
      description: GetAccountNumberFormatsResponseTemplate
      properties:
        accountTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
        prefixTypeOptions:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/EnumOptionData'
    GetAccountOptions:
      type: object
      properties:
        code:
          type: string
          example: accountType.savings
        description:
          type: string
          example: Savings Account
        id:
          type: integer
          format: int64
          example: 2
    GetAccountRulesResponse:
      type: object
      description: GetAccountRulesResponse
      properties:
        allowMultipleCreditEntries:
          type: boolean
        allowMultipleDebitEntries:
          type: boolean
        creditTags:
          type: array
          items:
            $ref: '#/components/schemas/AccountingTagRuleData'
        debitTags:
          type: array
          items:
            $ref: '#/components/schemas/AccountingTagRuleData'
        description:
          type: string
        id:
          type: integer
          format: int64
        name:
          type: string
        officeId:
          type: integer
          format: int64
        officeName:
          type: string
        systemDefined:
          type: boolean
    GetAccountRulesTemplateResponse:
      type: object
      description: GetAccountRulesTemplateResponse
      properties:
        allowedAccounts:
          type: array
          items:
            $ref: '#/components/schemas/GLAccountData'
        allowedOffices:
          type: array
          items:
            $ref: '#/components/schemas/OfficeData'
        systemDefined:
          type: boolean
          example: false
    GetAccountTransferTemplateResponse:
      type: object
      description: GetAccountTransferTemplateResponse
      properties:
        accountTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetAccountOptions'
          uniqueItems: true
        fromAccountTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetFromAccountOptions'
          uniqueItems: true
        toAccountTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetFromAccountOptions'
          uniqueItems: true
    GetAccountTransfersClientClassification:
      type: object
    GetAccountTransfersClientType:
      type: object
    GetAccountTransfersFromAccountType:
      type: object
      properties:
        code:
          type: string
          example: accountType.savings
        description:
          type: string
          example: Savings Account
        id:
          type: integer
          format: int64
          example: 2
    GetAccountTransfersFromAccountTypeOptions:
      type: object
      properties:
        code:
          type: string
          example: accountType.savings
        description:
          type: string
          example: Savings Account
        id:
          type: integer
          format: int64
          example: 2
    GetAccountTransfersFromClientOptions:
      type: object
      properties:
        displayName:
          type: string
          example: Small shop
        id:
          type: integer
          format: int64
          example: 1
        officeId:
          type: integer
          format: int64
          example: 1
        officeName:
          type: string
          example: HO
    GetAccountTransfersFromOffice:
      type: object
      properties:
        externalId:
          type: string
          example: "1"
        hierarchy:
          type: string
          example: "."
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: HO
        nameDecorated:
          type: string
          example: HO
        openingDate:
          type: string
          format: date
    GetAccountTransfersFromOfficeOptions:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: HO
        nameDecorated:
          type: string
          example: HO
    GetAccountTransfersGender:
      type: object
    GetAccountTransfersGroups:
      type: object
    GetAccountTransfersPageItems:
      type: object
      properties:
        currency:
          $ref: '#/components/schemas/GetAccountTransfersPageItemsCurrency'
        fromAccount:
          $ref: '#/components/schemas/GetAccountTransfersPageItemsFromAccount'
        fromAccountType:
          $ref: '#/components/schemas/GetAccountTransfersFromAccountType'
        fromClient:
          $ref: '#/components/schemas/GetAccountTransfersFromClientOptions'
        fromOffice:
          $ref: '#/components/schemas/GetAccountTransfersPageItemsFromOffice'
        id:
          type: integer
          format: int64
          example: 1
        reversed:
          type: boolean
          example: false
        toAccount:
          $ref: '#/components/schemas/GetAccountTransfersPageItemsFromAccount'
        toAccountType:
          $ref: '#/components/schemas/GetAccountTransfersPageItemsToAccountType'
        toClient:
          $ref: '#/components/schemas/GetAccountTransfersFromClientOptions'
        toOffice:
          $ref: '#/components/schemas/GetAccountTransfersPageItemsFromOffice'
        transferAmount:
          type: number
          format: float
          example: 200
        transferDate:
          type: string
          format: date
        transferDescription:
          type: string
          example: pay off loan from savings.
    GetAccountTransfersPageItemsCurrency:
      type: object
      properties:
        code:
          type: string
          example: USD
        decimalPlaces:
          type: integer
          format: int32
          example: 2
        displayLabel:
          type: string
          example: US Dollar ($)
        displaySymbol:
          type: string
          example: $
        name:
          type: string
          example: US Dollar
        nameCode:
          type: string
          example: currency.USD
    GetAccountTransfersPageItemsFromAccount:
      type: object
      properties:
        accountNo:
          type: integer
          format: int64
          example: 1
        id:
          type: integer
          format: int64
          example: 1
    GetAccountTransfersPageItemsFromOffice:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: HO
    GetAccountTransfersPageItemsToAccountType:
      type: object
      properties:
        code:
          type: string
          example: accountType.loan
        description:
          type: string
          example: Loan Account
        id:
          type: integer
          format: int64
          example: 1
    GetAccountTransfersResponse:
      type: object
      description: GetAccountTransfersResponse
      properties:
        pageItems:
          type: array
          items:
            $ref: '#/components/schemas/GetAccountTransfersPageItems'
          uniqueItems: true
        totalFilteredRecords:
          type: integer
          format: int32
          example: 4
    GetAccountTransfersStatus:
      type: object
      properties:
        code:
          type: string
          example: clientStatusType.active
        description:
          type: string
          example: Active
        id:
          type: integer
          format: int64
          example: 300
    GetAccountTransfersTemplateRefundByTransferCurrency:
      type: object
      properties:
        code:
          type: string
          example: USD
        decimalPlaces:
          type: integer
          format: int32
          example: 0
        displayLabel:
          type: string
          example: US Dollar ($)
        displaySymbol:
          type: string
          example: $
        inMultiplesOf:
          type: integer
          format: int32
          example: 0
        name:
          type: string
          example: US Dollar
        nameCode:
          type: string
          example: currency.USD
    GetAccountTransfersTemplateRefundByTransferFromAccount:
      type: object
      properties:
        accountNo:
          type: integer
          format: int64
          example: 2
        amtForTransfer:
          type: number
          format: float
          example: 130
        clientId:
          type: integer
          format: int64
          example: 1
        clientName:
          type: string
          example: Daniel Owusu
        currency:
          $ref: '#/components/schemas/GetAccountTransfersTemplateRefundByTransferCurrency'
        fieldOfficerId:
          type: integer
          format: int64
          example: 0
        id:
          type: integer
          format: int64
          example: 2
        productId:
          type: integer
          format: int64
          example: 1
        productName:
          type: string
          example: CTRL
    GetAccountTransfersTemplateRefundByTransferFromAccountOptions:
      type: object
      properties:
        accountNo:
          type: integer
          format: int64
          example: 2
        clientId:
          type: integer
          format: int64
          example: 1
        clientName:
          type: string
          example: Daniel Owusu
        currency:
          $ref: '#/components/schemas/GetAccountTransfersTemplateRefundByTransferCurrency'
        fieldOfficerId:
          type: integer
          format: int64
          example: 0
        id:
          type: integer
          format: int64
          example: 2
        productId:
          type: integer
          format: int64
          example: 1
        productName:
          type: string
          example: CTRL
    GetAccountTransfersTemplateRefundByTransferFromClient:
      type: object
      properties:
        accountNo:
          type: integer
          format: int64
          example: 1
        activationDate:
          type: string
          format: date
        active:
          type: boolean
          example: true
        clientClassification:
          $ref: '#/components/schemas/GetAccountTransfersClientClassification'
        clientType:
          $ref: '#/components/schemas/GetAccountTransfersClientType'
        displayName:
          type: string
          example: Daniel Owusu
        firstname:
          type: string
          example: Daniel
        gender:
          $ref: '#/components/schemas/GetAccountTransfersGender'
        groups:
          $ref: '#/components/schemas/GetAccountTransfersGroups'
        id:
          type: integer
          format: int64
          example: 1
        lastname:
          type: string
          example: Owusu
        officeId:
          type: integer
          format: int64
          example: 1
        officeName:
          type: string
          example: Head Office
        status:
          $ref: '#/components/schemas/GetAccountTransfersStatus'
        timeline:
          $ref: '#/components/schemas/GetAccountTransfersTimeline'
    GetAccountTransfersTemplateRefundByTransferFromClientOptions:
      type: object
      properties:
        displayName:
          type: string
          example: Daniel Owusu
        id:
          type: integer
          format: int64
          example: 1
        officeId:
          type: integer
          format: int64
          example: 1
        officeName:
          type: string
          example: Head Office
    GetAccountTransfersTemplateRefundByTransferFromOffice:
      type: object
      properties:
        externalId:
          type: string
          example: "1"
        hierarchy:
          type: string
          example: "."
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Head Office
        nameDecorated:
          type: string
          example: Head Office
        openingDate:
          type: string
          format: date
    GetAccountTransfersTemplateRefundByTransferFromOfficeOptions:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Head Office
        nameDecorated:
          type: string
          example: Head Office
    GetAccountTransfersTemplateRefundByTransferResponse:
      type: object
      description: GetAccountTransfersTemplateRefundByTransferResponse
      properties:
        currency:
          $ref: '#/components/schemas/GetAccountTransfersTemplateRefundByTransferCurrency'
        fromAccount:
          $ref: '#/components/schemas/GetAccountTransfersTemplateRefundByTransferFromAccount'
        fromAccountOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetAccountTransfersTemplateRefundByTransferFromAccountOptions'
          uniqueItems: true
        fromAccountType:
          $ref: '#/components/schemas/GetAccountTransfersPageItemsToAccountType'
        fromAccountTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetAccountTransfersFromAccountType'
          uniqueItems: true
        fromClient:
          $ref: '#/components/schemas/GetAccountTransfersTemplateRefundByTransferFromClient'
        fromClientOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetAccountTransfersTemplateRefundByTransferFromClientOptions'
          uniqueItems: true
        fromOffice:
          $ref: '#/components/schemas/GetAccountTransfersTemplateRefundByTransferFromOffice'
        fromOfficeOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetAccountTransfersTemplateRefundByTransferFromOfficeOptions'
          uniqueItems: true
        toAccount:
          $ref: '#/components/schemas/GetAccountTransfersTemplateRefundByTransferToAccount'
        toAccountOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetAccountTransfersTemplateRefundByTransferToAccount'
          uniqueItems: true
        toAccountType:
          $ref: '#/components/schemas/GetAccountTransfersFromAccountType'
        toAccountTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetAccountTransfersFromAccountType'
          uniqueItems: true
        toClient:
          $ref: '#/components/schemas/GetAccountTransfersTemplateRefundByTransferToClient'
        toClientOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetAccountTransfersTemplateRefundByTransferFromClientOptions'
          uniqueItems: true
        toOffice:
          $ref: '#/components/schemas/GetAccountTransfersTemplateRefundByTransferFromOffice'
        toOfficeOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetAccountTransfersTemplateRefundByTransferFromOfficeOptions'
          uniqueItems: true
        transferAmount:
          type: number
          format: float
          example: 130
        transferDate:
          type: string
          format: date
    GetAccountTransfersTemplateRefundByTransferToAccount:
      type: object
      properties:
        accountNo:
          type: integer
          format: int64
          example: 1
        clientId:
          type: integer
          format: int64
          example: 1
        clientName:
          type: string
          example: Daniel Owusu
        currency:
          $ref: '#/components/schemas/GetAccountTransfersTemplateRefundByTransferCurrency'
        fieldOfficerId:
          type: integer
          format: int64
          example: 0
        id:
          type: integer
          format: int64
          example: 1
        productId:
          type: integer
          format: int64
          example: 1
        productName:
          type: string
          example: TEST
    GetAccountTransfersTemplateRefundByTransferToClient:
      type: object
      properties:
        displayName:
          type: string
          example: Daniel Owusu
        id:
          type: integer
          format: int64
          example: 1
        officeId:
          type: integer
          format: int64
          example: 1
        officeName:
          type: string
          example: Head Office
    GetAccountTransfersTemplateResponse:
      type: object
      description: GetAccountTransfersTemplateResponse
      properties:
        fromAccountType:
          $ref: '#/components/schemas/GetAccountTransfersFromAccountType'
        fromAccountTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetAccountTransfersFromAccountTypeOptions'
          uniqueItems: true
        fromClientOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetAccountTransfersFromClientOptions'
          uniqueItems: true
        fromOffice:
          $ref: '#/components/schemas/GetAccountTransfersFromOffice'
        fromOfficeOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetAccountTransfersFromOfficeOptions'
          uniqueItems: true
        toAccountTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetAccountTransfersToAccountTypeOptions'
          uniqueItems: true
        toOfficeOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetAccountTransfersToOfficeOptions'
          uniqueItems: true
        transferAmount:
          type: integer
          format: int64
          example: 0
        transferDate:
          type: string
          format: date
    GetAccountTransfersTimeline:
      type: object
      properties:
        activatedByFirstname:
          type: string
          example: App
        activatedByLastname:
          type: string
          example: Administrator
        activatedByUsername:
          type: string
          example: mifos
        activatedOnDate:
          type: string
          format: date
        submittedByFirstname:
          type: string
          example: App
        submittedByLastname:
          type: string
          example: Administrator
        submittedByUsername:
          type: string
          example: mifos
        submittedOnDate:
          type: string
          format: date
    GetAccountTransfersToAccountTypeOptions:
      type: object
      properties:
        code:
          type: string
          example: accountType.savings
        description:
          type: string
          example: Savings Account
        id:
          type: integer
          format: int64
          example: 2
    GetAccountTransfersToOfficeOptions:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: HO
        nameDecorated:
          type: string
          example: HO
    GetAccountingMappingOptions:
      type: object
    GetAccountsChargeCalculationType:
      type: object
      properties:
        code:
          type: string
          example: chargeCalculationType.flat
        description:
          type: string
          example: Flat
        id:
          type: integer
          format: int64
          example: 1
    GetAccountsChargeTimeType:
      type: object
      properties:
        code:
          type: string
          example: chargeTimeType.activation
        description:
          type: string
          example: Share Account Activate
        id:
          type: integer
          format: int64
          example: 13
    GetAccountsCharges:
      type: object
      properties:
        accountId:
          type: integer
          format: int64
          example: 2
        amount:
          type: number
          format: float
          example: 1
        amountOrPercentage:
          type: number
          format: float
          example: 1
        amountOutstanding:
          type: number
          format: float
          example: 0
        amountPaid:
          type: number
          format: float
          example: 1
        amountPercentageAppliedTo:
          type: number
          format: double
          example: 0
        amountWaived:
          type: number
          format: float
          example: 0
        amountWrittenOff:
          type: number
          format: float
          example: 0
        chargeCalculationType:
          $ref: '#/components/schemas/GetAccountsChargeCalculationType'
        chargeId:
          type: integer
          format: int64
          example: 20
        chargeTimeType:
          $ref: '#/components/schemas/GetAccountsChargeTimeType'
        currency:
          $ref: '#/components/schemas/GetAccountsChargesCurrency'
        id:
          type: integer
          format: int64
          example: 9
        isActive:
          type: boolean
          example: true
        name:
          type: string
          example: Share Account Activation Flat
        percentage:
          type: number
          format: double
          example: 0
    GetAccountsChargesCurrency:
      type: object
      properties:
        code:
          type: string
          example: USD
        decimalPlaces:
          type: integer
          format: int32
          example: 2
        displayLabel:
          type: string
          example: US Dollar ($)
        displaySymbol:
          type: string
          example: $
        name:
          type: string
          example: US Dollar
        nameCode:
          type: string
          example: currency.USD
    GetAccountsCurrency:
      type: object
      properties:
        code:
          type: string
          example: USD
        decimalPlaces:
          type: integer
          format: int32
          example: 2
        displayLabel:
          type: string
          example: US Dollar ($)
        displaySymbol:
          type: string
          example: $
        inMultiplesOf:
          type: integer
          format: int32
          example: 100
        name:
          type: string
          example: US Dollar
        nameCode:
          type: string
          example: currency.USD
    GetAccountsLinkedToPocketResponse:
      type: object
      description: GetAccountsLinkedToPocketResponse
      properties:
        loanAccounts:
          type: array
          items:
            $ref: '#/components/schemas/GetPocketLoanAccounts'
          uniqueItems: true
        savingAccounts:
          type: array
          items:
            $ref: '#/components/schemas/GetPocketSavingAccounts'
          uniqueItems: true
        shareAccounts:
          type: array
          items:
            $ref: '#/components/schemas/GetPocketShareAccounts'
          uniqueItems: true
    GetAccountsLockPeriodTypeEnum:
      type: object
      properties:
        code:
          type: string
          example: savings.lockin.sharePeriodFrequencyType.days
        description:
          type: string
          example: Days
        id:
          type: integer
          format: int64
          example: 0
    GetAccountsPageItems:
      type: object
      properties:
        accountNo:
          type: integer
          format: int64
          example: 1
        clientId:
          type: integer
          format: int64
          example: 1
        clientName:
          type: string
          example: Client Name
        currency:
          $ref: '#/components/schemas/GetAccountsChargesCurrency'
        id:
          type: integer
          format: int64
          example: 1
        productId:
          type: integer
          format: int64
          example: 1
        productName:
          type: string
          example: Share Product Name
        purchasedShares:
          type: array
          items:
            $ref: '#/components/schemas/GetAccountsTypePurchasedShares'
          uniqueItems: true
        status:
          $ref: '#/components/schemas/GetAccountsTypeStatus'
        summary:
          $ref: '#/components/schemas/GetAccountsTypeSummary'
        timeline:
          $ref: '#/components/schemas/GetAccountsTypeTimeline'
    GetAccountsPurchasedShares:
      type: object
      properties:
        accountId:
          type: integer
          format: int64
          example: 2
        amount:
          type: number
          format: double
          example: 5.05
        amountPaid:
          type: number
          format: double
          example: 5.05
        chargeAmount:
          type: number
          format: double
          example: 0.05
        id:
          type: integer
          format: int64
          example: 6
        numberOfShares:
          type: integer
          format: int32
          example: 10
        purchasedDate:
          type: string
          format: date
        purchasedPrice:
          type: number
          format: double
          example: 0.5
        status:
          $ref: '#/components/schemas/GetAccountsPurchasedSharesStatus'
        type:
          $ref: '#/components/schemas/GetAccountsPurchasedSharesType'
    GetAccountsPurchasedSharesStatus:
      type: object
      properties:
        code:
          type: string
          example: purchasedSharesStatusType.approved
        description:
          type: string
          example: Approved
        id:
          type: integer
          format: int64
          example: 300
    GetAccountsPurchasedSharesType:
      type: object
      properties:
        code:
          type: string
          example: purchasedSharesType.purchased
        description:
          type: string
          example: Purchase
        id:
          type: integer
          format: int64
          example: 500
    GetAccountsStatus:
      type: object
      properties:
        active:
          type: boolean
          example: true
        approved:
          type: boolean
          example: false
        closed:
          type: boolean
          example: false
        code:
          type: string
          example: shareAccountStatusType.active
        description:
          type: string
          example: Active
        id:
          type: integer
          format: int64
          example: 300
        rejected:
          type: boolean
          example: false
        submittedAndPendingApproval:
          type: boolean
          example: false
    GetAccountsSummary:
      type: object
      properties:
        accountNo:
          type: integer
          format: int64
          example: 2
        currency:
          $ref: '#/components/schemas/GetAccountsCurrency'
        id:
          type: integer
          format: int64
          example: 2
        productId:
          type: integer
          format: int64
          example: 1
        productName:
          type: string
          example: Conflux Share Product
        status:
          $ref: '#/components/schemas/GetAccountsStatus'
        timeline:
          $ref: '#/components/schemas/GetAccountsTimeline'
        totalApprovedShares:
          type: integer
          format: int32
          example: 1
        totalPendingForApprovalShares:
          type: integer
          format: int32
          example: 0
    GetAccountsTimeline:
      type: object
      properties:
        activatedDate:
          type: string
          format: date
        approvedByFirstname:
          type: string
          example: App
        approvedByLastname:
          type: string
          example: Administrator
        approvedByUsername:
          type: string
          example: mifos
        approvedDate:
          type: string
          format: date
        submittedByFirstname:
          type: string
          example: App
        submittedByLastname:
          type: string
          example: Administrator
        submittedByUsername:
          type: string
          example: mifos
        submittedOnDate:
          type: string
          format: date
    GetAccountsTypeAccountIdResponse:
      type: object
      description: GetAccountsTypeAccountIdResponse
      properties:
        accountNo:
          type: integer
          format: int64
          example: 2
        allowDividendCalculationForInactiveClients:
          type: boolean
          example: true
        charges:
          type: array
          items:
            $ref: '#/components/schemas/GetAccountsCharges'
          uniqueItems: true
        clientId:
          type: integer
          format: int64
          example: 7
        clientName:
          type: string
          example: Client_FirstName_2KX8C Client_LastName_NWNG
        currency:
          $ref: '#/components/schemas/GetAccountsCurrency'
        currentMarketPrice:
          type: integer
          format: int32
          example: 5
        dividends:
          type: array
          items:
            type: string
        id:
          type: integer
          format: int64
          example: 2
        lockPeriodTypeEnum:
          $ref: '#/components/schemas/GetAccountsLockPeriodTypeEnum'
        lockinPeriod:
          type: integer
          format: int32
          example: 1
        minimumActivePeriod:
          type: integer
          format: int32
          example: 1
        minimumActivePeriodTypeEnum:
          $ref: '#/components/schemas/GetAccountsLockPeriodTypeEnum'
        productId:
          type: integer
          format: int64
          example: 1
        productName:
          type: string
          example: Share Product
        purchasedShares:
          type: array
          items:
            $ref: '#/components/schemas/GetAccountsPurchasedShares'
          uniqueItems: true
        savingsAccountId:
          type: integer
          format: int64
          example: 13
        savingsAccountNumber:
          type: integer
          format: int64
          example: 13
        status:
          $ref: '#/components/schemas/GetAccountsStatus'
        summary:
          $ref: '#/components/schemas/GetAccountsSummary'
        timeline:
          $ref: '#/components/schemas/GetAccountsTimeline'
    GetAccountsTypeProductOptions:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Share Product
        shortName:
          type: string
          example: SP
        totalShares:
          type: integer
          format: int64
          example: 100
    GetAccountsTypePurchasedShares:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        numberOfShares:
          type: integer
          format: int32
          example: 10
        purchasedDate:
          type: string
          example: 01 May 2013
        purchasedPrice:
          type: integer
          format: int32
          example: 5
    GetAccountsTypeResponse:
      type: object
      description: GetAccountsTypeResponse
      properties:
        pageItems:
          type: array
          items:
            $ref: '#/components/schemas/GetAccountsPageItems'
          uniqueItems: true
        totalFilteredRecords:
          type: integer
          format: int32
          example: 1
    GetAccountsTypeStatus:
      type: object
      properties:
        active:
          type: boolean
          example: false
        approved:
          type: boolean
          example: false
        closed:
          type: boolean
          example: false
        code:
          type: string
          example: shareAccountStatusType.submitted.and.pending.approval
        description:
          type: string
          example: Submitted and pending approval
        id:
          type: integer
          format: int64
          example: 100
        rejected:
          type: boolean
          example: false
        submittedAndPendingApproval:
          type: boolean
          example: true
    GetAccountsTypeSummary:
      type: object
      properties:
        currency:
          $ref: '#/components/schemas/GetAccountsChargesCurrency'
    GetAccountsTypeTemplateResponse:
      type: object
      description: GetAccountsTypeTemplateResponse
      properties:
        clientId:
          type: integer
          format: int64
          example: 7
        clientName:
          type: string
          example: Client Name
        productOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetAccountsTypeProductOptions'
          uniqueItems: true
    GetAccountsTypeTimeline:
      type: object
      properties:
        submittedOnDate:
          type: string
          format: date
    GetAssetType:
      type: object
      properties:
        code:
          type: string
          example: accountType.asset
        description:
          type: string
          example: ASSET
        id:
          type: integer
          format: int64
          example: 1
    GetBusinessJobConfigResponse:
      type: object
      description: GetBusinessJobConfigResponse
      properties:
        businessJobs:
          type: array
          items:
            type: string
    GetBusinessStepConfigResponse:
      type: object
      description: GetBusinessStepConfigResponse
      properties:
        businessSteps:
          type: array
          items:
            $ref: '#/components/schemas/BusinessStep'
        jobName:
          type: string
          example: CLOSE_OF_BUSINESS
    GetCachesResponse:
      type: object
      description: GetCachesResponse
      properties:
        cacheType:
          $ref: '#/components/schemas/EnumOptionData'
        enabled:
          type: boolean
    GetCentersAccountType:
      type: object
      properties:
        code:
          type: string
          example: accountType.group
        description:
          type: string
          example: Group
        id:
          type: integer
          format: int64
          example: 2
    GetCentersCenterIdAccountsResponse:
      type: object
      description: GetCentersCenterIdAccountsResponse
      properties:
        savingsAccounts:
          type: array
          items:
            $ref: '#/components/schemas/GetCentersSavingsAccounts'
          uniqueItems: true
    GetCentersCenterIdCurrency:
      type: object
      properties:
        code:
          type: string
          example: USD
        decimalPlaces:
          type: integer
          format: int32
          example: 2
        displayLabel:
          type: string
          example: US Dollar ($)
        displaySymbol:
          type: string
          example: $
        inMultiplesOf:
          type: integer
          format: int32
          example: 0
        name:
          type: string
          example: US Dollar
        nameCode:
          type: string
          example: currency.USD
    GetCentersCenterIdResponse:
      type: object
      description: GetCentersCenterIdResponse
      properties:
        active:
          type: boolean
          example: false
        hierarchy:
          type: string
          example: .8.
        id:
          type: integer
          format: int64
          example: 8
        name:
          type: string
          example: First Center (No groups)
        officeId:
          type: integer
          format: int64
          example: 1
        officeName:
          type: string
          example: Head Office
        status:
          $ref: '#/components/schemas/GetCentersStatus'
    GetCentersCenterIdStatus:
      type: object
      properties:
        active:
          type: boolean
          example: false
        approved:
          type: boolean
          example: false
        closed:
          type: boolean
          example: false
        code:
          type: string
          example: savingsAccountStatusType.submitted.and.pending.approval
        description:
          type: string
          example: Submitted and pending approval
        id:
          type: integer
          format: int64
          example: 100
        prematureClosed:
          type: boolean
          example: false
        rejected:
          type: boolean
          example: false
        submittedAndPendingApproval:
          type: boolean
          example: true
        transferInProgress:
          type: boolean
          example: false
        transferOnHold:
          type: boolean
          example: false
        withdrawnByApplicant:
          type: boolean
          example: false
    GetCentersDepositType:
      type: object
      properties:
        code:
          type: string
          example: depositAccountType.savingsDeposit
        description:
          type: string
          example: Savings
        id:
          type: integer
          format: int64
          example: 100
    GetCentersOfficeOptions:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Head Office
        nameDecorated:
          type: string
          example: Head Office
    GetCentersPageItems:
      type: object
      properties:
        active:
          type: boolean
          example: false
        hierarchy:
          type: string
          example: .2.
        id:
          type: integer
          format: int64
          example: 2
        name:
          type: string
          example: Center 1
        officeId:
          type: integer
          format: int64
          example: 1
        officeName:
          type: string
          example: Head Office
        status:
          $ref: '#/components/schemas/GetCentersStatus'
    GetCentersResponse:
      type: object
      description: GetCentersResponse
      properties:
        pageItems:
          type: array
          items:
            $ref: '#/components/schemas/GetCentersPageItems'
          uniqueItems: true
        totalFilteredRecords:
          type: integer
          format: int32
          example: 2
    GetCentersSavingsAccounts:
      type: object
      properties:
        accountNo:
          type: integer
          format: int64
          example: 16
        accountType:
          $ref: '#/components/schemas/GetCentersAccountType'
        currency:
          $ref: '#/components/schemas/GetCentersCenterIdCurrency'
        depositType:
          $ref: '#/components/schemas/GetCentersDepositType'
        id:
          type: integer
          format: int64
          example: 16
        productId:
          type: integer
          format: int64
          example: 1
        productName:
          type: string
          example: Voluntary savings
        status:
          $ref: '#/components/schemas/GetCentersCenterIdStatus'
        timeline:
          $ref: '#/components/schemas/GetCentersTimeline'
    GetCentersStaffOptions:
      type: object
      properties:
        displayName:
          type: string
          example: "D, Mary"
        id:
          type: integer
          format: int64
          example: 2
    GetCentersStatus:
      type: object
      properties:
        code:
          type: string
          example: groupingStatusType.pending
        description:
          type: string
          example: Pending
        id:
          type: integer
          format: int64
          example: 100
    GetCentersTemplateResponse:
      type: object
      description: GetCentersTemplateResponse
      properties:
        activationDate:
          type: string
          format: date
        active:
          type: boolean
          example: false
        officeId:
          type: integer
          format: int64
          example: 2
        officeOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetCentersOfficeOptions'
          uniqueItems: true
        staffOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetCentersStaffOptions'
          uniqueItems: true
    GetCentersTimeline:
      type: object
      properties:
        submittedByFirstname:
          type: string
          example: App
        submittedByLastname:
          type: string
          example: Administrator
        submittedByUsername:
          type: string
          example: mifos
        submittedOnDate:
          type: string
          format: date
    GetChargeAppliesTo:
      type: object
      properties:
        code:
          type: string
          example: chargeAppliesTo.shares
        description:
          type: string
          example: Shares
        id:
          type: integer
          format: int64
          example: 4
    GetChargeCalculationType:
      type: object
      properties:
        code:
          type: string
          example: chargeCalculationType.flat
        description:
          type: string
          example: Flat
        id:
          type: integer
          format: int64
          example: 1
    GetChargePaymentMode:
      type: object
      properties:
        code:
          type: string
          example: chargepaymentmode.regular
        description:
          type: string
          example: Regular
        id:
          type: integer
          format: int64
          example: 0
    GetChargeTimeType:
      type: object
      properties:
        code:
          type: string
          example: chargeTimeType.activation
        description:
          type: string
          example: Share Account Activate
        id:
          type: integer
          format: int64
          example: 13
    GetChargesAppliesTo:
      type: object
      properties:
        code:
          type: string
          example: chargeAppliesTo.savings
        description:
          type: string
          example: Savings
        id:
          type: integer
          format: int32
          example: 1
    GetChargesAppliesToResponse:
      type: object
      properties:
        code:
          type: string
          example: chargeAppliesTo.loan
        description:
          type: string
          example: Loan
        id:
          type: integer
          format: int64
          example: 1
    GetChargesCalculationTypeResponse:
      type: object
      properties:
        code:
          type: string
          example: chargeCalculationType.flat
        description:
          type: string
          example: Flat
        id:
          type: integer
          format: int64
          example: 1
    GetChargesChargeCalculationType:
      type: object
      properties:
        code:
          type: string
          example: chargeCalculationType.flat
        description:
          type: string
          example: Flat
        id:
          type: integer
          format: int32
          example: 1
    GetChargesChargeTimeType:
      type: object
      properties:
        code:
          type: string
          example: chargeTimeType.specifiedDueDate
        description:
          type: string
          example: Specified due date
        id:
          type: integer
          format: int32
          example: 1
    GetChargesCurrency:
      type: object
      properties:
        code:
          type: string
          example: USD
        decimalPlaces:
          type: integer
          format: int32
          example: 2
        displayLabel:
          type: string
          example: US Dollar ($)
        displaySymbol:
          type: string
          example: $
        name:
          type: string
          example: US Dollar
        nameCode:
          type: string
          example: currency.USD
    GetChargesCurrencyResponse:
      type: object
      properties:
        code:
          type: string
          example: USD
        decimalPlaces:
          type: integer
          format: int32
          example: 2
        displayLabel:
          type: string
          example: US Dollar ($)
        displaySymbol:
          type: string
          example: $
        name:
          type: string
          example: US Dollar
        nameCode:
          type: string
          example: currency.USD
    GetChargesPaymentModeResponse:
      type: object
      properties:
        code:
          type: string
          example: chargepaymentmode.accounttransfer
        description:
          type: string
          example: Account Transfer
        id:
          type: integer
          format: int64
          example: 1
    GetChargesResponse:
      type: object
      description: GetChargesResponse
      properties:
        active:
          type: boolean
          example: true
        amount:
          type: number
          format: double
          example: 230.56
        chargeAppliesTo:
          $ref: '#/components/schemas/GetChargesAppliesToResponse'
        chargeCalculationType:
          $ref: '#/components/schemas/GetChargesCalculationTypeResponse'
        chargePaymentMode:
          $ref: '#/components/schemas/GetChargesPaymentModeResponse'
        chargeTimeType:
          $ref: '#/components/schemas/GetChargesTimeTypeResponse'
        currency:
          $ref: '#/components/schemas/GetChargesCurrencyResponse'
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Loan Service fee
        penalty:
          type: boolean
          example: false
    GetChargesTemplateFeeFrequencyOptions:
      type: object
      properties:
        code:
          type: string
          example: loanTermFrequency.periodFrequencyType.days
        description:
          type: string
          example: Days
        id:
          type: integer
          format: int64
          example: 0
    GetChargesTemplateLoanChargeCalculationTypeOptions:
      type: object
      properties:
        code:
          type: string
          example: chargeCalculationType.flat
        description:
          type: string
          example: Flat
        id:
          type: integer
          format: int64
          example: 1
    GetChargesTemplateLoanChargeTimeTypeOptions:
      type: object
      properties:
        code:
          type: string
          example: chargeTimeType.specifiedDueDate
        description:
          type: string
          example: Specified due date
        id:
          type: integer
          format: int64
          example: 2
    GetChargesTemplateResponse:
      type: object
      description: GetChargesTemplateResponse
      properties:
        active:
          type: boolean
          example: false
        chargeAppliesToOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetChargesAppliesToResponse'
          uniqueItems: true
        chargeCalculationTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetChargesCalculationTypeResponse'
          uniqueItems: true
        chargePaymentModeOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetChargesPaymentModeResponse'
          uniqueItems: true
        chargeTimeTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetChargesTimeTypeResponse'
          uniqueItems: true
        currencyOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetChargesCurrencyResponse'
          uniqueItems: true
        feeFrequencyOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetChargesTemplateFeeFrequencyOptions'
          uniqueItems: true
        loanChargeCalculationTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetChargesTemplateLoanChargeCalculationTypeOptions'
          uniqueItems: true
        loanChargeTimeTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetChargesTemplateLoanChargeTimeTypeOptions'
          uniqueItems: true
        penalty:
          type: boolean
          example: false
        savingsChargeCalculationTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetChargesTemplateLoanChargeCalculationTypeOptions'
          uniqueItems: true
        savingsChargeTimeTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetChargesTemplateLoanChargeTimeTypeOptions'
          uniqueItems: true
    GetChargesTimeTypeResponse:
      type: object
      properties:
        code:
          type: string
          example: chargeTimeType.disbursement
        description:
          type: string
          example: Disbursement
        id:
          type: integer
          format: int64
          example: 1
    GetClientChargeCalculationType:
      type: object
      properties:
        code:
          type: string
          example: chargeCalculationType.flat
        description:
          type: string
          example: Flat
        id:
          type: integer
          format: int32
          example: 1
    GetClientChargeCurrency:
      type: object
      properties:
        code:
          type: string
          example: USD
        decimalPlaces:
          type: integer
          format: int32
          example: 2
        displayLabel:
          type: string
          example: US Dollar ($)
        displaySymbol:
          type: string
          example: $
        name:
          type: string
          example: US Dollar
        nameCode:
          type: string
          example: currency.USD
    GetClientChargeTimeType:
      type: object
      properties:
        code:
          type: string
          example: chargeTimeType.specifiedDueDate
        description:
          type: string
          example: Specified due date
        id:
          type: integer
          format: int32
          example: 2
    GetClientClientIdAddressesResponse:
      type: object
      description: GetClientClientIdAddressesResponse
      properties:
        addressId:
          type: integer
          format: int64
          example: 14
        addressLine1:
          type: string
          example: test123
        addressLine2:
          type: string
          example: iuyt
        addressLine3:
          type: string
        addressType:
          type: string
          example: PERMANENT ADDRESS
        addressTypeId:
          type: integer
          format: int64
          example: 804
        city:
          type: string
          example: mumbai
        client_id:
          type: integer
          format: int64
          example: 111755
        countryId:
          type: integer
          format: int64
          example: 807
        countryName:
          type: string
          example: UNITED STATES
        countyDistrict:
          type: string
        createdBy:
          type: string
        isActive:
          type: boolean
          example: false
        postalCode:
          type: integer
          format: int64
          example: 400095
        stateName:
          type: string
          example: GUJRAT
        stateProvinceId:
          type: integer
          format: int64
          example: 801
        street:
          type: string
          example: anki's home
        townVillage:
          type: string
        updatedBy:
          type: string
    GetClientCollateralManagementsResponse:
      type: object
      description: GetClientCollateralManagementsResponse
    GetClientIdProductIdAccountingMappings:
      type: object
      properties:
        ShareEquityId:
          $ref: '#/components/schemas/GetShareAccountsShareEquityId'
        incomeFromFeeAccountId:
          $ref: '#/components/schemas/GetShareAccountsIncomeFromFeeAccountId'
        shareReferenceId:
          $ref: '#/components/schemas/GetShareAccountsShareReferenceId'
        shareSuspenseId:
          $ref: '#/components/schemas/GetShareAccountsShareSuspenseId'
    GetClientIdProductIdChargeOptions:
      type: object
      properties:
        chargeOptions:
          $ref: '#/components/schemas/GetShareAccountsChargeOptions'
    GetClientIdProductIdLockinPeriodFrequencyTypeOptions:
      type: object
      properties:
        code:
          type: string
          example: shares.lockin.sharePeriodFrequencyType.days
        description:
          type: integer
          format: int32
        id:
          type: integer
          format: int32
          example: 0
    GetClientIdProductIdMinimumActivePeriodFrequencyTypeOptions:
      type: object
      properties:
        code:
          type: string
          example: shares.lockin.sharePeriodFrequencyType.days
        description:
          type: integer
          format: int32
        id:
          type: integer
          format: int32
          example: 0
    GetClientIdProductIdProductOptions:
      type: object
      properties:
        accountingMappingOptions:
          $ref: '#/components/schemas/GetAccountingMappingOptions'
        accountingMappings:
          $ref: '#/components/schemas/GetClientIdProductIdAccountingMappings'
        accountingRule:
          $ref: '#/components/schemas/GetShareAccountsClientIdProductIdAccountingRule'
        allowDividendCalculationForInactiveClients:
          type: boolean
          example: false
        chargeOptions:
          $ref: '#/components/schemas/GetShareAccountsChargeOptions'
        charges:
          type: string
          example: "[]"
        currency:
          $ref: '#/components/schemas/GetShareAccountsCurrency'
        currencyOptions:
          $ref: '#/components/schemas/GetShareAccountsCurrency'
        description:
          type: string
          example: SP1
        id:
          type: integer
          format: int32
          example: 3
        lockinPeriod:
          type: integer
          format: int32
          example: 50
        lockinPeriodEnum:
          $ref: '#/components/schemas/GetShareAccountsClientIdProductIdLockPeriodTypeEnum'
        lockinPeriodFrequencyTypeOptions:
          $ref: '#/components/schemas/GetClientIdProductIdLockinPeriodFrequencyTypeOptions'
        marketPrice:
          type: string
          example: "[]"
        maximumShares:
          type: integer
          format: int32
          example: 500
        minimumActivePeriod:
          type: integer
          format: int32
          example: 10
        minimumActivePeriodForDividendsTypeEnum:
          $ref: '#/components/schemas/GetShareAccountsClientIdProductIdMinimumActivePeriodForDividendsTypeEnum'
        minimumActivePeriodFrequencyTypeOptions:
          $ref: '#/components/schemas/GetClientIdProductIdMinimumActivePeriodFrequencyTypeOptions'
        minimumShares:
          type: integer
          format: int32
          example: 8
        name:
          type: string
          example: SP
        norminalShares:
          type: integer
          format: int32
          example: 500
        shareCapital:
          type: integer
          format: int32
          example: 900
        shortName:
          type: string
          example: SP
        totalShares:
          type: integer
          format: int32
          example: 1000
        totalSharesIssued:
          type: integer
          format: int32
          example: 900
        unitPrice:
          type: integer
          format: int32
          example: 1
    GetClientObligeeDetailsResponse:
      type: object
      description: GetClientObligeeDetailsResponse
      properties:
        obligees:
          type: array
          items:
            $ref: '#/components/schemas/GetObligeeData'
          uniqueItems: true
    GetClientStatus:
      type: object
      properties:
        code:
          type: string
          example: clientStatusType.pending
        description:
          type: string
          example: Pending
        id:
          type: integer
          format: int64
          example: 100
    GetClientTransactionsCurrency:
      type: object
      properties:
        code:
          type: string
          example: USD
        decimalPlaces:
          type: integer
          format: int32
          example: 2
        displayLabel:
          type: string
          example: US Dollar ($)
        displaySymbol:
          type: string
          example: $
        name:
          type: string
          example: US Dollar
        nameCode:
          type: string
          example: currency.USD
    GetClientTransferProposalDateResponse:
      type: object
      description: GetClientTransferProposalDateResponse
      properties:
        proposedTransferDate:
          type: string
          format: date
    GetClientsAllowedDocumentTypes:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Passport
        position:
          type: integer
          format: int32
          example: 0
    GetClientsChargesPageItems:
      type: object
      properties:
        amount:
          type: number
          example: 100.0
        amountOutstanding:
          type: number
          example: 0.0
        amountPaid:
          type: number
          example: 0
        amountWaived:
          type: number
          example: 100.0
        amountWrittenOff:
          type: number
          example: 0
        chargeCalculationType:
          $ref: '#/components/schemas/GetClientChargeCalculationType'
        chargeId:
          type: integer
          format: int64
          example: 5
        chargeTimeType:
          $ref: '#/components/schemas/GetClientChargeTimeType'
        clientId:
          type: integer
          format: int64
          example: 1
        currency:
          $ref: '#/components/schemas/GetClientChargeCurrency'
        dueDate:
          type: string
          format: date
        id:
          type: integer
          format: int64
          example: 3
        isActive:
          type: boolean
          example: true
        isPaid:
          type: boolean
          example: false
        isWaived:
          type: boolean
          example: true
        name:
          type: string
          example: Client Fee 1
        penalty:
          type: boolean
          example: true
    GetClientsClientIdAccountsResponse:
      type: object
      description: GetClientsClientIdAccountsResponse
      properties:
        loanAccounts:
          type: array
          items:
            $ref: '#/components/schemas/GetClientsLoanAccounts'
          uniqueItems: true
        savingsAccounts:
          type: array
          items:
            $ref: '#/components/schemas/GetClientsSavingsAccounts'
          uniqueItems: true
    GetClientsClientIdChargesResponse:
      type: object
      description: GetClientsClientIdChargesResponse
      properties:
        pageItems:
          type: array
          items:
            $ref: '#/components/schemas/GetClientsChargesPageItems'
          uniqueItems: true
        totalFilteredRecords:
          type: integer
          format: int32
          example: 4
    GetClientsClientIdIdentifiersResponse:
      type: object
      description: GetClientsClientIdIdentifiersResponse
      properties:
        clientId:
          type: integer
          format: int64
          example: 1
        description:
          type: string
          example: Issued in the year 2--7
        documentKey:
          type: string
          example: "12345"
        documentType:
          $ref: '#/components/schemas/GetClientsDocumentType'
        id:
          type: integer
          format: int64
          example: 2
    GetClientsClientIdIdentifiersTemplateResponse:
      type: object
      description: GetClientsClientIdIdentifiersTemplateResponse
      properties:
        allowedDocumentTypes:
          type: array
          items:
            $ref: '#/components/schemas/GetClientsAllowedDocumentTypes'
          uniqueItems: true
    GetClientsClientIdResponse:
      type: object
      description: GetClientsClientIdResponse
      properties:
        accountNo:
          type: string
          example: "000000027"
        activationDate:
          type: string
          format: date
        active:
          type: boolean
          example: true
        displayName:
          type: string
          example: savings test
        emailAddress:
          type: string
          example: test@test.com
        externalId:
          type: string
          example: "123"
        firstname:
          type: string
          example: savings
        groups:
          type: array
          example: []
          items:
            $ref: '#/components/schemas/GetClientsGroups'
        id:
          type: integer
          format: int64
          example: 27
        lastname:
          type: string
          example: test
        officeId:
          type: integer
          format: int64
          example: 1
        officeName:
          type: string
          example: Head Office
        savingsProductId:
          type: integer
          format: int64
          example: 4
        savingsProductName:
          type: string
          example: account overdraft
        status:
          $ref: '#/components/schemas/GetClientsClientIdStatus'
        timeline:
          $ref: '#/components/schemas/GetClientsTimeline'
    GetClientsClientIdStatus:
      type: object
      properties:
        code:
          type: string
          example: clientStatusType.active
        description:
          type: string
          example: Active
        id:
          type: integer
          format: int64
          example: 300
    GetClientsClientIdTransactionsResponse:
      type: object
      description: GetClientsClientIdTransactionsResponse
      properties:
        pageItems:
          type: array
          items:
            $ref: '#/components/schemas/GetClientsPageItems'
          uniqueItems: true
        totalFilteredRecords:
          type: integer
          format: int32
          example: 20
    GetClientsClientIdTransactionsTransactionIdResponse:
      type: object
      description: GetClientsClientIdTransactionsTransactionIdResponse
      properties:
        amount:
          type: number
          example: 60.0
        currency:
          $ref: '#/components/schemas/GetClientTransactionsCurrency'
        date:
          type: string
          format: date
        id:
          type: integer
          format: int64
          example: 1
        officeId:
          type: integer
          format: int64
          example: 1
        officeName:
          type: string
          example: Head Office
        reversed:
          type: boolean
          example: true
        submittedOnDate:
          type: string
          format: date
        type:
          $ref: '#/components/schemas/GetClientsClientIdTransactionsType'
    GetClientsClientIdTransactionsType:
      type: object
      properties:
        code:
          type: string
          example: clientTransactionType.payCharge
        description:
          type: string
          example: PAY_CHARGE
        id:
          type: integer
          format: int64
          example: 1
    GetClientsColumnHeaderData:
      type: object
      properties:
        columnDisplayType:
          type: string
          example: INTEGER
        columnLength:
          type: integer
          format: int32
          example: 0
        columnName:
          type: string
          example: client_id
        columnType:
          type: string
          example: bigint
        columnValues:
          type: array
          example: []
          items:
            type: string
            example: "[]"
        isColumnNullable:
          type: boolean
          example: false
        isColumnPrimaryKey:
          type: boolean
          example: true
    GetClientsDataTables:
      type: object
      properties:
        applicationTableName:
          type: string
          example: m_client
        columnHeaderData:
          type: array
          items:
            $ref: '#/components/schemas/GetClientsColumnHeaderData'
          uniqueItems: true
        registeredTableName:
          type: string
          example: Address Details
    GetClientsDocumentType:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 3
        name:
          type: string
          example: Drivers License
    GetClientsGroups:
      type: object
      example: []
      properties:
        accountNo:
          type: string
          example: "000000002"
        externalId:
          type: integer
          format: int64
          example: 3
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Group name
    GetClientsLoanAccounts:
      type: object
      properties:
        accountNo:
          type: string
          example: "000000001"
        externalId:
          type: string
          example: "456"
        id:
          type: integer
          format: int64
          example: 1
        loanCycle:
          type: integer
          format: int32
          example: 1
        loanType:
          $ref: '#/components/schemas/GetClientsLoanAccountsType'
        productId:
          type: integer
          format: int64
          example: 1
        productName:
          type: string
          example: TestOne
        status:
          $ref: '#/components/schemas/GetClientsLoanAccountsStatus'
    GetClientsLoanAccountsStatus:
      type: object
      properties:
        active:
          type: boolean
          example: true
        closed:
          type: boolean
          example: false
        closedObligationsMet:
          type: boolean
          example: false
        closedRescheduled:
          type: boolean
          example: false
        closedWrittenOff:
          type: boolean
          example: false
        code:
          type: string
          example: loanStatusType.active
        description:
          type: string
          example: Active
        id:
          type: integer
          format: int64
          example: 300
        overpaid:
          type: boolean
          example: false
        pendingApproval:
          type: boolean
          example: false
        waitingForDisbursal:
          type: boolean
          example: false
    GetClientsLoanAccountsType:
      type: object
      properties:
        code:
          type: string
          example: loanType.individual
        description:
          type: string
          example: Individual
        id:
          type: integer
          format: int64
          example: 1
    GetClientsOfficeOptions:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Head Office
        nameDecorated:
          type: string
          example: Head Office
    GetClientsPageItems:
      type: object
      properties:
        amount:
          type: number
          format: double
          example: 22
        currency:
          $ref: '#/components/schemas/GetClientTransactionsCurrency'
        date:
          type: string
          format: date
        id:
          type: integer
          format: int64
          example: 226
        officeId:
          type: integer
          format: int64
          example: 1
        officeName:
          type: string
          example: Head Office
        reversed:
          type: boolean
          example: false
        submittedOnDate:
          type: string
          format: date
        type:
          $ref: '#/components/schemas/GetClientsClientIdTransactionsType'
    GetClientsPageItemsResponse:
      type: object
      properties:
        accountNo:
          type: string
          example: "000000002"
        active:
          type: boolean
          example: false
        displayName:
          type: string
          example: Home Farm Produce
        emailAddress:
          type: string
          example: test@test.com
        fullname:
          type: string
          example: Home Farm Produce
        id:
          type: integer
          format: int64
          example: 2
        officeId:
          type: integer
          format: int64
          example: 1
        officeName:
          type: string
          example: Head Office
        status:
          $ref: '#/components/schemas/GetClientStatus'
    GetClientsResponse:
      type: object
      description: GetClientsResponse
      properties:
        pageItems:
          type: array
          items:
            $ref: '#/components/schemas/GetClientsPageItemsResponse'
          uniqueItems: true
        totalFilteredRecords:
          type: integer
          format: int32
          example: 2
    GetClientsSavingProductOptions:
      type: object
      properties:
        allowOverdraft:
          type: boolean
          example: false
        id:
          type: integer
          format: int64
          example: 4
        name:
          type: string
          example: account overdraft
        withdrawalFeeForTransfers:
          type: boolean
          example: false
    GetClientsSavingsAccounts:
      type: object
      properties:
        accountNo:
          type: string
          example: "000000007"
        currency:
          $ref: '#/components/schemas/GetClientsSavingsAccountsCurrency'
        depositType:
          $ref: '#/components/schemas/GetClientsSavingsAccountsDepositType'
        id:
          type: integer
          format: int64
          example: 7
        productId:
          type: integer
          format: int64
          example: 2
        productName:
          type: string
          example: Other product
        shortProductName:
          type: string
          example: OP
        status:
          $ref: '#/components/schemas/GetClientsSavingsAccountsStatus'
    GetClientsSavingsAccountsCurrency:
      type: object
      properties:
        code:
          type: string
          example: USD
        decimalPlaces:
          type: integer
          format: int32
          example: 2
        displayLabel:
          type: string
          example: US Dollar ($)
        displaySymbol:
          type: string
          example: $
        name:
          type: string
          example: US Dollar
        nameCode:
          type: string
          example: currency.USD
    GetClientsSavingsAccountsDepositType:
      type: object
      properties:
        code:
          type: string
          example: depositAccountType.savingsDeposit
        id:
          type: integer
          format: int64
          example: 100
        value:
          type: string
          example: Savings
    GetClientsSavingsAccountsStatus:
      type: object
      properties:
        active:
          type: boolean
          example: false
        approved:
          type: boolean
          example: false
        closed:
          type: boolean
          example: false
        code:
          type: string
          example: savingsAccountStatusType.submitted.and.pending.approval
        id:
          type: integer
          format: int64
          example: 100
        matured:
          type: boolean
          example: false
        prematureClosed:
          type: boolean
          example: false
        rejected:
          type: boolean
          example: false
        submittedAndPendingApproval:
          type: boolean
          example: true
        transferInProgress:
          type: boolean
          example: false
        transferOnHold:
          type: boolean
          example: false
        value:
          type: string
          example: Submitted and pending approval
        withdrawnByApplicant:
          type: boolean
          example: false
    GetClientsStaffOptions:
      type: object
      properties:
        displayName:
          type: string
          example: "sjs, xyz"
        firstname:
          type: string
          example: xyz
        id:
          type: integer
          format: int64
          example: 1
        isActive:
          type: boolean
          example: true
        isLoanOfficer:
          type: boolean
          example: true
        lastname:
          type: string
          example: sjs
        officeId:
          type: integer
          format: int64
          example: 1
        officeName:
          type: string
          example: Head Office
    GetClientsTemplateResponse:
      type: object
      description: GetClientsTemplateResponse
      properties:
        activationDate:
          type: string
          format: date
        datatables:
          type: array
          items:
            $ref: '#/components/schemas/GetClientsDataTables'
          uniqueItems: true
        officeId:
          type: integer
          format: int64
          example: 1
        officeOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetClientsOfficeOptions'
          uniqueItems: true
        savingProductOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetClientsSavingProductOptions'
          uniqueItems: true
        staffOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetClientsStaffOptions'
          uniqueItems: true
    GetClientsTimeline:
      type: object
      properties:
        activatedByFirstname:
          type: string
          example: App
        activatedByLastname:
          type: string
          example: Administrator
        activatedByUsername:
          type: string
          example: mifos
        activatedOnDate:
          type: string
          format: date
        submittedByFirstname:
          type: string
          example: App
        submittedByLastname:
          type: string
          example: Administrator
        submittedByUsername:
          type: string
          example: mifos
        submittedOnDate:
          type: string
          format: date
    GetCodeValuesDataResponse:
      type: object
      description: GetCodeValuesDataResponse
      properties:
        description:
          type: string
          example: Passport information
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Passport
        position:
          type: integer
          format: int32
          example: 0
    GetCodesResponse:
      type: object
      description: GetCodesResponse
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Education
        systemDefined:
          type: boolean
          example: true
    GetCollateralCurrencyResponse:
      type: object
      properties:
        code:
          type: string
          example: USD
    GetCollateralManagementsResponse:
      type: object
      description: GetCollateralManagementsResponse
      properties:
        basePrice:
          type: number
          example: 20000
        currency:
          $ref: '#/components/schemas/GetCollateralCurrencyResponse'
        id:
          type: integer
          format: int64
          example: 8
        name:
          type: string
          example: Gold
        pctToBase:
          type: number
          example: 80
        unitType:
          type: string
          example: gm
    GetCollateralProductTemplate:
      type: object
      description: GetCollateralProductTemplate
      properties:
        currency:
          $ref: '#/components/schemas/GetCurrencyData'
    GetCollateralTypeResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 8
        name:
          type: string
          example: Gold
    GetCollateralsTemplateAllowedTypes:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 9
        name:
          type: string
          example: Silver
        position:
          type: integer
          format: int32
          example: 0
    GetCurrenciesResponse:
      type: object
      description: GetCurrenciesResponse
      properties:
        currencyOptions:
          type: array
          items:
            $ref: '#/components/schemas/CurrencyData'
        selectedCurrencyOptions:
          type: array
          items:
            $ref: '#/components/schemas/CurrencyData'
    GetCurrencyData:
      type: object
      properties:
        code:
          type: string
          example: USD
        decimalPlaces:
          type: integer
          format: int32
          example: 10
        displayLabel:
          type: string
          example: Dollars
        displaySymbol:
          type: string
          example: USD
        inMultiplesOf:
          type: integer
          format: int32
          example: 2
        name:
          type: string
          example: Dollars
        nameCode:
          type: string
          example: Dollars
    GetDataTablesResponse:
      type: object
      description: GetDataTablesResponse
      properties:
        applicationTableName:
          type: string
          example: m_client
        columnHeaderData:
          type: array
          items:
            $ref: '#/components/schemas/ResultsetColumnHeaderData'
        registeredTableName:
          type: string
          example: extra_client_details
    GetDelinquencyActionsResponse:
      type: object
      description: GetDelinquencyActionsResponse
      properties:
        action:
          type: string
          example: pause
        createdById:
          type: integer
          format: int64
          example: 1
        createdOn:
          type: string
          format: date-time
        endDate:
          type: string
          format: date
        id:
          type: integer
          format: int64
          example: 1
        lastModifiedOn:
          type: string
          format: date-time
        startDate:
          type: string
          format: date
        updatedById:
          type: integer
          format: int64
          example: 1
    GetDelinquencyBucketsResponse:
      type: object
      description: GetDelinquencyBucketsResponse
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Delinquent Bucket Set 1
        ranges:
          type: array
          items:
            $ref: '#/components/schemas/GetDelinquencyRangesResponse'
    GetDelinquencyRangesResponse:
      type: object
      description: GetDelinquencyRangesResponse
      properties:
        classification:
          type: string
          example: Delinquent 1
        id:
          type: integer
          format: int64
          example: 1
        maximumAgeDays:
          type: integer
          format: int32
          example: 3
        minimumAgeDays:
          type: integer
          format: int32
          example: 1
    GetDelinquencyTagHistoryResponse:
      type: object
      description: GetDelinquencyTagHistoryResponse
      properties:
        addedOnDate:
          type: string
          format: date
        delinquencyRange:
          $ref: '#/components/schemas/GetDelinquencyRangesResponse'
        id:
          type: integer
          format: int64
          example: 1
        liftedOnDate:
          type: string
          format: date
        loanId:
          type: integer
          format: int64
          example: 10
    GetEntityDatatableChecksResponse:
      type: object
      description: GetEntityDatatableChecksResponse
      properties:
        datatableName:
          type: string
        entity:
          type: string
        id:
          type: integer
          format: int64
        order:
          type: integer
          format: int64
        productId:
          type: integer
          format: int64
        productName:
          type: string
        status:
          $ref: '#/components/schemas/EnumOptionData'
        systemDefined:
          type: boolean
    GetEntityDatatableChecksTemplateResponse:
      type: object
      description: GetEntityDatatableChecksTemplateResponse
      properties:
        datatables:
          type: array
          items:
            $ref: '#/components/schemas/DatatableChecksData'
        entities:
          type: array
          items:
            type: string
        loanProductDatas:
          type: array
          items:
            $ref: '#/components/schemas/LoanProductData'
        savingsProductDatas:
          type: array
          items:
            $ref: '#/components/schemas/SavingsProductData'
        statusClient:
          type: array
          items:
            $ref: '#/components/schemas/DatatableCheckStatusData'
        statusGroup:
          type: array
          items:
            $ref: '#/components/schemas/DatatableCheckStatusData'
        statusLoans:
          type: array
          items:
            $ref: '#/components/schemas/DatatableCheckStatusData'
        statusSavings:
          type: array
          items:
            $ref: '#/components/schemas/DatatableCheckStatusData'
    GetEntityTypeEntityIdDocumentsResponse:
      type: object
      description: GetEntityTypeEntityIdDocumentsResponse
      properties:
        description:
          type: string
          example: A signed form signed by new member
        fileName:
          type: string
          example: CGAP.pdf
        id:
          type: integer
          format: int64
          example: 1
        location:
          type: string
        name:
          type: string
          example: Client Details Form
        parentEntityId:
          type: integer
          format: int64
          example: 1
        parentEntityType:
          type: string
          example: clients
        size:
          type: integer
          format: int64
          example: 5246719
        storageType:
          type: integer
          format: int32
        type:
          type: string
          example: application/pdf
    GetEquityType:
      type: object
      properties:
        code:
          type: string
          example: accountType.equity
        description:
          type: string
          example: EQUITY
        id:
          type: integer
          format: int64
          example: 3
    GetExternalEventConfigurationsResponse:
      type: object
      description: GetExternalEventConfigurationsResponse
      properties:
        externalEventConfiguration:
          type: array
          items:
            $ref: '#/components/schemas/ExternalEventConfigurationItemData'
    GetFieldConfigurationEntityResponse:
      type: object
      description: GetFieldConfigurationEntityResponse
      properties:
        entity:
          type: string
          example: ADDRESS
        field:
          type: string
          example: addressType
        fieldConfigurationId:
          type: integer
          format: int64
          example: 1
        is_enabled:
          type: string
          example: "true"
        is_mandatory:
          type: string
          example: "false"
        subentity:
          type: string
          example: CLIENT
        validation_regex:
          type: string
    GetFinancialActivityAccountsResponse:
      type: object
      description: GetFinancialActivityAccountsResponse
      properties:
        financialActivityData:
          $ref: '#/components/schemas/FinancialActivityData'
        glAccountData:
          $ref: '#/components/schemas/GLAccountData'
        id:
          type: integer
          format: int64
          example: 1
    GetFixedDepositAccountsAccountChart:
      type: object
      properties:
        accountId:
          type: integer
          format: int64
          example: 5
        accountNumber:
          type: integer
          format: int64
        chartSlabs:
          type: array
          items:
            $ref: '#/components/schemas/GetFixedDepositAccountsChartSlabs'
          uniqueItems: true
        fromDate:
          type: string
          format: date
        id:
          type: integer
          format: int64
          example: 4
        periodTypes:
          type: array
          items:
            $ref: '#/components/schemas/GetFixedDepositAccountsPeriodTypes'
          uniqueItems: true
    GetFixedDepositAccountsAccountChartCurrency:
      type: object
      properties:
        code:
          type: string
          example: USD
        decimalPlaces:
          type: integer
          format: int32
          example: 2
        displayLabel:
          type: string
          example: US Dollar ($)
        displaySymbol:
          type: string
          example: $
        name:
          type: string
          example: US Dollar
        nameCode:
          type: string
          example: currency.USD
    GetFixedDepositAccountsAccountIdCurrency:
      type: object
      properties:
        code:
          type: string
          example: USD
        decimalPlaces:
          type: integer
          format: int32
          example: 2
        displayLabel:
          type: string
          example: US Dollar ($)
        displaySymbol:
          type: string
          example: $
        inMultiplesOf:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: US Dollar
        nameCode:
          type: string
          example: currency.USD
    GetFixedDepositAccountsAccountIdResponse:
      type: object
      description: GetFixedDepositAccountsAccountIdResponse
      properties:
        accountChart:
          $ref: '#/components/schemas/GetFixedDepositAccountsAccountChart'
        accountNo:
          type: integer
          format: int64
        clientId:
          type: integer
          format: int64
          example: 1
        clientName:
          type: string
          example: Sangamesh N
        currency:
          $ref: '#/components/schemas/GetFixedDepositAccountsAccountIdCurrency'
        depositAmount:
          type: number
          format: float
          example: 5000
        depositPeriod:
          type: integer
          format: int32
          example: 6
        depositPeriodFrequency:
          $ref: '#/components/schemas/GetFixedDepositAccountsDepositPeriodFrequency'
        externalId:
          type: string
          example: FD-23
        fieldOfficerId:
          type: integer
          format: int64
          example: 0
        id:
          type: integer
          format: int64
          example: 1
        interestCalculationDaysInYearType:
          $ref: '#/components/schemas/GetFixedDepositAccountsInterestCalculationDaysInYearType'
        interestCalculationType:
          $ref: '#/components/schemas/GetFixedDepositAccountsInterestCalculationType'
        interestCompoundingPeriodType:
          $ref: '#/components/schemas/GetFixedDepositAccountsInterestCompoundingPeriodType'
        interestFreePeriodApplicable:
          type: boolean
          example: false
        interestPostingPeriodType:
          $ref: '#/components/schemas/GetFixedDepositAccountsInterestPostingPeriodType'
        maturityAmount:
          type: number
          format: float
          example: 5140.25
        maturityDate:
          type: string
          format: date
        maxDepositTerm:
          type: integer
          format: int32
          example: 4
        maxDepositTermType:
          $ref: '#/components/schemas/GetFixedDepositAccountsMaxDepositTermType'
        minDepositTerm:
          type: integer
          format: int32
          example: 3
        minDepositTermType:
          $ref: '#/components/schemas/GetFixedDepositAccountsMinDepositTermType'
        preClosurePenalApplicable:
          type: boolean
          example: false
        savingsProductId:
          type: integer
          format: int64
          example: 3
        savingsProductName:
          type: string
          example: FD01
        status:
          $ref: '#/components/schemas/GetFixedDepositAccountsStatus'
        summary:
          $ref: '#/components/schemas/GetFixedDepositAccountsAccountIdSummary'
        timeline:
          $ref: '#/components/schemas/GetFixedDepositAccountsTimeline'
    GetFixedDepositAccountsAccountIdSummary:
      type: object
      properties:
        accountBalance:
          type: number
          format: float
          example: 0
        currency:
          $ref: '#/components/schemas/GetFixedDepositAccountsAccountIdCurrency'
    GetFixedDepositAccountsChartSlabs:
      type: object
      properties:
        annualInterestRate:
          type: number
          format: double
          example: 5.5
        currency:
          $ref: '#/components/schemas/GetFixedDepositAccountsAccountChartCurrency'
        fromPeriod:
          type: integer
          format: int32
          example: 181
        id:
          type: integer
          format: int64
          example: 13
        periodType:
          $ref: '#/components/schemas/GetFixedDepositAccountsPeriodType'
        toPeriod:
          type: integer
          format: int32
          example: 365
    GetFixedDepositAccountsCurrency:
      type: object
      properties:
        code:
          type: string
          example: USD
        decimalPlaces:
          type: integer
          format: int32
          example: 2
        displayLabel:
          type: string
          example: US Dollar ($)
        displaySymbol:
          type: string
          example: $
        inMultiplesOf:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: US Dollar
        nameCode:
          type: string
          example: currency.USD
    GetFixedDepositAccountsDepositPeriodFrequency:
      type: object
      properties:
        code:
          type: string
          example: deposit.period.savingsPeriodFrequencyType.months
        description:
          type: string
          example: Months
        id:
          type: integer
          format: int64
          example: 2
    GetFixedDepositAccountsInterestCalculationDaysInYearType:
      type: object
      properties:
        code:
          type: string
          example: savingsInterestCalculationDaysInYearType.days365
        description:
          type: string
          example: 365 Days
        id:
          type: integer
          format: int64
          example: 365
    GetFixedDepositAccountsInterestCalculationType:
      type: object
      properties:
        code:
          type: string
          example: savingsInterestCalculationType.dailybalance
        description:
          type: string
          example: Daily Balance
        id:
          type: integer
          format: int64
          example: 1
    GetFixedDepositAccountsInterestCompoundingPeriodType:
      type: object
      properties:
        code:
          type: string
          example: savings.interest.period.savingsCompoundingInterestPeriodType.monthly
        description:
          type: string
          example: Monthly
        id:
          type: integer
          format: int64
          example: 4
    GetFixedDepositAccountsInterestPostingPeriodType:
      type: object
      properties:
        code:
          type: string
          example: savings.interest.posting.period.savingsPostingInterestPeriodType.monthly
        description:
          type: string
          example: Monthly
        id:
          type: integer
          format: int64
          example: 4
    GetFixedDepositAccountsMaxDepositTermType:
      type: object
      properties:
        code:
          type: string
          example: deposit.term.savingsPeriodFrequencyType.years
        description:
          type: string
          example: Years
        id:
          type: integer
          format: int64
          example: 3
    GetFixedDepositAccountsMinDepositTermType:
      type: object
      properties:
        code:
          type: string
          example: deposit.term.savingsPeriodFrequencyType.months
        description:
          type: string
          example: Months
        id:
          type: integer
          format: int64
          example: 2
    GetFixedDepositAccountsPeriodType:
      type: object
      properties:
        code:
          type: string
          example: interestChartPeriodType.days
        description:
          type: string
          example: Days
        id:
          type: integer
          format: int64
          example: 0
    GetFixedDepositAccountsPeriodTypes:
      type: object
      properties:
        code:
          type: string
          example: interestChartPeriodType.days
        description:
          type: string
          example: Days
        id:
          type: integer
          format: int64
          example: 0
    GetFixedDepositAccountsProductOptions:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Passbook Savings
    GetFixedDepositAccountsResponse:
      type: object
      description: GetFixedDepositAccountsResponse
      properties:
        accountNo:
          type: integer
          format: int64
          example: 1
        clientId:
          type: integer
          format: int64
          example: 1
        clientName:
          type: string
          example: Sangamesh N
        currency:
          $ref: '#/components/schemas/GetFixedDepositAccountsCurrency'
        depositAmount:
          type: number
          format: float
          example: 5000
        depositPeriod:
          type: integer
          format: int32
          example: 6
        depositPeriodFrequency:
          $ref: '#/components/schemas/GetFixedDepositAccountsDepositPeriodFrequency'
        fieldOfficerId:
          type: integer
          format: int64
          example: 0
        id:
          type: integer
          format: int64
          example: 1
        interestCalculationDaysInYearType:
          $ref: '#/components/schemas/GetFixedDepositAccountsInterestCalculationDaysInYearType'
        interestCalculationType:
          $ref: '#/components/schemas/GetFixedDepositAccountsInterestCalculationType'
        interestCompoundingPeriodType:
          $ref: '#/components/schemas/GetFixedDepositAccountsInterestCompoundingPeriodType'
        interestFreePeriodApplicable:
          type: boolean
          example: false
        interestPostingPeriodType:
          $ref: '#/components/schemas/GetFixedDepositAccountsInterestPostingPeriodType'
        maturityAmount:
          type: number
          format: float
          example: 5140.25
        maturityDate:
          type: string
          format: date
        maxDepositTerm:
          type: integer
          format: int32
          example: 4
        maxDepositTermType:
          $ref: '#/components/schemas/GetFixedDepositAccountsMaxDepositTermType'
        minDepositTerm:
          type: integer
          format: int32
          example: 3
        minDepositTermType:
          $ref: '#/components/schemas/GetFixedDepositAccountsMinDepositTermType'
        preClosurePenalApplicable:
          type: boolean
          example: false
        savingsProductId:
          type: integer
          format: int64
          example: 3
        savingsProductName:
          type: string
          example: FD01
        status:
          $ref: '#/components/schemas/GetFixedDepositAccountsStatus'
        summary:
          $ref: '#/components/schemas/GetFixedDepositAccountsSummary'
        timeline:
          $ref: '#/components/schemas/GetFixedDepositAccountsTimeline'
    GetFixedDepositAccountsStatus:
      type: object
      properties:
        active:
          type: boolean
          example: false
        approved:
          type: boolean
          example: false
        closed:
          type: boolean
          example: false
        code:
          type: string
          example: savingsAccountStatusType.submitted.and.pending.approval
        description:
          type: string
          example: Submitted and pending approval
        id:
          type: integer
          format: int64
          example: 100
        prematureClosed:
          type: boolean
          example: false
        rejected:
          type: boolean
          example: false
        submittedAndPendingApproval:
          type: boolean
          example: true
        transferInProgress:
          type: boolean
          example: false
        transferOnHold:
          type: boolean
          example: false
        withdrawnByApplicant:
          type: boolean
          example: false
    GetFixedDepositAccountsSummary:
      type: object
      properties:
        accountBalance:
          type: number
          format: float
          example: 0
        currency:
          $ref: '#/components/schemas/GetFixedDepositAccountsCurrency'
    GetFixedDepositAccountsTemplateResponse:
      type: object
      description: GetFixedDepositAccountsTemplateResponse
      properties:
        clientId:
          type: integer
          format: int64
          example: 1
        clientName:
          type: string
          example: small business
        productOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetFixedDepositAccountsProductOptions'
          uniqueItems: true
    GetFixedDepositAccountsTimeline:
      type: object
      properties:
        submittedByFirstname:
          type: string
          example: App
        submittedByLastname:
          type: string
          example: Administrator
        submittedByUsername:
          type: string
          example: mifos
        submittedOnDate:
          type: string
          format: date
    GetFixedDepositProductsAccountingRule:
      type: object
      properties:
        code:
          type: string
          example: accountingRuleType.none
        description:
          type: string
          example: NONE
        id:
          type: integer
          format: int64
          example: 1
    GetFixedDepositProductsCurrency:
      type: object
      properties:
        code:
          type: string
          example: USD
        decimalPlaces:
          type: integer
          format: int32
          example: 2
        displayLabel:
          type: string
          example: US Dollar ($)
        displaySymbol:
          type: string
          example: $
        inMultiplesOf:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: US Dollar
        nameCode:
          type: string
          example: currency.USD
    GetFixedDepositProductsGlAccount:
      type: object
      properties:
        glCode:
          type: integer
          format: int32
          example: 20
        id:
          type: integer
          format: int64
          example: 12
        name:
          type: string
          example: savings ref
    GetFixedDepositProductsInterestCalculationDaysInYearType:
      type: object
      properties:
        code:
          type: string
          example: savingsInterestCalculationDaysInYearType.days365
        description:
          type: string
          example: 365 Days
        id:
          type: integer
          format: int64
          example: 365
    GetFixedDepositProductsInterestCalculationType:
      type: object
      properties:
        code:
          type: string
          example: savingsInterestCalculationType.dailybalance
        description:
          type: string
          example: Daily Balance
        id:
          type: integer
          format: int64
          example: 1
    GetFixedDepositProductsInterestCompoundingPeriodType:
      type: object
      properties:
        code:
          type: string
          example: savings.interest.period.savingsCompoundingInterestPeriodType.monthly
        description:
          type: string
          example: Monthly
        id:
          type: integer
          format: int64
          example: 4
    GetFixedDepositProductsInterestPostingPeriodType:
      type: object
      properties:
        code:
          type: string
          example: savings.interest.posting.period.savingsPostingInterestPeriodType.monthly
        description:
          type: string
          example: Monthly
        id:
          type: integer
          format: int64
          example: 4
    GetFixedDepositProductsMaxDepositTermType:
      type: object
      properties:
        code:
          type: string
          example: deposit.term.savingsPeriodFrequencyType.years
        description:
          type: string
          example: Years
        id:
          type: integer
          format: int64
          example: 3
    GetFixedDepositProductsMinDepositTermType:
      type: object
      properties:
        code:
          type: string
          example: deposit.term.savingsPeriodFrequencyType.months
        description:
          type: string
          example: Months
        id:
          type: integer
          format: int64
          example: 2
    GetFixedDepositProductsProductIdAccountingMappings:
      type: object
      properties:
        feeReceivableAccount:
          $ref: '#/components/schemas/GetFixedDepositProductsGlAccount'
        incomeFromFeeAccount:
          $ref: '#/components/schemas/GetFixedDepositProductsGlAccount'
        incomeFromPenaltyAccount:
          $ref: '#/components/schemas/GetFixedDepositProductsGlAccount'
        interestOnSavingsAccount:
          $ref: '#/components/schemas/GetFixedDepositProductsGlAccount'
        interestPayableAccount:
          $ref: '#/components/schemas/GetFixedDepositProductsGlAccount'
        penaltyReceivableAccount:
          $ref: '#/components/schemas/GetFixedDepositProductsGlAccount'
        savingsControlAccount:
          $ref: '#/components/schemas/GetFixedDepositProductsGlAccount'
        savingsReferenceAccount:
          $ref: '#/components/schemas/GetFixedDepositProductsGlAccount'
        transfersInSuspenseAccount:
          $ref: '#/components/schemas/GetFixedDepositProductsGlAccount'
    GetFixedDepositProductsProductIdActiveChart:
      type: object
      properties:
        chartSlabs:
          type: array
          items:
            $ref: '#/components/schemas/GetFixedDepositProductsProductIdChartSlabs'
          uniqueItems: true
        fromDate:
          type: string
          format: date
        id:
          type: integer
          format: int64
          example: 8
        periodTypes:
          type: array
          items:
            $ref: '#/components/schemas/GetFixedDepositProductsProductIdPeriodType'
          uniqueItems: true
        savingsProductId:
          type: integer
          format: int64
          example: 8
        savingsProductName:
          type: string
          example: Fixed deposit product
    GetFixedDepositProductsProductIdChartSlabs:
      type: object
      properties:
        annualInterestRate:
          type: number
          format: double
          example: 4.5
        currency:
          $ref: '#/components/schemas/GetFixedDepositProductsProductIdCurrency'
        description:
          type: string
          example: from 0 to 90 days
        fromPeriod:
          type: integer
          format: int32
          example: 0
        id:
          type: integer
          format: int64
          example: 18
        periodType:
          $ref: '#/components/schemas/GetFixedDepositProductsProductIdPeriodType'
        toPeriod:
          type: integer
          format: int32
          example: 90
    GetFixedDepositProductsProductIdCurrency:
      type: object
      properties:
        code:
          type: string
          example: USD
        decimalPlaces:
          type: integer
          format: int32
          example: 2
        displayLabel:
          type: string
          example: US Dollar ($)
        displaySymbol:
          type: string
          example: $
        name:
          type: string
          example: US Dollar
        nameCode:
          type: string
          example: currency.USD
    GetFixedDepositProductsProductIdFeeToIncomeAccountMappings:
      type: object
      properties:
        charge:
          $ref: '#/components/schemas/GetFixedDepositProductsProductIdFeeToIncomeAccountMappingsCharge'
        incomeAccount:
          $ref: '#/components/schemas/GetFixedDepositProductsProductIdFeeToIncomeAccountMappingsIncomeAccount'
    GetFixedDepositProductsProductIdFeeToIncomeAccountMappingsCharge:
      type: object
      properties:
        active:
          type: boolean
          example: false
        id:
          type: integer
          format: int64
          example: 11
        name:
          type: string
          example: sav charge
        penalty:
          type: boolean
          example: false
    GetFixedDepositProductsProductIdFeeToIncomeAccountMappingsIncomeAccount:
      type: object
      properties:
        glCode:
          type: string
          example: "24"
        id:
          type: integer
          format: int64
          example: 16
        name:
          type: string
          example: income from savings fee
    GetFixedDepositProductsProductIdInterestCompoundingPeriodType:
      type: object
      properties:
        code:
          type: string
          example: savings.interest.period.savingsCompoundingInterestPeriodType.daily
        description:
          type: string
          example: Daily
        id:
          type: integer
          format: int64
          example: 1
    GetFixedDepositProductsProductIdMaxDepositTermType:
      type: object
      properties:
        code:
          type: string
          example: deposit.term.savingsPeriodFrequencyType.years
        description:
          type: string
          example: Years
        id:
          type: integer
          format: int64
          example: 3
    GetFixedDepositProductsProductIdMinDepositTermType:
      type: object
      properties:
        code:
          type: string
          example: deposit.term.savingsPeriodFrequencyType.weeks
        description:
          type: string
          example: Weeks
        id:
          type: integer
          format: int64
          example: 1
    GetFixedDepositProductsProductIdPenaltyToIncomeAccountMappings:
      type: object
      properties:
        charge:
          $ref: '#/components/schemas/GetFixedDepositProductsProductIdPenaltyToIncomeAccountMappingsCharge'
        incomeAccount:
          $ref: '#/components/schemas/GetFixedDepositProductsGlAccount'
    GetFixedDepositProductsProductIdPenaltyToIncomeAccountMappingsCharge:
      type: object
      properties:
        active:
          type: boolean
          example: false
        id:
          type: integer
          format: int64
          example: 12
        name:
          type: string
          example: sav 2
        penalty:
          type: boolean
          example: true
    GetFixedDepositProductsProductIdPeriodType:
      type: object
      properties:
        code:
          type: string
          example: interestChartPeriodType.weeks
        description:
          type: string
          example: Weeks
        id:
          type: integer
          format: int64
          example: 1
    GetFixedDepositProductsProductIdPreClosurePenalInterestOnType:
      type: object
      properties:
        code:
          type: string
          example: preClosurePenalInterestOnType.wholeTerm
        description:
          type: string
          example: Whole term
        id:
          type: integer
          format: int64
          example: 1
    GetFixedDepositProductsProductIdResponse:
      type: object
      description: GetFixedDepositProductsProductIdResponse
      properties:
        accountingMappings:
          $ref: '#/components/schemas/GetFixedDepositProductsProductIdAccountingMappings'
        activeChart:
          $ref: '#/components/schemas/GetFixedDepositProductsProductIdActiveChart'
        currency:
          $ref: '#/components/schemas/GetFixedDepositProductsProductIdCurrency'
        description:
          type: string
          example: "Daily compounding using Daily Balance, 5% per year, 365 days in\
            \ year"
        feeToIncomeAccountMappings:
          type: array
          items:
            $ref: '#/components/schemas/GetFixedDepositProductsProductIdFeeToIncomeAccountMappings'
          uniqueItems: true
        id:
          type: integer
          format: int64
          example: 1
        interestCalculationDaysInYearType:
          $ref: '#/components/schemas/GetFixedDepositProductsInterestCalculationDaysInYearType'
        interestCalculationType:
          $ref: '#/components/schemas/GetFixedDepositProductsInterestCalculationType'
        interestCompoundingPeriodType:
          $ref: '#/components/schemas/GetFixedDepositProductsProductIdInterestCompoundingPeriodType'
        interestPostingPeriodType:
          $ref: '#/components/schemas/GetFixedDepositProductsInterestPostingPeriodType'
        maxDepositTerm:
          type: integer
          format: int32
          example: 5
        maxDepositTermType:
          $ref: '#/components/schemas/GetFixedDepositProductsProductIdMaxDepositTermType'
        minDepositTerm:
          type: integer
          format: int32
          example: 1
        minDepositTermType:
          $ref: '#/components/schemas/GetFixedDepositProductsProductIdMinDepositTermType'
        name:
          type: string
          example: Fixed deposit product
        penaltyToIncomeAccountMappings:
          type: array
          items:
            $ref: '#/components/schemas/GetFixedDepositProductsProductIdPenaltyToIncomeAccountMappings'
          uniqueItems: true
        preClosurePenalApplicable:
          type: boolean
          example: true
        preClosurePenalInterest:
          type: number
          format: double
          example: 1.75
        preClosurePenalInterestOnType:
          $ref: '#/components/schemas/GetFixedDepositProductsProductIdPreClosurePenalInterestOnType'
        shortName:
          type: string
          example: FD01
    GetFixedDepositProductsResponse:
      type: object
      description: GetFixedDepositProductsResponse
      properties:
        accountingRule:
          $ref: '#/components/schemas/GetFixedDepositProductsAccountingRule'
        currency:
          $ref: '#/components/schemas/GetFixedDepositProductsCurrency'
        description:
          type: string
          example: FD01
        id:
          type: integer
          format: int64
          example: 3
        interestCalculationDaysInYearType:
          $ref: '#/components/schemas/GetFixedDepositProductsInterestCalculationDaysInYearType'
        interestCalculationType:
          $ref: '#/components/schemas/GetFixedDepositProductsInterestCalculationType'
        interestCompoundingPeriodType:
          $ref: '#/components/schemas/GetFixedDepositProductsInterestCompoundingPeriodType'
        interestPostingPeriodType:
          $ref: '#/components/schemas/GetFixedDepositProductsInterestPostingPeriodType'
        maxDepositTerm:
          type: integer
          format: int32
          example: 4
        maxDepositTermType:
          $ref: '#/components/schemas/GetFixedDepositProductsMaxDepositTermType'
        minDepositTerm:
          type: integer
          format: int32
          example: 3
        minDepositTermType:
          $ref: '#/components/schemas/GetFixedDepositProductsMinDepositTermType'
        name:
          type: string
          example: FD01
        nominalAnnualInterestRate:
          type: number
          format: double
          example: 0
        preClosurePenalApplicable:
          type: boolean
          example: false
        shortName:
          type: string
          example: FD01
    GetFloatingRatesFloatingRateIdResponse:
      type: object
      description: GetFloatingRatesFloatingRateIdResponse
      properties:
        createdBy:
          type: string
          example: mifos
        createdOn:
          type: string
          example: "Nov 18, 2015"
        id:
          type: integer
          format: int64
          example: 1
        isActive:
          type: boolean
          example: true
        isBaseLendingRate:
          type: boolean
          example: true
        modifiedBy:
          type: string
          example: mifos
        modifiedOn:
          type: string
          example: "Nov 18, 2015"
        name:
          type: string
          example: Floating Rate 1
        ratePeriods:
          type: array
          items:
            $ref: '#/components/schemas/GetFloatingRatesRatePeriods'
          uniqueItems: true
    GetFloatingRatesRatePeriods:
      type: object
      properties:
        createdBy:
          type: string
          example: mifos
        createdOn:
          type: string
          example: "Nov 18, 2015"
        fromDate:
          type: string
          example: "Dec 15, 2015"
        id:
          type: integer
          format: int64
          example: 1
        interestRate:
          type: number
          format: double
          example: 11
        isActive:
          type: boolean
          example: true
        isDifferentialToBaseLendingRate:
          type: boolean
          example: false
        modifiedBy:
          type: string
          example: mifos
        modifiedOn:
          type: string
          example: "Nov 18, 2015"
    GetFloatingRatesResponse:
      type: object
      description: GetFloatingRatesResponse
      properties:
        createdBy:
          type: string
          example: mifos
        createdOn:
          type: string
          example: "Nov 18, 2015"
        id:
          type: integer
          format: int64
          example: 1
        isActive:
          type: boolean
          example: true
        isBaseLendingRate:
          type: boolean
          example: true
        modifiedBy:
          type: string
          example: mifos
        modifiedOn:
          type: string
          example: "Nov 18, 2015"
        name:
          type: string
          example: Floating Rate 1
    GetFromAccountOptions:
      type: object
      properties:
        accountId:
          type: integer
          format: int64
          example: 2
        accountNo:
          type: integer
          format: int32
          example: 1
        accountType:
          $ref: '#/components/schemas/GetAccountOptions'
        clientId:
          type: integer
          format: int64
          example: 1
        clientName:
          type: string
          example: ABC
        officeId:
          type: integer
          format: int64
          example: 1
        officeName:
          type: string
          example: HEAD OFFICE
    GetFromAccountStandingInstructionSwagger:
      type: object
      properties:
        accountNo:
          type: integer
          format: int64
          example: 14
        id:
          type: integer
          format: int64
          example: 14
        productId:
          type: integer
          format: int64
          example: 1
        productName:
          type: string
          example: savings old
    GetFromAccountTypeOptionsResponseStandingInstructionSwagger:
      type: object
      properties:
        code:
          type: string
          example: accountType.savings
        description:
          type: string
          example: Savings Account
        id:
          type: integer
          format: int64
          example: 2
    GetFromAccountTypeResponseStandingInstructionSwagger:
      type: object
      properties:
        code:
          type: string
          example: accountType.savings
        description:
          type: string
          example: Savings Account
        id:
          type: integer
          format: int64
          example: 2
    GetFromAccountTypeStandingInstructionSwagger:
      type: object
      properties:
        code:
          type: string
          example: accountType.savings
        description:
          type: string
          example: Savings Account
        id:
          type: integer
          format: int32
          example: 2
    GetFromClientOptionsResponseStandingInstructionSwagger:
      type: object
      properties:
        displayName:
          type: string
          example: Client_FirstName_2VRAG Client_LastName_9QCY
        id:
          type: integer
          format: int64
          example: 1
        officeId:
          type: integer
          format: int64
          example: 1
        officeName:
          type: string
          example: Head Office
    GetFromClientStandingInstructionSwagger:
      type: object
      properties:
        displayName:
          type: string
          example: Test test
        id:
          type: integer
          format: int64
          example: 1
        officeId:
          type: integer
          format: int64
          example: 1
        officeName:
          type: string
          example: Head Office
    GetFromOfficeOptionsResponseStandingInstructionSwagger:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Head Office
        nameDecorated:
          type: string
          example: Head Office
    GetFromOfficeResponseStandingInstructionSwagger:
      type: object
      properties:
        decoratedName:
          type: string
          example: Head Office
        externalId:
          type: string
          example: "1"
        hierarchy:
          type: string
          example: "."
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Head Office
        openingDate:
          type: string
          format: date
    GetFromOfficeStandingInstructionSwagger:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Head Office
    GetFundsResponse:
      type: object
      description: GetFundsResponse
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: EU Agri Fund
    GetGLAccountsResponse:
      type: object
      description: GetGLAccountsResponse
      properties:
        description:
          type: string
          example: Desc
        disabled:
          type: boolean
          example: false
        glCode:
          type: string
          example: "100001"
        id:
          type: integer
          format: int64
          example: 16
        manualEntriesAllowed:
          type: boolean
          example: true
        name:
          type: string
          example: Cash
        nameDecorated:
          type: string
          example: '....Cash'
        organizationRunningBalance:
          type: integer
          format: int64
          example: 118437
        parentId:
          type: integer
          format: int64
          example: 1
        tagId:
          $ref: '#/components/schemas/CodeValueData'
        type:
          $ref: '#/components/schemas/EnumOptionData'
        usage:
          $ref: '#/components/schemas/EnumOptionData'
    GetGLAccountsTemplateResponse:
      type: object
      description: GetGLAccountsTemplateResponse
      properties:
        accountTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
        allowedAssetsTagOptions:
          type: array
          items:
            $ref: '#/components/schemas/CodeValueData'
        allowedEquityTagOptions:
          type: array
          items:
            $ref: '#/components/schemas/CodeValueData'
        allowedExpensesTagOptions:
          type: array
          items:
            $ref: '#/components/schemas/CodeValueData'
        allowedIncomeTagOptions:
          type: array
          items:
            $ref: '#/components/schemas/CodeValueData'
        allowedLiabilitiesTagOptions:
          type: array
          items:
            $ref: '#/components/schemas/CodeValueData'
        assetHeaderAccountOptions:
          type: array
          items:
            $ref: '#/components/schemas/GLAccountData'
        disabled:
          type: boolean
          example: false
        equityHeaderAccountOptions:
          type: array
          items:
            $ref: '#/components/schemas/GLAccountData'
        expenseHeaderAccountOptions:
          type: array
          items:
            $ref: '#/components/schemas/GLAccountData'
        liabilityHeaderAccountOptions:
          type: array
          items:
            $ref: '#/components/schemas/GLAccountData'
        manualEntriesAllowed:
          type: boolean
          example: true
        type:
          $ref: '#/components/schemas/EnumOptionData'
        usage:
          $ref: '#/components/schemas/EnumOptionData'
        usageOptions:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
    GetGlAccountMapping:
      type: object
      properties:
        glCode:
          type: string
          example: 012-34-65
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: Cash Account
    GetGlClosureResponse:
      type: object
      description: GetGLClosureResponse
      properties:
        closingDate:
          type: string
          format: date
        comments:
          type: string
          example: closed
        createdByUserId:
          type: integer
          format: int64
          example: 1
        createdByUsername:
          type: string
          example: mifos
        createdDate:
          type: string
          format: date
        deleted:
          type: boolean
          example: false
        id:
          type: integer
          format: int64
          example: 7
        lastUpdatedByUserId:
          type: integer
          format: int64
          example: 1
        lastUpdatedByUsername:
          type: string
          example: mifos
        lastUpdatedDate:
          type: string
          format: date
        officeId:
          type: integer
          format: int64
          example: 1
        officeName:
          type: string
          example: Head Office
    GetGlobalConfigurationsResponse:
      type: object
      description: GetGlobalConfigurationsResponse
      properties:
        globalConfiguration:
          type: array
          items:
            $ref: '#/components/schemas/GlobalConfigurationPropertyData'
    GetGroupsGroupIdAccountsLoanAccounts:
      type: object
      properties:
        accountNo:
          type: integer
          format: int64
          example: 3
        id:
          type: integer
          format: int64
          example: 3
        loanType:
          $ref: '#/components/schemas/GetGroupsGroupIdAccountsLoanType'
        productId:
          type: integer
          format: int64
          example: 3
        productName:
          type: string
          example: daily product
        status:
          $ref: '#/components/schemas/GetGroupsGroupIdAccountsStatus'
    GetGroupsGroupIdAccountsLoanType:
      type: object
      properties:
        code:
          type: string
          example: accountType.group
        description:
          type: string
          example: Group
        id:
          type: integer
          format: int64
          example: 2
    GetGroupsGroupIdAccountsMemberLoanAccounts:
      type: object
      properties:
        accountNo:
          type: integer
          format: int64
          example: 4
        id:
          type: integer
          format: int64
          example: 4
        loanType:
          $ref: '#/components/schemas/GetGroupsGroupIdAccountsMemberLoanType'
        productId:
          type: integer
          format: int64
          example: 1
        productName:
          type: string
          example: testLoan
        status:
          $ref: '#/components/schemas/GetGroupsGroupIdAccountsMemberLoanStatus'
    GetGroupsGroupIdAccountsMemberLoanStatus:
      type: object
      properties:
        active:
          type: boolean
          example: false
        closed:
          type: boolean
          example: false
        closedObligationsMet:
          type: boolean
          example: false
        closedRescheduled:
          type: boolean
          example: false
        closedWrittenOff:
          type: boolean
          example: false
        code:
          type: string
          example: loanStatusType.approved
        description:
          type: string
          example: Approved
        id:
          type: integer
          format: int64
          example: 200
        overpaid:
          type: boolean
          example: false
        pendingApproval:
          type: boolean
          example: false
        waitingForDisbursal:
          type: boolean
          example: true
    GetGroupsGroupIdAccountsMemberLoanType:
      type: object
      properties:
        code:
          type: string
          example: accountType.jlg
        description:
          type: string
          example: JLG
        id:
          type: integer
          format: int64
          example: 3
    GetGroupsGroupIdAccountsMemberSavingsAccounts:
      type: object
      properties:
        accountNo:
          type: integer
          format: int64
          example: 3
        accountType:
          $ref: '#/components/schemas/GetGroupsGroupIdAccountsMemberLoanType'
        currency:
          $ref: '#/components/schemas/GetGroupsGroupIdAccountsSavingCurrency'
        id:
          type: integer
          format: int64
          example: 3
        productId:
          type: integer
          format: int64
          example: 1
        productName:
          type: string
          example: p_sav
        status:
          $ref: '#/components/schemas/GetGroupsGroupIdAccountsSavingStatus'
    GetGroupsGroupIdAccountsResponse:
      type: object
      description: GetGroupsGroupIdAccountsResponse
      properties:
        loanAccounts:
          type: array
          items:
            $ref: '#/components/schemas/GetGroupsGroupIdAccountsLoanAccounts'
          uniqueItems: true
        memberLoanAccounts:
          type: array
          items:
            $ref: '#/components/schemas/GetGroupsGroupIdAccountsMemberLoanAccounts'
          uniqueItems: true
        memberSavingsAccounts:
          type: array
          items:
            $ref: '#/components/schemas/GetGroupsGroupIdAccountsMemberSavingsAccounts'
          uniqueItems: true
        savingsAccounts:
          type: array
          items:
            $ref: '#/components/schemas/GetGroupsGroupIdAccountsSavingAccounts'
          uniqueItems: true
    GetGroupsGroupIdAccountsSavingAccountType:
      type: object
      properties:
        code:
          type: string
          example: accountType.group
        description:
          type: string
          example: Group
        id:
          type: integer
          format: int64
          example: 2
    GetGroupsGroupIdAccountsSavingAccounts:
      type: object
      properties:
        accountNo:
          type: integer
          format: int64
          example: 9
        accountType:
          $ref: '#/components/schemas/GetGroupsGroupIdAccountsSavingAccountType'
        currency:
          $ref: '#/components/schemas/GetGroupsGroupIdAccountsSavingCurrency'
        id:
          type: integer
          format: int64
          example: 9
        productId:
          type: integer
          format: int64
          example: 1
        productName:
          type: string
          example: p_sav
        status:
          $ref: '#/components/schemas/GetGroupsGroupIdAccountsSavingStatus'
    GetGroupsGroupIdAccountsSavingCurrency:
      type: object
      properties:
        code:
          type: string
          example: USD
        decimalPlaces:
          type: integer
          format: int32
          example: 2
        displayLabel:
          type: string
          example: US Dollar ($)
        displaySymbol:
          type: string
          example: $
        name:
          type: string
          example: US Dollar
        nameCode:
          type: string
          example: currency.USD
    GetGroupsGroupIdAccountsSavingStatus:
      type: object
      properties:
        active:
          type: boolean
          example: false
        approved:
          type: boolean
          example: false
        closed:
          type: boolean
          example: false
        code:
          type: string
          example: savingsAccountStatusType.submitted.and.pending.approval
        description:
          type: string
          example: Submitted and pending approval
        id:
          type: integer
          format: int64
          example: 100
        rejected:
          type: boolean
          example: false
        submittedAndPendingApproval:
          type: boolean
          example: true
        withdrawnByApplicant:
          type: boolean
          example: false
    GetGroupsGroupIdAccountsStatus:
      type: object
      properties:
        active:
          type: boolean
          example: false
        closed:
          type: boolean
          example: false
        closedObligationsMet:
          type: boolean
          example: false
        closedRescheduled:
          type: boolean
          example: false
        closedWrittenOff:
          type: boolean
          example: false
        code:
          type: string
          example: loanStatusType.submitted.and.pending.approval
        description:
          type: string
          example: Submitted and pending approval
        id:
          type: integer
          format: int64
          example: 100
        overpaid:
          type: boolean
          example: false
        pendingApproval:
          type: boolean
          example: true
        waitingForDisbursal:
          type: boolean
          example: false
    GetGroupsGroupIdResponse:
      type: object
      description: GetGroupsGroupIdResponse
      properties:
        externalId:
          type: string
          example: 000-1A
        hierarchy:
          type: string
          example: .1.
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: First Group
        officeId:
          type: integer
          format: int64
          example: 1
        officeName:
          type: string
          example: Head Office
        timeline:
          $ref: '#/components/schemas/GetGroupsGroupIdTimeline'
    GetGroupsGroupIdTimeline:
      type: object
      properties:
        activatedByFirstname:
          type: string
          example: App
        activatedByLastname:
          type: string
          example: Administrator
        activatedByUsername:
          type: string
          example: mifos
        activatedOnDate:
          type: string
          format: date
    GetGroupsPageItems:
      type: object
      properties:
        active:
          type: boolean
          example: false
        hierarchy:
          type: string
          example: .4.
        id:
          type: integer
          format: int64
          example: 4
        name:
          type: string
          example: AnotherGroup
        officeId:
          type: integer
          format: int64
          example: 1
        officeName:
          type: string
          example: Head Office
        status:
          $ref: '#/components/schemas/GetGroupsStatus'
    GetGroupsResponse:
      type: object
      description: GetGroupsResponse
      properties:
        pageItems:
          type: array
          items:
            $ref: '#/components/schemas/GetGroupsPageItems'
          uniqueItems: true
        totalFilteredRecords:
          type: integer
          format: int32
          example: 2
    GetGroupsStatus:
      type: object
      properties:
        code:
          type: string
          example: clientStatusType.pending
        description:
          type: string
          example: Pending
        id:
          type: integer
          format: int64
          example: 100
    GetGroupsTemplateClientOptions:
      type: object
      properties:
        displayName:
          type: string
          example: Petra Yton
        id:
          type: integer
          format: int64
          example: 1
        officeId:
          type: integer
          format: int64
          example: 1
        officeName:
          type: string
          example: Head Office
    GetGroupsTemplateColumnHeaderData:
      type: object
      properties:
        columnDisplayType:
          type: string
          example: INTEGER
        columnLength:
          type: integer
          format: int32
          example: 0
        columnName:
          type: string
          example: group_id
        columnType:
          type: string
          example: bigint
        columnValues:
          type: array
          items:
            $ref: '#/components/schemas/GetGroupsTemplateColumnValues'
          uniqueItems: true
        isColumnNullable:
          type: boolean
          example: false
        isColumnPrimaryKey:
          type: boolean
          example: true
    GetGroupsTemplateColumnValues:
      type: object
    GetGroupsTemplateDatatables:
      type: object
      properties:
        applicationTableName:
          type: string
          example: m_group
        columnHeaderData:
          type: array
          items:
            $ref: '#/components/schemas/GetGroupsTemplateColumnHeaderData'
          uniqueItems: true
        registeredTableName:
          type: string
          example: Group Activation Data
    GetGroupsTemplateOfficeOptions:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Head Office
        nameDecorated:
          type: string
          example: Head Office
    GetGroupsTemplateResponse:
      type: object
      description: GetGroupsTemplateResponse
      properties:
        clientOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetGroupsTemplateClientOptions'
          uniqueItems: true
        datatables:
          type: array
          items:
            $ref: '#/components/schemas/GetGroupsTemplateDatatables'
          uniqueItems: true
        officeId:
          type: integer
          format: int64
          example: 1
        officeOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetGroupsTemplateOfficeOptions'
          uniqueItems: true
        staffOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetGroupsTemplateStaffOptions'
          uniqueItems: true
    GetGroupsTemplateStaffOptions:
      type: object
      properties:
        displayName:
          type: string
          example: "C, Mike"
        id:
          type: integer
          format: int64
          example: 1
    GetHolidaysResponse:
      type: object
      description: GetHolidaysResponse
      properties:
        fromDate:
          type: string
          format: date
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Good Friday
        officeId:
          type: integer
          format: int64
          example: 1
        repaymentsRescheduledTo:
          type: string
          format: date
        status:
          $ref: '#/components/schemas/EnumOptionData'
        toDate:
          type: string
          format: date
    GetHookResponse:
      type: object
      description: GetHookResponse
      properties:
        config:
          type: array
          items:
            $ref: '#/components/schemas/Field'
        createdAt:
          type: string
          format: date
        displayName:
          type: string
          example: Kremlin
        events:
          type: array
          items:
            $ref: '#/components/schemas/Event'
        id:
          type: integer
          format: int64
          example: 1
        isActive:
          type: boolean
          example: true
        name:
          type: string
          example: Web
        templateId:
          type: integer
          format: int64
          example: 1
        templateName:
          type: string
          example: My UGD
        updatedAt:
          type: string
          format: date
    GetHookTemplateResponse:
      type: object
      description: GetHookTemplateResponse
      properties:
        groupings:
          type: array
          items:
            $ref: '#/components/schemas/Grouping'
        templates:
          type: array
          items:
            $ref: '#/components/schemas/HookTemplateData'
    GetIncomeFromFeeAccountId:
      type: object
      properties:
        glCode:
          type: string
          example: INCOME_OY1461237869836
        id:
          type: integer
          format: int64
          example: 14
        name:
          type: string
          example: ACCOUNT_NAME_1FJBQ
    GetIncomeType:
      type: object
      properties:
        code:
          type: string
          example: accountType.income
        description:
          type: string
          example: INCOME
        id:
          type: integer
          format: int64
          example: 1
    GetInstructionTypeOptionsResponseStandingInstructionSwagger:
      type: object
      properties:
        code:
          type: string
          example: standingInstructionType.fixed
        description:
          type: string
          example: Fixed
        id:
          type: integer
          format: int32
          example: 1
    GetInstructionTypeStandingInstructionSwagger:
      type: object
      properties:
        code:
          type: string
          example: standingInstructionType.fixed
        description:
          type: string
          example: Fixed
        id:
          type: integer
          format: int32
          example: 1
    GetInterestRateChartsChartIdChartSlabsAttributeName:
      type: object
      properties:
        code:
          type: integer
          format: int32
        description:
          type: integer
          format: int32
        id:
          type: integer
          format: int64
          example: 2
    GetInterestRateChartsChartIdChartSlabsConditionType:
      type: object
      properties:
        code:
          type: integer
          format: int32
        description:
          type: integer
          format: int32
        id:
          type: integer
          format: int64
          example: 2
    GetInterestRateChartsChartIdChartSlabsEntityType:
      type: object
      properties:
        code:
          type: integer
          format: int32
        description:
          type: integer
          format: int32
        id:
          type: integer
          format: int64
          example: 2
    GetInterestRateChartsChartIdChartSlabsIncentiveType:
      type: object
      properties:
        code:
          type: integer
          format: int32
        description:
          type: integer
          format: int32
        id:
          type: integer
          format: int64
          example: 3
    GetInterestRateChartsChartIdChartSlabsIncentives:
      type: object
      properties:
        amount:
          type: number
          format: float
          example: -1.0
        attributeName:
          $ref: '#/components/schemas/GetInterestRateChartsChartIdChartSlabsAttributeName'
        attributeValue:
          type: integer
          format: int32
          example: 11
        attributeValueDesc:
          type: string
          example: FEMALE
        conditionType:
          $ref: '#/components/schemas/GetInterestRateChartsChartIdChartSlabsConditionType'
        entityType:
          $ref: '#/components/schemas/GetInterestRateChartsChartIdChartSlabsEntityType'
        id:
          type: integer
          format: int64
          example: 1
        incentiveType:
          $ref: '#/components/schemas/GetInterestRateChartsChartIdChartSlabsIncentiveType'
    GetInterestRateChartsChartIdChartSlabsResponse:
      type: object
      description: GetInterestRateChartsChartIdChartSlabsResponse
      properties:
        annualInterestRate:
          type: number
          format: double
          example: 5
        currency:
          $ref: '#/components/schemas/GetInterestRateChartsCurrency'
        description:
          type: string
          example: 5% interest from 1 day till 180 days of deposit
        fromPeriod:
          type: integer
          format: int32
          example: 1
        id:
          type: integer
          format: int64
          example: 1
        incentives:
          type: array
          items:
            $ref: '#/components/schemas/GetInterestRateChartsChartIdChartSlabsIncentives'
          uniqueItems: true
        periodTypes:
          $ref: '#/components/schemas/GetInterestRateChartsTemplatePeriodTypes'
        toPeriod:
          type: integer
          format: int32
          example: 180
    GetInterestRateChartsChartSlabs:
      type: object
      properties:
        annualInterestRate:
          type: integer
          format: int32
          example: 6
        currency:
          $ref: '#/components/schemas/GetInterestRateChartsCurrency'
        fromPeriod:
          type: integer
          format: int32
          example: 1
        id:
          type: integer
          format: int64
          example: 1
        periodTypes:
          $ref: '#/components/schemas/GetInterestRateChartsTemplatePeriodTypes'
    GetInterestRateChartsCurrency:
      type: object
      properties:
        code:
          type: string
          example: USD
        decimalPlaces:
          type: integer
          format: int32
          example: 2
        displayLabel:
          type: string
          example: US Dollar ($)
        displaySymbol:
          type: string
          example: $
        name:
          type: string
          example: US Dollar
        nameCode:
          type: string
          example: currency.USD
    GetInterestRateChartsResponse:
      type: object
      description: GetInterestRateChartsResponse
      properties:
        chartSlabs:
          type: array
          items:
            $ref: '#/components/schemas/GetInterestRateChartsChartSlabs'
          uniqueItems: true
        fromDate:
          type: string
          format: date
        id:
          type: integer
          format: int64
          example: 1
        savingsProductId:
          type: integer
          format: int64
          example: 1
        savingsProductName:
          type: string
          example: Fixed Deposit Product 001
    GetInterestRateChartsTemplatePeriodTypes:
      type: object
      properties:
        code:
          type: string
          example: interestChartPeriodType.days
        description:
          type: string
          example: Days
        id:
          type: integer
          format: int32
          example: 0
    GetInterestRateChartsTemplateResponse:
      type: object
      description: GetInterestRateChartsTemplateResponse
      properties:
        periodTypes:
          type: array
          items:
            $ref: '#/components/schemas/GetInterestRateChartsTemplatePeriodTypes'
          uniqueItems: true
    GetJobsJobIDJobRunHistoryResponse:
      type: object
      description: GetJobsJobIDJobRunHistoryResponse
      properties:
        pageItems:
          type: array
          items:
            $ref: '#/components/schemas/JobDetailHistoryDataSwagger'
        totalFilteredRecords:
          type: integer
          format: int32
          example: 8
    GetJobsResponse:
      type: object
      description: GetJobsResponse
      properties:
        active:
          type: boolean
          example: false
        cronExpression:
          type: string
          example: 0 0 22 1/1 * ? *
        currentlyRunning:
          type: boolean
          example: false
        displayName:
          type: string
          example: Update loan Summary
        initializingError:
          type: string
        jobId:
          type: integer
          format: int64
          example: 1
        lastRunHistory:
          $ref: '#/components/schemas/JobDetailHistoryData'
        nextRunTime:
          type: string
          format: date-time
    GetJournalEntriesTransactionIdResponse:
      type: object
      description: GetJournalEntriesTransactionIdResponse
      properties:
        pageItems:
          type: array
          items:
            $ref: '#/components/schemas/JournalEntryTransactionItem'
        totalFilteredRecords:
          type: integer
          format: int64
          example: 2
    GetLoanAccountLockResponse:
      type: object
      description: GetLoanAccountLockResponse
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/LoanAccountLock'
        limit:
          type: integer
          format: int32
        page:
          type: integer
          format: int32
    GetLoanAccountingMappings:
      type: object
      properties:
        fundSourceAccount:
          $ref: '#/components/schemas/GetGlAccountMapping'
        goodwillCreditAccount:
          $ref: '#/components/schemas/GetGlAccountMapping'
        incomeFromFeeAccount:
          $ref: '#/components/schemas/GetGlAccountMapping'
        incomeFromPenaltyAccount:
          $ref: '#/components/schemas/GetGlAccountMapping'
        incomeFromRecoveryAccount:
          $ref: '#/components/schemas/GetGlAccountMapping'
        interestOnLoanAccount:
          $ref: '#/components/schemas/GetGlAccountMapping'
        loanPortfolioAccount:
          $ref: '#/components/schemas/GetGlAccountMapping'
        overpaymentLiabilityAccount:
          $ref: '#/components/schemas/GetGlAccountMapping'
        receivableInterestAccount:
          $ref: '#/components/schemas/GetGlAccountMapping'
        receivablePenaltyAccount:
          $ref: '#/components/schemas/GetGlAccountMapping'
        transfersInSuspenseAccount:
          $ref: '#/components/schemas/GetGlAccountMapping'
        writeOffAccount:
          $ref: '#/components/schemas/GetGlAccountMapping'
    GetLoanCharge:
      type: object
      properties:
        active:
          type: boolean
          example: false
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: flat install
        penalty:
          type: boolean
          example: false
    GetLoanChargeCalculationType:
      type: object
      properties:
        code:
          type: string
          example: chargeCalculationType.flat
        description:
          type: string
          example: Flat
        id:
          type: integer
          format: int64
          example: 1
    GetLoanChargeCurrency:
      type: object
      properties:
        code:
          type: string
          example: USD
        decimalPlaces:
          type: integer
          format: int32
          example: 2
        displayLabel:
          type: string
          example: US Dollar ($)
        displaySymbol:
          type: string
          example: $
        name:
          type: string
          example: US Dollar
        nameCode:
          type: string
          example: currency.USD
    GetLoanChargeTemplateChargeAppliesTo:
      type: object
      properties:
        code:
          type: string
          example: chargeAppliesTo.loan
        description:
          type: string
          example: Loan
        id:
          type: integer
          format: int32
          example: 1
    GetLoanChargeTemplateChargeOptions:
      type: object
      properties:
        active:
          type: boolean
          example: true
        amount:
          type: number
          format: double
          example: 100.0
        chargeAppliesTo:
          $ref: '#/components/schemas/GetLoanChargeTemplateChargeAppliesTo'
        chargeCalculationType:
          $ref: '#/components/schemas/GetLoanChargeCalculationType'
        chargeTimeType:
          $ref: '#/components/schemas/GetLoanChargeTemplateChargeTimeType'
        currency:
          $ref: '#/components/schemas/GetLoanChargeCurrency'
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Collection fee
        penalty:
          type: boolean
          example: false
    GetLoanChargeTemplateChargeTimeType:
      type: object
      properties:
        code:
          type: string
          example: chargeTimeType.specifiedDueDate
        description:
          type: string
          example: Specified due date
        id:
          type: integer
          format: int64
          example: 2
    GetLoanChargeTimeType:
      type: object
      properties:
        code:
          type: string
          example: chargeTimeType.disbursement
        description:
          type: string
          example: Disbursement
        id:
          type: integer
          format: int64
          example: 1
    GetLoanCollateralManagementTemplate:
      type: object
      description: GetLoanCollateralManagementTemplate
      properties:
        basePrice:
          type: number
          example: 10000.0
        collateralId:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Vehicle
        pctToBase:
          type: number
          example: 40
        quantity:
          type: number
          example: 10
    GetLoanCurrency:
      type: object
      properties:
        code:
          type: string
          example: USD
        decimalPlaces:
          type: integer
          format: int32
          example: 2
        displayLabel:
          type: string
          example: US Dollar ($)
        displaySymbol:
          type: string
          example: $
        name:
          type: string
          example: US Dollar
        nameCode:
          type: string
          example: currency.USD
    GetLoanFeeToIncomeAccountMappings:
      type: object
      properties:
        charge:
          $ref: '#/components/schemas/GetLoanCharge'
        chargeId:
          type: integer
          format: int64
          example: 10
        incomeAccount:
          $ref: '#/components/schemas/GetGlAccountMapping'
        incomeAccountId:
          type: integer
          format: int64
          example: 39
    GetLoanPaymentChannelToFundSourceMappings:
      type: object
      properties:
        fundSourceAccountId:
          type: integer
          format: int64
          example: 39
        paymentTypeId:
          type: integer
          format: int64
          example: 10
    GetLoanProductsAccountingMappingOptions:
      type: object
      properties:
        assetAccountOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetLoanProductsAssetAccountOptions'
          uniqueItems: true
        expenseAccountOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetLoanProductsExpenseAccountOptions'
          uniqueItems: true
        incomeAccountOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetLoanProductsIncomeAccountOptions'
          uniqueItems: true
        liabilityAccountOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetLoanProductsLiabilityAccountOptions'
          uniqueItems: true
    GetLoanProductsAccountingRule:
      type: object
      properties:
        code:
          type: string
          example: accountingRuleType.cash
        description:
          type: string
          example: CASH BASED
        id:
          type: integer
          format: int64
          example: 2
    GetLoanProductsAmortizationType:
      type: object
      properties:
        code:
          type: string
          example: amortizationType.equal.installments
        description:
          type: string
          example: Equal installments
        id:
          type: integer
          format: int64
          example: 1
    GetLoanProductsAssetAccountOptions:
      type: object
      properties:
        disabled:
          type: boolean
          example: false
        glCode:
          type: string
          example: "02"
        id:
          type: integer
          format: int64
          example: 2
        manualEntriesAllowed:
          type: boolean
          example: true
        name:
          type: string
          example: Loan portfolio
        nameDecorated:
          type: string
          example: Loan portfolio
        organizationRunningBalance:
          type: integer
          format: int32
          example: 60000
        tagId:
          $ref: '#/components/schemas/GetLoanProductsLiabilityTagId'
        type:
          $ref: '#/components/schemas/GetLoanProductsLiabilityType'
        usage:
          $ref: '#/components/schemas/GetLoanProductsLiabilityUsage'
    GetLoanProductsChargeAppliesTo:
      type: object
      properties:
        code:
          type: string
          example: chargeAppliesTo.loan
        description:
          type: string
          example: Loan
        id:
          type: integer
          format: int64
          example: 1
    GetLoanProductsChargeOptions:
      type: object
      properties:
        active:
          type: boolean
          example: true
        amount:
          type: number
          example: 100
        chargeAppliesTo:
          $ref: '#/components/schemas/GetLoanProductsChargeAppliesTo'
        chargeCalculationType:
          $ref: '#/components/schemas/GetLoanChargeCalculationType'
        chargePaymentMode:
          $ref: '#/components/schemas/GetLoansChargePaymentMode'
        chargeTimeType:
          $ref: '#/components/schemas/GetLoanChargeTimeType'
        currency:
          $ref: '#/components/schemas/GetLoanProductsCurrencyOptions'
        id:
          type: integer
          format: int64
          example: 5
        name:
          type: string
          example: des charges
        penalty:
          type: boolean
          example: false
    GetLoanProductsCurrency:
      type: object
      properties:
        code:
          type: string
          example: USD
        decimalPlaces:
          type: integer
          format: int32
          example: 2
        displayLabel:
          type: string
          example: US Dollar ($)
        displaySymbol:
          type: string
          example: $
        inMultiplesOf:
          type: integer
          format: int32
          example: 0
        name:
          type: string
          example: US Dollar
        nameCode:
          type: string
          example: currency.USD
    GetLoanProductsCurrencyOptions:
      type: object
      properties:
        code:
          type: string
          example: USD
        decimalPlaces:
          type: integer
          format: int32
          example: 2
        displayLabel:
          type: string
          example: US Dollar ($)
        displaySymbol:
          type: string
          example: $
        name:
          type: string
          example: US Dollar
        nameCode:
          type: string
          example: currency.USD
    GetLoanProductsDaysInYearTemplateType:
      type: object
      properties:
        code:
          type: string
          example: DaysInYearType.actual
        description:
          type: string
          example: Actual
        id:
          type: integer
          format: int64
          example: 1
    GetLoanProductsExpenseAccountOptions:
      type: object
      properties:
        disabled:
          type: boolean
          example: false
        glCode:
          type: string
          example: "12"
        id:
          type: integer
          format: int64
          example: 10
        manualEntriesAllowed:
          type: boolean
          example: true
        name:
          type: string
          example: loans written off 2
        nameDecorated:
          type: string
          example: loans written off 2
        organizationRunningBalance:
          type: integer
          format: int32
          example: 0
        tagId:
          $ref: '#/components/schemas/GetLoanProductsLiabilityTagId'
        type:
          $ref: '#/components/schemas/GetLoanProductsExpenseType'
        usage:
          $ref: '#/components/schemas/GetLoanProductsLiabilityUsage'
    GetLoanProductsExpenseType:
      type: object
      properties:
        code:
          type: string
          example: accountType.expense
        description:
          type: string
          example: EXPENSE
        id:
          type: integer
          format: int64
          example: 5
    GetLoanProductsIncomeAccountOptions:
      type: object
      properties:
        disabled:
          type: boolean
          example: false
        glCode:
          type: string
          example: "04"
        id:
          type: integer
          format: int64
          example: 4
        manualEntriesAllowed:
          type: boolean
          example: true
        name:
          type: string
          example: income from interest
        nameDecorated:
          type: string
          example: income from interest
        organizationRunningBalance:
          type: integer
          format: int32
          example: 19
        tagId:
          $ref: '#/components/schemas/GetLoanProductsLiabilityTagId'
        type:
          $ref: '#/components/schemas/GetLoanProductsIncomeType'
        usage:
          $ref: '#/components/schemas/GetLoanProductsLiabilityUsage'
    GetLoanProductsIncomeType:
      type: object
      properties:
        code:
          type: string
          example: accountType.income
        description:
          type: string
          example: INCOME
        id:
          type: integer
          format: int64
          example: 4
    GetLoanProductsInterestRateFrequencyType:
      type: object
      properties:
        code:
          type: string
          example: interestRateFrequency.periodFrequencyType.months
        description:
          type: string
          example: Per month
        id:
          type: integer
          format: int64
          example: 2
    GetLoanProductsInterestRateTemplateFrequencyType:
      type: object
      properties:
        code:
          type: string
          example: interestRateFrequency.periodFrequencyType.months
        description:
          type: string
          example: Per month
        id:
          type: integer
          format: int64
          example: 2
    GetLoanProductsInterestRecalculationCompoundingFrequencyType:
      type: object
      properties:
        code:
          type: string
          example: interestRecalculationFrequencyType.same.as.repayment.period
        description:
          type: string
          example: Same as repayment period
        id:
          type: integer
          format: int64
          example: 1
    GetLoanProductsInterestRecalculationCompoundingType:
      type: object
      properties:
        code:
          type: string
          example: interestRecalculationCompoundingMethod.fee
        description:
          type: string
          example: Fee
        id:
          type: integer
          format: int64
          example: 2
    GetLoanProductsInterestRecalculationData:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 3
        interestRecalculationCompoundingFrequencyType:
          $ref: '#/components/schemas/GetLoanProductsInterestRecalculationCompoundingFrequencyType'
        interestRecalculationCompoundingType:
          $ref: '#/components/schemas/GetLoanProductsInterestRecalculationCompoundingType'
        isArrearsBasedOnOriginalSchedule:
          type: boolean
          example: true
        preClosureInterestCalculationStrategy:
          $ref: '#/components/schemas/GetLoanProductsPreClosureInterestCalculationStrategy'
        productId:
          type: integer
          format: int64
          example: 1
        recalculationCompoundingFrequencyInterval:
          type: integer
          format: int32
          example: 1
        recalculationCompoundingFrequencyOnDayType:
          type: integer
          format: int32
          example: 1
        recalculationRestFrequencyInterval:
          type: integer
          format: int32
          example: 1
        recalculationRestFrequencyType:
          $ref: '#/components/schemas/GetLoanProductsInterestRecalculationCompoundingFrequencyType'
        rescheduleStrategyType:
          $ref: '#/components/schemas/GetLoanProductsRescheduleStrategyType'
    GetLoanProductsInterestRecalculationTemplateData:
      type: object
      properties:
        interestRecalculationCompoundingType:
          $ref: '#/components/schemas/GetLoanProductsInterestRecalculationCompoundingType'
        preClosureInterestCalculationStrategy:
          $ref: '#/components/schemas/GetLoanProductsPreClosureInterestCalculationStrategy'
        rescheduleStrategyType:
          $ref: '#/components/schemas/GetLoanProductsRescheduleStrategyType'
    GetLoanProductsInterestTemplateType:
      type: object
      properties:
        code:
          type: string
          example: interestType.declining.balance
        description:
          type: string
          example: Declining Balance
        id:
          type: integer
          format: int64
          example: 0
    GetLoanProductsInterestType:
      type: object
      properties:
        code:
          type: string
          example: interestType.flat
        description:
          type: string
          example: Flat
        id:
          type: integer
          format: int64
          example: 1
    GetLoanProductsLiabilityAccountOptions:
      type: object
      properties:
        disabled:
          type: boolean
          example: false
        glCode:
          type: string
          example: "13"
        id:
          type: integer
          format: int64
          example: 11
        manualEntriesAllowed:
          type: boolean
          example: true
        name:
          type: string
          example: over payment
        nameDecorated:
          type: string
          example: over payment
        organizationRunningBalance:
          type: integer
          format: int32
          example: 0
        tagId:
          $ref: '#/components/schemas/GetLoanProductsLiabilityTagId'
        type:
          $ref: '#/components/schemas/GetLoanProductsLiabilityType'
        usage:
          $ref: '#/components/schemas/GetLoanProductsLiabilityUsage'
    GetLoanProductsLiabilityTagId:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 0
    GetLoanProductsLiabilityType:
      type: object
      properties:
        code:
          type: string
          example: accountType.liability
        description:
          type: string
          example: LIABILITY
        id:
          type: integer
          format: int64
          example: 2
    GetLoanProductsLiabilityUsage:
      type: object
      properties:
        code:
          type: string
          example: accountUsage.detail
        description:
          type: string
          example: DETAIL
        id:
          type: integer
          format: int64
          example: 1
    GetLoanProductsParamType:
      type: object
      properties:
        code:
          type: string
          example: LoanProductParamType.principal
        description:
          type: string
          example: principal
        id:
          type: integer
          format: int64
          example: 1
    GetLoanProductsPaymentTypeOptions:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: check
        position:
          type: integer
          format: int32
          example: 1
    GetLoanProductsPreClosureInterestCalculationStrategy:
      type: object
      properties:
        code:
          type: string
          example: loanPreClosureInterestCalculationStrategy.tillPreClosureDate
        description:
          type: string
          example: Till preclose Date
        id:
          type: integer
          format: int64
          example: 1
    GetLoanProductsPrincipalVariationsForBorrowerCycle:
      type: object
      properties:
        borrowerCycleNumber:
          type: integer
          format: int32
          example: 1
        defaultValue:
          type: number
          format: double
          example: 15000.0
        id:
          type: integer
          format: int64
          example: 21
        maxValue:
          type: number
          format: double
          example: 20000.0
        minValue:
          type: number
          format: double
          example: 2000.0
        paramType:
          $ref: '#/components/schemas/GetLoanProductsParamType'
        valueConditionType:
          $ref: '#/components/schemas/GetLoanProductsValueConditionType'
    GetLoanProductsProductIdResponse:
      type: object
      description: GetLoanProductsProductIdResponse
      properties:
        accountingMappings:
          $ref: '#/components/schemas/GetLoanAccountingMappings'
        accountingRule:
          $ref: '#/components/schemas/GetLoanProductsAccountingRule'
        amortizationType:
          $ref: '#/components/schemas/GetLoanProductsAmortizationType'
        annualInterestRate:
          type: number
          format: double
          example: 60.0
        charges:
          type: array
          example: []
          items:
            type: integer
            format: int32
        creditAllocation:
          type: array
          example: []
          items:
            $ref: '#/components/schemas/CreditAllocationData'
        currency:
          $ref: '#/components/schemas/GetLoanProductsCurrency'
        delinquencyBucket:
          $ref: '#/components/schemas/GetDelinquencyBucketsResponse'
        disallowExpectedDisbursements:
          type: boolean
          example: true
        disbursedAmountPercentageForDownPayment:
          type: number
          example: 5.5
        dueDaysForRepaymentEvent:
          type: integer
          format: int32
          example: 3
        enableAutoRepaymentForDownPayment:
          type: boolean
          example: false
        enableDownPayment:
          type: boolean
          example: false
        enableInstallmentLevelDelinquency:
          type: boolean
          example: false
        feeToIncomeAccountMappings:
          type: array
          items:
            $ref: '#/components/schemas/GetLoanFeeToIncomeAccountMappings'
          uniqueItems: true
        fixedPrincipalPercentagePerInstallment:
          type: number
          example: 5.5
        id:
          type: integer
          format: int64
          example: 11
        inArrearsTolerance:
          type: integer
          format: int32
          example: 3
        includeInBorrowerCycle:
          type: boolean
          example: true
        interestCalculationPeriodType:
          $ref: '#/components/schemas/GetLoansProductsInterestCalculationPeriodType'
        interestRateFrequencyType:
          $ref: '#/components/schemas/GetLoanProductsInterestRateFrequencyType'
        interestRatePerPeriod:
          type: number
          format: double
          example: 5.0
        interestRateVariationsForBorrowerCycle:
          type: array
          example: []
          items:
            type: integer
            format: int32
        interestType:
          $ref: '#/components/schemas/GetLoanProductsInterestTemplateType'
        loanScheduleProcessingType:
          $ref: '#/components/schemas/EnumOptionData'
        loanScheduleType:
          $ref: '#/components/schemas/EnumOptionData'
        maxPrincipal:
          type: number
          format: double
          example: 15000.0
        maxTrancheCount:
          type: integer
          format: int32
          example: 3
        minPrincipal:
          type: number
          format: double
          example: 2000.0
        multiDisburseLoan:
          type: boolean
          example: true
        name:
          type: string
          example: advanced accounting
        numberOfRepaymentVariationsForBorrowerCycle:
          type: array
          example: []
          items:
            type: integer
            format: int32
        numberOfRepayments:
          type: integer
          format: int32
          example: 7
        outstandingLoanBalance:
          type: number
          format: double
          example: 36000.0
        overDueDaysForRepaymentEvent:
          type: integer
          format: int32
          example: 3
        overdueDaysForNPA:
          type: integer
          format: int32
          example: 2
        paymentAllocation:
          type: array
          example: []
          items:
            $ref: '#/components/schemas/AdvancedPaymentData'
        paymentChannelToFundSourceMappings:
          type: array
          items:
            $ref: '#/components/schemas/GetLoanPaymentChannelToFundSourceMappings'
          uniqueItems: true
        principal:
          type: number
          format: double
          example: 10000.0
        principalThresholdForLastInstalment:
          type: integer
          format: int32
          example: 50
        productsPrincipalVariationsForBorrowerCycle:
          type: array
          items:
            $ref: '#/components/schemas/GetLoanProductsPrincipalVariationsForBorrowerCycle'
          uniqueItems: true
        repaymentEvery:
          type: integer
          format: int32
          example: 7
        repaymentFrequencyType:
          $ref: '#/components/schemas/GetLoanProductsRepaymentFrequencyType'
        repaymentStartDateType:
          $ref: '#/components/schemas/GetLoanProductsRepaymentStartDateType'
        shortName:
          type: string
          example: ad11
        status:
          type: string
          example: loanProduct.active
        transactionProcessingStrategyCode:
          type: string
          example: mifos-standard-strategy
        transactionProcessingStrategyName:
          type: string
          example: Mifos style
        useBorrowerCycle:
          type: boolean
          example: true
    GetLoanProductsRepaymentFrequencyType:
      type: object
      properties:
        code:
          type: string
          example: repaymentFrequency.periodFrequencyType.days
        description:
          type: string
          example: Days
        id:
          type: integer
          format: int64
          example: 0
    GetLoanProductsRepaymentStartDateType:
      type: object
      properties:
        code:
          type: string
          example: repaymentStartDateType.disbursementDate
        description:
          type: string
          example: Disbursement Date
        id:
          type: integer
          format: int64
          example: 1
    GetLoanProductsRepaymentTemplateFrequencyType:
      type: object
      properties:
        code:
          type: string
          example: repaymentFrequency.periodFrequencyType.months
        description:
          type: string
          example: Months
        id:
          type: integer
          format: int64
          example: 2
    GetLoanProductsRescheduleStrategyType:
      type: object
      properties:
        code:
          type: string
          example: loanRescheduleStrategyMethod.reduce.number.of.installments
        description:
          type: string
          example: Reduce number of installments
        id:
          type: integer
          format: int64
          example: 2
    GetLoanProductsResponse:
      type: object
      description: GetLoanProductsResponse
      properties:
        accountingRule:
          $ref: '#/components/schemas/GetLoanProductsAccountingRule'
        amortizationType:
          $ref: '#/components/schemas/GetLoanProductsAmortizationType'
        annualInterestRate:
          type: number
          format: double
          example: 15.0
        currency:
          $ref: '#/components/schemas/GetLoanProductsCurrency'
        daysInMonthType:
          $ref: '#/components/schemas/GetLoansProductsDaysInMonthType'
        daysInYearType:
          $ref: '#/components/schemas/GetLoansProductsDaysInYearType'
        endDate:
          type: string
          format: date
        fixedPrincipalPercentagePerInstallment:
          type: number
          example: 5.5
        id:
          type: integer
          format: int64
          example: 1
        includeInBorrowerCycle:
          type: boolean
          example: false
        interestCalculationPeriodType:
          $ref: '#/components/schemas/GetLoansProductsInterestCalculationPeriodType'
        interestRateFrequencyType:
          $ref: '#/components/schemas/GetLoanProductsInterestRateFrequencyType'
        interestRatePerPeriod:
          type: number
          format: double
          example: 15.0
        interestRateVariationsForBorrowerCycle:
          type: array
          example: []
          items:
            type: integer
            format: int32
        interestRecalculationData:
          $ref: '#/components/schemas/GetLoanProductsInterestRecalculationData'
        interestType:
          $ref: '#/components/schemas/GetLoanProductsInterestType'
        isInterestRecalculationEnabled:
          type: boolean
          example: true
        maxNumberOfRepayments:
          type: integer
          format: int32
          example: 15
        maxPrincipal:
          type: number
          format: double
          example: 15000.0
        minNumberOfRepayments:
          type: integer
          format: int32
          example: 5
        minPrincipal:
          type: number
          format: double
          example: 5000.0
        name:
          type: string
          example: personal loan product
        numberOfRepaymentVariationsForBorrowerCycle:
          type: array
          example: []
          items:
            type: integer
            format: int32
        numberOfRepayments:
          type: integer
          format: int32
          example: 10
        principal:
          type: number
          format: double
          example: 10000.0
        principalThresholdForLastInstalment:
          type: integer
          format: int32
          example: 0
        principalVariationsForBorrowerCycle:
          type: array
          example: []
          items:
            type: integer
            format: int32
        repaymentEvery:
          type: integer
          format: int32
          example: 7
        repaymentFrequencyType:
          $ref: '#/components/schemas/GetLoanProductsRepaymentFrequencyType'
        repaymentStartDateType:
          $ref: '#/components/schemas/GetLoanProductsRepaymentStartDateType'
        shortName:
          type: string
          example: pe1
        startDate:
          type: string
          format: date
        status:
          type: string
          example: loanProduct.active
        transactionProcessingStrategy:
          type: string
          example: mifos-standard-strategy
        transactionProcessingStrategyName:
          type: string
          example: Mifos style
        useBorrowerCycle:
          type: boolean
          example: false
    GetLoanProductsTemplateCurrency:
      type: object
      properties:
        code:
          type: string
          example: USD
        decimalPlaces:
          type: integer
          format: int32
          example: 0
        displayLabel:
          type: string
          example: "[]"
        displaySymbol:
          type: string
          example: $
        inMultiplesOf:
          type: integer
          format: int32
          example: 0
        name:
          type: string
          example: Usa dollar
        nameCode:
          type: string
          example: USD
    GetLoanProductsTemplateResponse:
      type: object
      description: GetLoanProductsTemplateResponse
      properties:
        accountingMappingOptions:
          $ref: '#/components/schemas/GetLoanProductsAccountingMappingOptions'
        accountingRule:
          $ref: '#/components/schemas/GetLoanProductsAccountingRule'
        accountingRuleOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetLoanProductsAccountingRule'
          uniqueItems: true
        advancedPaymentAllocationFutureInstallmentAllocationRules:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
        advancedPaymentAllocationTransactionTypes:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
        advancedPaymentAllocationTypes:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
        amortizationType:
          $ref: '#/components/schemas/GetLoanProductsAmortizationType'
        amortizationTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetLoanProductsAmortizationType'
          uniqueItems: true
        chargeOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetLoanProductsChargeOptions'
          uniqueItems: true
        creditAllocationAllocationTypes:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
        creditAllocationTransactionTypes:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
        currency:
          $ref: '#/components/schemas/GetLoanProductsTemplateCurrency'
        currencyOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetLoanProductsCurrencyOptions'
          uniqueItems: true
        daysInMonthType:
          $ref: '#/components/schemas/GetLoansProductsDaysInMonthTemplateType'
        daysInMonthTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetLoansProductsDaysInMonthTemplateType'
          uniqueItems: true
        daysInYearType:
          $ref: '#/components/schemas/GetLoanProductsDaysInYearTemplateType'
        daysInYearTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetLoanProductsInterestTemplateType'
          uniqueItems: true
        includeInBorrowerCycle:
          type: boolean
          example: false
        interestCalculationPeriodType:
          $ref: '#/components/schemas/GetLoansProductsInterestCalculationPeriodType'
        interestCalculationPeriodTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetLoansProductsInterestCalculationPeriodType'
          uniqueItems: true
        interestRateFrequencyType:
          $ref: '#/components/schemas/GetLoanProductsInterestRateTemplateFrequencyType'
        interestRateFrequencyTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetLoanProductsInterestRateTemplateFrequencyType'
          uniqueItems: true
        interestRateVariationsForBorrowerCycle:
          type: array
          example: []
          items:
            type: integer
            format: int32
        interestRecalculationCompoundingTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetLoanProductsInterestRecalculationCompoundingType'
          uniqueItems: true
        interestRecalculationData:
          $ref: '#/components/schemas/GetLoanProductsInterestRecalculationTemplateData'
        interestRecalculationFrequencyTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetLoanProductsInterestRecalculationCompoundingFrequencyType'
          uniqueItems: true
        interestType:
          $ref: '#/components/schemas/GetLoanProductsInterestTemplateType'
        interestTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetLoanProductsInterestTemplateType'
          uniqueItems: true
        isInterestRecalculationEnabled:
          type: boolean
          example: false
        loanScheduleProcessingTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
        loanScheduleTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
        numberOfRepaymentVariationsForBorrowerCycle:
          type: array
          example: []
          items:
            type: integer
            format: int32
        paymentTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetLoanProductsPaymentTypeOptions'
          uniqueItems: true
        preClosureInterestCalculationStrategyOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetLoanProductsPreClosureInterestCalculationStrategy'
          uniqueItems: true
        principalVariationsForBorrowerCycle:
          type: array
          example: []
          items:
            type: integer
            format: int32
        repaymentFrequencyType:
          $ref: '#/components/schemas/GetLoanProductsRepaymentTemplateFrequencyType'
        repaymentFrequencyTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetLoanProductsRepaymentTemplateFrequencyType'
          uniqueItems: true
        repaymentStartDateTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetLoanProductsRepaymentStartDateType'
          uniqueItems: true
        rescheduleStrategyTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetLoanProductsRescheduleStrategyType'
          uniqueItems: true
        transactionProcessingStrategyOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetLoanProductsTransactionProcessingStrategyOptions'
          uniqueItems: true
        useBorrowerCycle:
          type: boolean
          example: false
        valueConditionTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetLoanProductsValueConditionTypeOptions'
          uniqueItems: true
    GetLoanProductsTransactionProcessingStrategyOptions:
      type: object
      properties:
        code:
          type: string
          example: mifos-standard-strategy
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: "Penalties, Fees, Interest, Principal order"
    GetLoanProductsValueConditionType:
      type: object
      properties:
        code:
          type: string
          example: LoanProductValueConditionType.equal
        description:
          type: string
          example: equals
        id:
          type: integer
          format: int64
          example: 2
    GetLoanProductsValueConditionTypeOptions:
      type: object
      properties:
        code:
          type: string
          example: mifos-standard-strategyLoanProductValueConditionType.equal
        description:
          type: string
          example: equals
        id:
          type: integer
          format: int64
          example: 2
    GetLoanRescheduleRequestResponse:
      type: object
      description: GetLoanRescheduleRequestResponse
      properties:
        clientId:
          type: integer
          format: int64
          example: 15
        clientName:
          type: string
          example: clientName
        id:
          type: integer
          format: int64
          example: 1
        loanAccountNumber:
          type: string
          example: "000000018"
        loanId:
          type: integer
          format: int64
          example: 18
        loanTermVariationsData:
          type: array
          items:
            $ref: '#/components/schemas/LoanTermVariationsData'
          uniqueItems: true
        recalculateInterest:
          type: boolean
          example: false
        rescheduleFromDate:
          type: string
          format: date
        rescheduleFromInstallment:
          type: integer
          format: int32
          example: 1
        rescheduleReasonCodeValue:
          $ref: '#/components/schemas/RescheduleReasonsCodeValue'
        rescheduleReasonComment:
          type: string
          example: rescheduleReasonComment
        statusEnum:
          $ref: '#/components/schemas/GetLoanRescheduleRequestStatus'
        timeline:
          $ref: '#/components/schemas/RescheduleReasonsTimeline'
    GetLoanRescheduleRequestStatus:
      type: object
      properties:
        approved:
          type: boolean
          example: false
        code:
          type: string
          example: loanStatusType.submitted.and.pending.approval
        id:
          type: integer
          format: int64
          example: 100
        pendingApproval:
          type: boolean
          example: true
        rejected:
          type: boolean
          example: false
        value:
          type: string
          example: Submitted and pending approval
    GetLoanTransactionRelation:
      type: object
      properties:
        amount:
          type: number
          format: double
          example: 100.0
        fromLoanTransaction:
          type: integer
          format: int64
          example: 1
        paymentType:
          type: string
          example: Repayment Adjustment Chargeback
        relationType:
          type: string
          example: CHARGEBACK
        toLoanCharge:
          type: integer
          format: int64
          example: 10
        toLoanTransaction:
          type: integer
          format: int64
          example: 10
    GetLoansApprovalTemplateResponse:
      type: object
      description: GetLoansApprovalTemplateResponse
      properties:
        approvalAmount:
          type: number
          format: double
          example: 200.0
        approvalDate:
          type: string
          format: date
        netDisbursalAmount:
          type: number
          format: double
          example: 200.0
    GetLoansChargePaymentMode:
      type: object
      properties:
        code:
          type: string
          example: chargepaymentmode.regular
        description:
          type: string
          example: Regular
        id:
          type: integer
          format: int64
          example: 0
    GetLoansCurrency:
      type: object
      properties:
        code:
          type: string
          example: USD
        decimalPlaces:
          type: integer
          format: int32
          example: 2
        displayLabel:
          type: string
          example: US Dollar ($)
        displaySymbol:
          type: string
          example: $
        name:
          type: string
          example: US Dollar
        nameCode:
          type: string
          example: currency.USD
    GetLoansLoanIdAmortizationType:
      type: object
      properties:
        code:
          type: string
          example: amortizationType.equal.installments
        description:
          type: string
          example: Equal installments
        id:
          type: integer
          format: int32
          example: 1
    GetLoansLoanIdChargeCalculationType:
      type: object
      properties:
        code:
          type: string
          example: chargeCalculationType.percent.of.amount
        description:
          type: string
          example: '% Amount'
        id:
          type: integer
          format: int32
          example: 2
    GetLoansLoanIdChargePaymentMode:
      type: object
      properties:
        code:
          type: string
          example: chargepaymentmode.regular
        description:
          type: string
          example: Regular
        id:
          type: integer
          format: int32
          example: 0
    GetLoansLoanIdChargeTimeType:
      type: object
      properties:
        code:
          type: string
          example: chargeTimeType.overdueInstallment
        description:
          type: string
          example: overdue fees
        id:
          type: integer
          format: int32
          example: 9
    GetLoansLoanIdChargesChargeIdResponse:
      type: object
      description: GetLoansLoanIdChargesChargeIdResponse
      properties:
        amount:
          type: number
          format: double
          example: 100.0
        amountOrPercentage:
          type: number
          format: double
          example: 100.0
        amountOutstanding:
          type: number
          format: double
          example: 100.0
        amountPaid:
          type: number
          format: double
          example: 0.0
        amountPercentageAppliedTo:
          type: number
          format: double
          example: 0
        amountWaived:
          type: number
          format: double
          example: 0.0
        amountWrittenOff:
          type: number
          format: double
          example: 0.0
        chargeCalculationType:
          $ref: '#/components/schemas/GetLoanChargeCalculationType'
        chargeId:
          type: integer
          format: int64
          example: 1
        chargeTimeType:
          $ref: '#/components/schemas/GetLoanChargeTimeType'
        currency:
          $ref: '#/components/schemas/GetLoanChargeCurrency'
        dueDate:
          type: string
          format: date
        externalId:
          type: string
          example: 95174ff9-1a75-4d72-a413-6f9b1cb988b7
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Loan Processing fee
        penalty:
          type: boolean
          example: false
        percentage:
          type: number
          format: double
          example: 0
        submittedOnDate:
          type: string
          format: date
    GetLoansLoanIdChargesTemplateResponse:
      type: object
      description: GetLoansLoanIdChargesTemplateResponse
      properties:
        amountPaid:
          type: number
          format: double
          example: 0.0
        amountWaived:
          type: number
          format: double
          example: 0.0
        amountWrittenOff:
          type: number
          format: double
          example: 0.0
        chargeOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetLoanChargeTemplateChargeOptions'
          uniqueItems: true
        penalty:
          type: boolean
          example: false
    GetLoansLoanIdCodeValueData:
      type: object
      description: List of GetLoansLoanIdCodeValueData
      properties:
        active:
          type: boolean
          example: true
        description:
          type: string
          example: code description
        id:
          type: integer
          format: int64
          example: 1
        mandatory:
          type: boolean
          example: false
        name:
          type: string
          example: code name
        position:
          type: integer
          format: int32
          example: 0
    GetLoansLoanIdCollateralsResponse:
      type: object
      description: GetLoansLoanIdCollateralsResponse
      properties:
        currency:
          $ref: '#/components/schemas/GetCollateralCurrencyResponse'
        description:
          type: string
          example: 24 Carat Gold chain weighing 12 grams
        id:
          type: integer
          format: int64
          example: 12
        type:
          $ref: '#/components/schemas/GetCollateralTypeResponse'
        value:
          type: integer
          format: int64
          example: 50000
    GetLoansLoanIdCollateralsTemplateResponse:
      type: object
      description: GetLoansLoanIdCollateralsTemplateResponse
      properties:
        allowedCollateralTypes:
          type: array
          items:
            $ref: '#/components/schemas/GetCollateralsTemplateAllowedTypes'
          uniqueItems: true
    GetLoansLoanIdCurrency:
      type: object
      properties:
        code:
          type: string
          example: UGX
        decimalPlaces:
          type: integer
          format: int32
          example: 2
        displayLabel:
          type: string
          example: Uganda Shilling (USh)
        displaySymbol:
          type: string
          example: USh
        name:
          type: string
          example: Uganda Shilling
        nameCode:
          type: string
          example: currency.UGX
    GetLoansLoanIdDelinquencyPausePeriod:
      type: object
      description: List of GetLoansLoanIdDelinquencyPausePeriod
      properties:
        active:
          type: boolean
          example: true
        pausePeriodEnd:
          type: string
          format: date
        pausePeriodStart:
          type: string
          format: date
    GetLoansLoanIdDelinquencySummary:
      type: object
      description: Delinquent data
      properties:
        availableDisbursementAmount:
          type: number
          format: double
          example: 100.0
        delinquencyPausePeriods:
          type: array
          description: List of GetLoansLoanIdDelinquencyPausePeriod
          items:
            $ref: '#/components/schemas/GetLoansLoanIdDelinquencyPausePeriod'
        delinquentAmount:
          type: number
          format: double
          example: 100.0
        delinquentDate:
          type: string
          format: date
        delinquentDays:
          type: integer
          format: int32
          example: 4
        installmentLevelDelinquency:
          type: array
          description: List of GetLoansLoanIdLoanInstallmentLevelDelinquency
          items:
            $ref: '#/components/schemas/GetLoansLoanIdLoanInstallmentLevelDelinquency'
        lastPaymentAmount:
          type: number
          format: double
          example: 100.0
        lastPaymentDate:
          type: string
          format: date
        lastRepaymentAmount:
          type: number
          format: double
          example: 100.0
        lastRepaymentDate:
          type: string
          format: date
        nextPaymentDueDate:
          type: string
          format: date
        pastDueDays:
          type: integer
          format: int32
          example: 12
    GetLoansLoanIdDisbursementDetails:
      type: object
      properties:
        actualDisbursementDate:
          type: string
          format: date
        approvedPrincipal:
          type: number
          format: float
          example: 22000.0
        chargeAmount:
          type: number
          format: double
          example: 22000.0
        dateFormat:
          type: string
          example: dd MMMM yyyy
        expectedDisbursementDate:
          type: string
          format: date
        id:
          type: integer
          format: int32
          example: 71
        loanChargeId:
          type: string
          example: "1"
        locale:
          type: string
          example: de_DE
        netDisbursalAmount:
          type: number
          format: double
          example: 22000.0
        note:
          type: string
          example: some note
        principal:
          type: number
          format: double
          example: 22000.0
        waivedChargeAmount:
          type: number
          format: double
          example: 22000.0
    GetLoansLoanIdEmiVariations:
      type: object
    GetLoansLoanIdEnumOptionData:
      type: object
      description: Enum option data
      properties:
        code:
          type: string
          example: chargeTimeType.specifiedDueDate
        id:
          type: integer
          format: int64
          example: 2
        value:
          type: string
          example: Specified due date
    GetLoansLoanIdFeeFrequency:
      type: object
      properties:
        code:
          type: string
          example: feeFrequencyperiodFrequencyType.weeks
        description:
          type: string
          example: Weeks
        id:
          type: integer
          format: int32
          example: 1
    GetLoansLoanIdInterestCalculationPeriodType:
      type: object
      properties:
        code:
          type: string
          example: interestCalculationPeriodType.same.as.repayment.period
        description:
          type: string
          example: Same as repayment period
        id:
          type: integer
          format: int32
          example: 1
    GetLoansLoanIdInterestRateFrequencyType:
      type: object
      properties:
        code:
          type: string
          example: interestRateFrequency.periodFrequencyType.years
        description:
          type: string
          example: Per year
        id:
          type: integer
          format: int32
          example: 3
    GetLoansLoanIdInterestType:
      type: object
      properties:
        code:
          type: string
          example: interestType.flat
        description:
          type: string
          example: Flat
        id:
          type: integer
          format: int32
          example: 1
    GetLoansLoanIdLinkedAccount:
      type: object
      properties:
        accountNo:
          type: integer
          format: int64
          example: 1
        id:
          type: integer
          format: int32
          example: 1
    GetLoansLoanIdLoanChargeData:
      type: object
      description: Set of charges
      properties:
        amount:
          type: number
          format: double
          example: 102.0
        amountOrPercentage:
          type: number
          format: double
          example: 102.0
        amountOutstanding:
          type: number
          format: double
          example: 102.0
        amountPaid:
          type: number
          format: double
          example: 12.0
        amountPercentageAppliedTo:
          type: number
          format: double
          example: 13.56
        amountWaived:
          type: number
          format: double
          example: 14.0
        amountWrittenOff:
          type: number
          format: double
          example: 102.0
        chargeCalculationType:
          $ref: '#/components/schemas/GetLoansLoanIdEnumOptionData'
        chargeId:
          type: integer
          format: int64
          example: 5
        chargePayable:
          type: boolean
          example: false
        chargePaymentMode:
          $ref: '#/components/schemas/GetLoansLoanIdEnumOptionData'
        chargeTimeType:
          $ref: '#/components/schemas/GetLoansLoanIdEnumOptionData'
        currency:
          $ref: '#/components/schemas/GetLoansLoanIdCurrency'
        dueDate:
          type: string
          format: date
        id:
          type: integer
          format: int64
          example: 3
        installmentChargeData:
          type: array
          description: List of GetLoansLoanIdLoanInstallmentChargeData
          items:
            $ref: '#/components/schemas/GetLoansLoanIdLoanInstallmentChargeData'
        loanId:
          type: integer
          format: int64
          example: 3
        maxCap:
          type: number
          format: double
          example: 30.0
        minCap:
          type: number
          format: double
          example: 30.0
        name:
          type: string
          example: snooze fee
        paid:
          type: boolean
          example: false
        penalty:
          type: boolean
          example: false
        percentage:
          type: number
          format: double
          example: 3.4
        waived:
          type: boolean
          example: false
    GetLoansLoanIdLoanChargePaidByData:
      type: object
      description: List of GetLoansLoanIdLoanChargePaidByData
      properties:
        amount:
          type: number
          format: double
          example: 100.0
        chargeId:
          type: integer
          format: int64
          example: 1
        id:
          type: integer
          format: int64
          example: 11
        installmentNumber:
          type: integer
          format: int32
          example: 9679
        name:
          type: string
          example: name
        transactionId:
          type: integer
          format: int64
          example: 636
    GetLoansLoanIdLoanInstallmentChargeData:
      type: object
      description: List of GetLoansLoanIdLoanInstallmentChargeData
      properties:
        amount:
          type: number
          format: double
          example: 13.56
        amountAccrued:
          type: number
          format: double
          example: 13.56
        amountOutstanding:
          type: number
          format: double
          example: 13.56
        amountUnrecognized:
          type: number
          format: double
          example: 13.56
        amountWaived:
          type: number
          format: double
          example: 13.56
        dueDate:
          type: string
          format: date
        installmentNumber:
          type: integer
          format: int32
          example: 2
        paid:
          type: boolean
          example: false
        waived:
          type: boolean
          example: false
    GetLoansLoanIdLoanInstallmentLevelDelinquency:
      type: object
      description: List of GetLoansLoanIdLoanInstallmentLevelDelinquency
      properties:
        classification:
          type: string
          example: Delinquency Range 3 to 5 days
        delinquentAmount:
          type: number
          example: 250.0
        maximumAgeDays:
          type: integer
          format: int32
          example: 5
        minimumAgeDays:
          type: integer
          format: int32
          example: 3
        rangeId:
          type: integer
          format: int64
          example: 112
    GetLoansLoanIdLoanRepaymentScheduleInstallmentData:
      type: object
      description: List of GetLoansLoanIdLoanRepaymentScheduleInstallmentData
      properties:
        amount:
          type: number
          example: 100.0
        date:
          type: string
          format: date
        id:
          type: integer
          format: int64
          example: 1
        installmentId:
          type: integer
          format: int32
          example: 11
    GetLoansLoanIdLoanTransactionEnumData:
      type: object
      description: Transaction type
      properties:
        accrual:
          type: boolean
          example: false
        approveTransfer:
          type: boolean
          example: false
        chargeAdjustment:
          type: boolean
          example: false
        chargePayment:
          type: boolean
          example: false
        chargeoff:
          type: boolean
          example: false
        code:
          type: string
          example: loanTransactionType.repayment
        contra:
          type: boolean
          example: false
        creditBalanceRefund:
          type: boolean
          example: false
        disbursement:
          type: boolean
          example: false
        goodwillCredit:
          type: boolean
          example: false
        id:
          type: integer
          format: int64
          example: 1
        initiateTransfer:
          type: boolean
          example: false
        merchantIssuedRefund:
          type: boolean
          example: false
        payoutRefund:
          type: boolean
          example: false
        recoveryRepayment:
          type: boolean
          example: false
        refund:
          type: boolean
          example: false
        refundForActiveLoans:
          type: boolean
          example: false
        rejectTransfer:
          type: boolean
          example: false
        repayment:
          type: boolean
          example: true
        repaymentAtDisbursement:
          type: boolean
          example: false
        value:
          type: string
          example: "2"
        waiveCharges:
          type: boolean
          example: false
        waiveInterest:
          type: boolean
          example: false
        withdrawTransfer:
          type: boolean
          example: false
        writeOff:
          type: boolean
          example: false
    GetLoansLoanIdLoanTransactionRelation:
      type: object
      description: List of GetLoansLoanIdLoanTransactionRelationData
      properties:
        amount:
          type: number
          format: double
          example: 100.0
        fromLoanTransaction:
          type: integer
          format: int64
          example: 1
        paymentType:
          type: string
          example: Repayment Adjustment Chargeback
        relationType:
          type: string
          example: CHARGEBACK
        toLoanCharge:
          type: integer
          format: int64
          example: 10
        toLoanTransaction:
          type: integer
          format: int64
          example: 10
    GetLoansLoanIdLoanType:
      type: object
      properties:
        code:
          type: string
          example: loanType.individual
        description:
          type: string
          example: Individual
        id:
          type: integer
          format: int32
          example: 1
    GetLoansLoanIdOverdueCharges:
      type: object
      properties:
        active:
          type: boolean
          example: true
        amount:
          type: number
          format: float
          example: 3.0
        chargeAppliesTo:
          $ref: '#/components/schemas/GetLoanChargeTemplateChargeAppliesTo'
        chargeCalculationType:
          $ref: '#/components/schemas/GetLoansLoanIdChargeCalculationType'
        chargePaymentMode:
          $ref: '#/components/schemas/GetLoansLoanIdChargePaymentMode'
        chargeTimeType:
          $ref: '#/components/schemas/GetLoansLoanIdChargeTimeType'
        currency:
          $ref: '#/components/schemas/GetLoanCurrency'
        feeFrequency:
          $ref: '#/components/schemas/GetLoansLoanIdFeeFrequency'
        feeInterval:
          type: integer
          format: int32
          example: 2
        id:
          type: integer
          format: int32
          example: 20
        name:
          type: string
          example: overdraft penality
        penalty:
          type: boolean
          example: true
    GetLoansLoanIdPaymentDetailData:
      type: object
      description: Payment detail
      properties:
        accountNumber:
          type: string
          example: acc123
        bankNumber:
          type: string
          example: ban123
        checkNumber:
          type: string
          example: che123
        id:
          type: integer
          format: int64
          example: 62
        paymentType:
          $ref: '#/components/schemas/GetLoansLoanIdPaymentType'
        receiptNumber:
          type: string
          example: rec123
        routingCode:
          type: string
          example: rou123
    GetLoansLoanIdPaymentType:
      type: object
      description: List of GetLoansLoanIdPaymentType
      properties:
        description:
          type: string
          example: Cash Payment
        id:
          type: integer
          format: int64
          example: 11
        isCashPayment:
          type: boolean
          example: true
        name:
          type: string
          example: Cash
        position:
          type: integer
          format: int64
          example: 0
    GetLoansLoanIdRepaymentFrequencyType:
      type: object
      properties:
        code:
          type: string
          example: repaymentFrequency.periodFrequencyType.months
        description:
          type: string
          example: Months
        id:
          type: integer
          format: int32
          example: 2
    GetLoansLoanIdRepaymentPeriod:
      type: object
      properties:
        complete:
          type: boolean
          example: true
        daysInPeriod:
          type: integer
          format: int64
          example: 30
        downPaymentPeriod:
          type: boolean
          example: true
        dueDate:
          type: string
          format: date
        feeChargesDue:
          type: number
          format: double
          example: 0.0
        feeChargesOutstanding:
          type: number
          format: double
          example: 20.0
        feeChargesPaid:
          type: number
          format: double
          example: 20.0
        feeChargesWaived:
          type: number
          format: double
          example: 20.0
        feeChargesWrittenOff:
          type: number
          format: double
          example: 20.0
        fromDate:
          type: string
          format: date
        interestDue:
          type: number
          format: double
          example: 0.0
        interestOriginalDue:
          type: number
          format: double
          example: 0.0
        interestOutstanding:
          type: number
          format: double
          example: 0.0
        interestPaid:
          type: number
          format: double
          example: 0.0
        interestWaived:
          type: number
          format: double
          example: 0.0
        interestWrittenOff:
          type: number
          format: double
          example: 0.0
        obligationsMetOnDate:
          type: string
          format: date
        penaltyChargesDue:
          type: number
          format: double
          example: 20.0
        penaltyChargesOutstanding:
          type: number
          format: double
          example: 20.0
        penaltyChargesPaid:
          type: number
          format: double
          example: 20.0
        penaltyChargesWaived:
          type: number
          format: double
          example: 20.0
        penaltyChargesWrittenOff:
          type: number
          format: double
          example: 20.0
        period:
          type: integer
          format: int32
          example: 1
        principalDue:
          type: number
          format: double
          example: 200.0
        principalLoanBalanceOutstanding:
          type: number
          format: double
          example: 20.0
        principalOriginalDue:
          type: number
          format: double
          example: 200.0
        principalOutstanding:
          type: number
          format: double
          example: 20.0
        principalPaid:
          type: number
          format: double
          example: 200.0
        principalWrittenOff:
          type: number
          format: double
          example: 0.0
        totalActualCostOfLoanForPeriod:
          type: number
          format: double
          example: 20.0
        totalCredits:
          type: number
          format: double
          example: 2.0
        totalDueForPeriod:
          type: number
          format: double
          example: 20.0
        totalInstallmentAmountForPeriod:
          type: number
          format: double
          example: 200.0
        totalOriginalDueForPeriod:
          type: number
          format: double
          example: 20.0
        totalOutstandingForPeriod:
          type: number
          format: double
          example: 200.0
        totalPaidForPeriod:
          type: number
          format: double
          example: 20.0
        totalPaidInAdvanceForPeriod:
          type: number
          format: double
          example: 20.0
        totalPaidLateForPeriod:
          type: number
          format: double
          example: 20.0
        totalWaivedForPeriod:
          type: number
          format: double
          example: 20.0
        totalWrittenOffForPeriod:
          type: number
          format: double
          example: 20.0
    GetLoansLoanIdRepaymentSchedule:
      type: object
      properties:
        currency:
          $ref: '#/components/schemas/GetLoansLoanIdCurrency'
        loanTermInDays:
          type: integer
          format: int64
          example: 30
        periods:
          type: array
          items:
            $ref: '#/components/schemas/GetLoansLoanIdRepaymentPeriod'
        totalFeeChargesCharged:
          type: number
          format: double
          example: 0.0
        totalInterestCharged:
          type: number
          format: double
          example: 0.0
        totalOutstanding:
          type: number
          format: double
          example: 0.0
        totalPaidInAdvance:
          type: number
          format: double
          example: 200.0
        totalPaidLate:
          type: number
          format: double
          example: 0.0
        totalPenaltyChargesCharged:
          type: number
          format: double
          example: 0.0
        totalPrincipalDisbursed:
          type: number
          format: double
          example: 200.0
        totalPrincipalExpected:
          type: number
          format: double
          example: 200.0
        totalPrincipalPaid:
          type: number
          format: double
          example: 200.0
        totalRepaymentExpected:
          type: number
          format: double
          example: 200.0
        totalWaived:
          type: number
          format: double
          example: 0.0
        totalWrittenOff:
          type: number
          format: double
          example: 0.0
    GetLoansLoanIdResponse:
      type: object
      description: GetLoansLoanIdResponse
      properties:
        accountNo:
          type: string
          example: "000000001"
        amortizationType:
          $ref: '#/components/schemas/GetLoansLoanIdAmortizationType'
        annualInterestRate:
          type: integer
          format: int32
          example: 24
        approvedPrincipal:
          type: number
          format: double
          example: 1000.0
        chargedOff:
          type: boolean
          example: false
        charges:
          type: array
          description: Set of charges
          items:
            $ref: '#/components/schemas/GetLoansLoanIdLoanChargeData'
        clientExternalId:
          type: string
          example: 5e77989e-aa11-11bc-b109-0242ac120004
        clientId:
          type: integer
          format: int64
          example: 1
        clientName:
          type: string
          example: Kampala first Client
        clientOfficeId:
          type: integer
          format: int64
          example: 2
        currency:
          $ref: '#/components/schemas/GetLoansLoanIdCurrency'
        delinquencyRange:
          $ref: '#/components/schemas/GetDelinquencyRangesResponse'
        delinquent:
          $ref: '#/components/schemas/GetLoansLoanIdDelinquencySummary'
        disallowExpectedDisbursements:
          type: boolean
          example: false
        disbursedAmountPercentageForDownPayment:
          type: number
          example: 0.0
        disbursementDetails:
          type: array
          description: Set of GetLoansLoanIdDisbursementDetails
          items:
            $ref: '#/components/schemas/GetLoansLoanIdDisbursementDetails'
          uniqueItems: true
        enableAutoRepaymentForDownPayment:
          type: boolean
          example: false
        enableDownPayment:
          type: boolean
          example: false
        enableInstallmentLevelDelinquency:
          type: boolean
          example: false
        externalId:
          type: string
          example: 95174ff9-1a75-4d72-a413-6f9b1cb988b7
        fixedPrincipalPercentagePerInstallment:
          type: number
          example: 5.5
        fraud:
          type: boolean
          example: false
        id:
          type: integer
          format: int64
          example: 1
        inArrearsTolerance:
          type: integer
          format: int32
          example: 3
        interestCalculationPeriodType:
          $ref: '#/components/schemas/GetLoansLoanIdInterestCalculationPeriodType'
        interestRateFrequencyType:
          $ref: '#/components/schemas/GetLoansLoanIdInterestRateFrequencyType'
        interestRatePerPeriod:
          type: number
          example: 24
        interestType:
          $ref: '#/components/schemas/GetLoansLoanIdInterestType'
        isFloatingInterestRate:
          type: boolean
          example: false
        lastClosedBusinessDate:
          type: string
          format: date
        loanOfficerId:
          type: integer
          format: int64
          example: 2
        loanOfficerName:
          type: string
          example: "LoanOfficer, Kampala"
        loanProductDescription:
          type: string
          example: Typical Kampala loan product with cash accounting enabled for testing.
        loanProductId:
          type: integer
          format: int64
          example: 1
        loanProductName:
          type: string
          example: Kampala Product (with cash accounting)
        loanPurposeId:
          type: integer
          format: int64
          example: 22
        loanPurposeName:
          type: string
          example: option.HousingImprovement
        loanScheduleProcessingType:
          $ref: '#/components/schemas/EnumOptionData'
        loanScheduleType:
          $ref: '#/components/schemas/EnumOptionData'
        loanType:
          $ref: '#/components/schemas/GetLoansLoanIdLoanType'
        netDisbursalAmount:
          type: number
          format: double
          example: 200.0
        numberOfRepayments:
          type: integer
          format: int32
          example: 12
        overpaidOnDate:
          type: string
          format: date
        principal:
          type: number
          example: 1000000.0
        proposedPrincipal:
          type: number
          format: double
          example: 1001.0
        repaymentEvery:
          type: integer
          format: int32
          example: 1
        repaymentFrequencyType:
          $ref: '#/components/schemas/GetLoansLoanIdRepaymentFrequencyType'
        repaymentSchedule:
          $ref: '#/components/schemas/GetLoansLoanIdRepaymentSchedule'
        status:
          $ref: '#/components/schemas/GetLoansLoanIdStatus'
        summary:
          $ref: '#/components/schemas/GetLoansLoanIdSummary'
        termFrequency:
          type: integer
          format: int32
          example: 12
        termPeriodFrequencyType:
          $ref: '#/components/schemas/GetLoansLoanIdTermPeriodFrequencyType'
        timeline:
          $ref: '#/components/schemas/GetLoansLoanIdTimeline'
        totalOverpaid:
          type: number
          format: double
          example: 250.0
        transactionProcessingStrategyCode:
          type: string
          example: mifos-standard-strategy
        transactions:
          type: array
          description: Set of GetLoansLoanIdTransactions
          items:
            $ref: '#/components/schemas/GetLoansLoanIdTransactions'
    GetLoansLoanIdStatus:
      type: object
      properties:
        active:
          type: boolean
          example: true
        closed:
          type: boolean
          example: false
        closedObligationsMet:
          type: boolean
          example: false
        closedRescheduled:
          type: boolean
          example: false
        closedWrittenOff:
          type: boolean
          example: false
        code:
          type: string
          example: loanStatusType.active
        description:
          type: string
          example: Active
        id:
          type: integer
          format: int32
          example: 300
        overpaid:
          type: boolean
          example: false
        pendingApproval:
          type: boolean
          example: false
        waitingForDisbursal:
          type: boolean
          example: false
    GetLoansLoanIdSummary:
      type: object
      properties:
        canDisburse:
          type: boolean
          example: false
        chargeOffReason:
          type: string
          example: reason
        chargeOffReasonId:
          type: integer
          format: int64
          example: 1
        currency:
          $ref: '#/components/schemas/GetLoansLoanIdCurrency'
        disbursementDetails:
          type: array
          items:
            $ref: '#/components/schemas/GetLoansLoanIdDisbursementDetails'
          uniqueItems: true
        emiAmountVariations:
          type: array
          items:
            $ref: '#/components/schemas/GetLoansLoanIdEmiVariations'
          uniqueItems: true
        feeAdjustments:
          type: number
          format: double
          example: 0.0
        feeChargesCharged:
          type: number
          format: double
          example: 18000.0
        feeChargesDueAtDisbursementCharged:
          type: number
          format: double
          example: 0.0
        feeChargesOutstanding:
          type: number
          format: double
          example: 18000.0
        feeChargesOverdue:
          type: number
          format: double
          example: 15000.0
        feeChargesPaid:
          type: number
          format: double
          example: 0.0
        feeChargesWaived:
          type: number
          format: double
          example: 0.0
        feeChargesWrittenOff:
          type: number
          format: double
          example: 0.0
        fixedEmiAmount:
          type: number
          format: double
          example: 1100.0
        inArrears:
          type: boolean
          example: true
        interestCharged:
          type: number
          format: double
          example: 240000.0
        interestOutstanding:
          type: number
          format: double
          example: 240000.0
        interestOverdue:
          type: number
          format: double
          example: 200000.0
        interestPaid:
          type: number
          format: double
          example: 0.0
        interestWaived:
          type: number
          format: double
          example: 0.0
        interestWrittenOff:
          type: number
          format: double
          example: 0.0
        isNPA:
          type: boolean
          example: false
        linkedAccount:
          $ref: '#/components/schemas/GetLoansLoanIdLinkedAccount'
        maxOutstandingLoanBalance:
          type: number
          format: double
          example: 35000.0
        overdueCharges:
          type: array
          items:
            $ref: '#/components/schemas/GetLoansLoanIdOverdueCharges'
          uniqueItems: true
        overdueSinceDate:
          type: string
          format: date
        penaltyAdjustments:
          type: number
          format: double
          example: 0.0
        penaltyChargesCharged:
          type: number
          format: double
          example: 0.0
        penaltyChargesOutstanding:
          type: number
          format: double
          example: 0.0
        penaltyChargesOverdue:
          type: number
          format: double
          example: 0.0
        penaltyChargesPaid:
          type: number
          format: double
          example: 0.0
        penaltyChargesWaived:
          type: number
          format: double
          example: 0.0
        penaltyChargesWrittenOff:
          type: number
          format: double
          example: 0.0
        principalAdjustments:
          type: number
          format: double
          example: 0.0
        principalDisbursed:
          type: number
          format: double
          example: 1000000.0
        principalOutstanding:
          type: number
          format: double
          example: 1000000.0
        principalOverdue:
          type: number
          format: double
          example: 833333.3
        principalPaid:
          type: number
          format: double
          example: 0.0
        principalWrittenOff:
          type: number
          format: double
          example: 0.0
        totalChargeAdjustment:
          type: number
          format: double
          example: 0.0
        totalChargeAdjustmentReversed:
          type: number
          format: double
          example: 0.0
        totalChargeback:
          type: number
          format: double
          example: 0.0
        totalCostOfLoan:
          type: number
          format: double
          example: 0.0
        totalCreditBalanceRefund:
          type: number
          format: double
          example: 0.0
        totalCreditBalanceRefundReversed:
          type: number
          format: double
          example: 0.0
        totalExpectedCostOfLoan:
          type: number
          format: double
          example: 258000.0
        totalExpectedRepayment:
          type: number
          format: double
          example: 1258000.0
        totalGoodwillCredit:
          type: number
          format: double
          example: 0.0
        totalGoodwillCreditReversed:
          type: number
          format: double
          example: 0.0
        totalMerchantRefund:
          type: number
          format: double
          example: 0.0
        totalMerchantRefundReversed:
          type: number
          format: double
          example: 0.0
        totalOutstanding:
          type: number
          format: double
          example: 1258000.0
        totalOverdue:
          type: number
          format: double
          example: 1048333.3
        totalPayoutRefund:
          type: number
          format: double
          example: 0.0
        totalPayoutRefundReversed:
          type: number
          format: double
          example: 0.0
        totalRecovered:
          type: number
          format: double
          example: 2456.3
        totalRepayment:
          type: number
          format: double
          example: 0.0
        totalRepaymentTransaction:
          type: number
          format: double
          example: 0.0
        totalRepaymentTransactionReversed:
          type: number
          format: double
          example: 0.0
        totalWaived:
          type: number
          format: double
          example: 0.0
        totalWrittenOff:
          type: number
          format: double
          example: 0.0
        writeoffReason:
          type: string
          example: reason
        writeoffReasonId:
          type: integer
          format: int64
          example: 1
    GetLoansLoanIdTermPeriodFrequencyType:
      type: object
      properties:
        code:
          type: string
          example: termFrequency.periodFrequencyType.months
        description:
          type: string
          example: Months
        id:
          type: integer
          format: int32
          example: 2
    GetLoansLoanIdTimeline:
      type: object
      properties:
        actualDisbursementDate:
          type: string
          format: date
        actualMaturityDate:
          type: string
          format: date
        approvedByFirstname:
          type: string
          example: App
        approvedByLastname:
          type: string
          example: Administrator
        approvedByUsername:
          type: string
          example: admin
        approvedOnDate:
          type: string
          format: date
        chargedOffByFirstname:
          type: string
          example: App
        chargedOffByLastname:
          type: string
          example: Administrator
        chargedOffByUsername:
          type: string
          example: admin
        chargedOffOnDate:
          type: string
          format: date
        closedOnDate:
          type: string
          format: date
        disbursedByFirstname:
          type: string
          example: App
        disbursedByLastname:
          type: string
          example: Administrator
        disbursedByUsername:
          type: string
          example: admin
        expectedDisbursementDate:
          type: string
          format: date
        expectedMaturityDate:
          type: string
          format: date
        submittedByFirstname:
          type: string
          example: App
        submittedByLastname:
          type: string
          example: Administrator
        submittedByUsername:
          type: string
          example: admin
        submittedOnDate:
          type: string
          format: date
    GetLoansLoanIdTransactions:
      type: object
      description: Set of GetLoansLoanIdTransactions
      properties:
        accountId:
          type: integer
          format: int64
          example: 7327
        accountNumber:
          type: string
          example: acct123
        amount:
          type: number
          format: double
          example: 100.0
        bankNumber:
          type: integer
          format: int32
          example: 34645568
        checkNumber:
          type: integer
          format: int32
          example: 10001
        currency:
          $ref: '#/components/schemas/GetLoansLoanIdCurrency'
        date:
          type: string
          format: date
        dateFormat:
          type: string
          example: dd MMMM yyyy
        externalId:
          type: string
          example: "3"
        feeChargesPortion:
          type: number
          format: double
          example: 100.0
        fixedEmiAmount:
          type: number
          format: double
          example: 100.0
        id:
          type: integer
          format: int64
          example: 1
        interestPortion:
          type: number
          format: double
          example: 100.0
        loanChargePaidByList:
          type: array
          description: List of GetLoansLoanIdLoanChargePaidByData
          items:
            $ref: '#/components/schemas/GetLoansLoanIdLoanChargePaidByData'
        loanRepaymentScheduleInstallments:
          type: array
          description: List of GetLoansLoanIdLoanRepaymentScheduleInstallmentData
          items:
            $ref: '#/components/schemas/GetLoansLoanIdLoanRepaymentScheduleInstallmentData'
        locale:
          type: string
          example: de_DE
        manuallyReversed:
          type: boolean
        netDisbursalAmount:
          type: number
          format: double
          example: 100.0
        numberOfRepayments:
          type: integer
          format: int32
          example: 4
        officeId:
          type: integer
          format: int64
          example: 1
        officeName:
          type: string
          example: Head Office
        outstandingLoanBalance:
          type: number
          format: double
          example: 100.0
        overpaymentPortion:
          type: number
          format: double
          example: 100.0
        paymentDetailData:
          $ref: '#/components/schemas/GetLoansLoanIdPaymentDetailData'
        paymentTypeId:
          type: integer
          format: int32
          example: 101
        paymentTypeOptions:
          type: array
          description: List of GetLoansLoanIdPaymentType
          items:
            $ref: '#/components/schemas/GetLoansLoanIdPaymentType'
        penaltyChargesPortion:
          type: number
          format: double
          example: 100.0
        possibleNextRepaymentDate:
          type: string
          format: date
        principalPortion:
          type: number
          format: double
          example: 100.0
        receiptNumber:
          type: integer
          format: int32
          example: 67863
        reversalExternalId:
          type: string
          example: 95174ff9-1a75-4d72-a413-6f9b1cb988b7
        reversedOnDate:
          type: string
          format: date
        routingCode:
          type: integer
          format: int32
          example: 6337
        submittedOnDate:
          type: string
          format: date
        transactionAmount:
          type: number
          format: double
          example: 100.0
        transactionDate:
          type: string
          format: date
        transactionRelations:
          type: array
          description: List of GetLoansLoanIdLoanTransactionRelationData
          items:
            $ref: '#/components/schemas/GetLoansLoanIdLoanTransactionRelation'
          uniqueItems: true
        transactionType:
          type: string
          example: repayment
        type:
          $ref: '#/components/schemas/GetLoansLoanIdLoanTransactionEnumData'
        unrecognizedIncomePortion:
          type: number
          format: double
          example: 100.0
        writeOffReasonOptions:
          type: array
          description: List of GetLoansLoanIdCodeValueData
          items:
            $ref: '#/components/schemas/GetLoansLoanIdCodeValueData'
    GetLoansLoanIdTransactionsTemplateResponse:
      type: object
      description: GetLoansLoanIdTransactionsTemplateResponse
      properties:
        date:
          type: string
          format: date
        total:
          $ref: '#/components/schemas/GetLoansTotal'
        transactionType:
          $ref: '#/components/schemas/GetLoansTransactionType'
    GetLoansLoanIdTransactionsTransactionIdResponse:
      type: object
      description: GetLoansLoanIdTransactionsTransactionIdResponse
      properties:
        amount:
          type: number
          format: double
          example: 559.88
        currency:
          $ref: '#/components/schemas/GetLoansCurrency'
        date:
          type: string
          format: date
        externalId:
          type: string
          example: "20120514"
        feeChargesPortion:
          type: number
          format: double
          example: 23.9
        id:
          type: integer
          format: int64
          example: 3
        interestPortion:
          type: number
          format: double
          example: 559.88
        loanChargePaidByList:
          type: array
          items:
            $ref: '#/components/schemas/GetLoansLoanIdLoanChargePaidByData'
          uniqueItems: true
        manuallyReversed:
          type: boolean
          example: false
        netDisbursalAmount:
          type: number
          format: double
          example: 1000.0
        outstandingLoanBalance:
          type: number
          format: double
          example: 100.0
        overpaymentPortion:
          type: number
          format: double
          example: 33.0
        paymentDetailData:
          $ref: '#/components/schemas/PaymentDetailData'
        penaltyChargesPortion:
          type: number
          format: double
          example: 12.8
        possibleNextRepaymentDate:
          type: string
          format: date
        principalPortion:
          type: number
          format: double
          example: 240.0
        reversalExternalId:
          type: string
          example: "20120514"
        reversedOnDate:
          type: string
          format: date
        submittedOnDate:
          type: string
          format: date
        transactionRelations:
          type: array
          items:
            $ref: '#/components/schemas/GetLoanTransactionRelation'
          uniqueItems: true
        type:
          $ref: '#/components/schemas/GetLoansType'
        unrecognizedIncomePortion:
          type: number
          format: double
          example: 55.5
    GetLoansProductsDaysInMonthTemplateType:
      type: object
      properties:
        code:
          type: string
          example: DaysInMonthType.actual
        description:
          type: string
          example: Actual
        id:
          type: integer
          format: int64
          example: 1
    GetLoansProductsDaysInMonthType:
      type: object
      properties:
        code:
          type: string
          example: DaysInMonthType.days360
        description:
          type: string
          example: 30 Days
        id:
          type: integer
          format: int64
          example: 30
    GetLoansProductsDaysInYearType:
      type: object
      properties:
        code:
          type: string
          example: DaysInYearType.days360
        description:
          type: string
          example: 360 Days
        id:
          type: integer
          format: int64
          example: 360
    GetLoansProductsInterestCalculationPeriodType:
      type: object
      properties:
        code:
          type: string
          example: interestCalculationPeriodType.same.as.repayment.period
        description:
          type: string
          example: Same as repayment period
        id:
          type: integer
          format: int64
          example: 1
    GetLoansResponse:
      type: object
      description: GetLoansResponse
      properties:
        pageItems:
          type: array
          items:
            $ref: '#/components/schemas/GetLoansLoanIdResponse'
          uniqueItems: true
        totalFilteredRecords:
          type: integer
          format: int32
          example: 1
    GetLoansTemplateProductOptions:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Kampala Product (with cash accounting)
    GetLoansTemplateResponse:
      type: object
      description: GetLoansTemplateResponse
      properties:
        clientId:
          type: integer
          format: int64
          example: 1
        clientName:
          type: string
          example: Kampala first Client
        clientOfficeId:
          type: integer
          format: int64
          example: 2
        productOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetLoansTemplateProductOptions'
          uniqueItems: true
        timeline:
          $ref: '#/components/schemas/GetLoansTemplateTimeline'
    GetLoansTemplateTimeline:
      type: object
      properties:
        expectedDisbursementDate:
          type: string
          format: date
    GetLoansTotal:
      type: object
      properties:
        amount:
          type: number
          format: float
          example: 471
        currencyCode:
          type: string
          example: XOF
        defaultName:
          type: string
          example: CFA Franc BCEAO
        digitsAfterDecimal:
          type: integer
          format: int32
          example: 0
        displaySymbol:
          type: string
          example: CFA
        displaySymbolValue:
          type: string
          example: 471 CFA
        greaterThanZero:
          type: boolean
          example: true
        inMultiplesOf:
          type: integer
          format: int32
          example: 0
        nameCode:
          type: string
          example: currency.XOF
        zero:
          type: boolean
          example: false
    GetLoansTransactionType:
      type: object
      properties:
        code:
          type: string
          example: loanTransactionType.repayment
        description:
          type: string
          example: Repayment
        id:
          type: integer
          format: int64
          example: 2
    GetLoansType:
      type: object
      properties:
        code:
          type: string
          example: loanTransactionType.repayment
        contra:
          type: boolean
          example: false
        description:
          type: string
          example: Repayment
        disbursement:
          type: boolean
          example: false
        externalId:
          type: string
          example: 3e7791ce-aa10-11ec-b909-0242ac120002
        externalLoanId:
          type: string
          example: 3e7791ce-aa10-11ec-b909-0242ac120002
        id:
          type: integer
          format: int64
          example: 2
        loanId:
          type: integer
          format: int64
          example: 2
        recoveryRepayment:
          type: boolean
          example: false
        repayment:
          type: boolean
          example: true
        repaymentAtDisbursement:
          type: boolean
          example: false
        waiveCharges:
          type: boolean
          example: false
        waiveInterest:
          type: boolean
          example: false
        writeOff:
          type: boolean
          example: false
    GetLockPeriodTypeEnum:
      type: object
      properties:
        description:
          type: string
          example: Days
        id:
          type: integer
          format: int64
          example: 0
    GetMakerCheckerResponse:
      type: object
      description: GetMakerCheckerResponse
      properties:
        actionName:
          type: string
        checkedOnDate:
          type: string
          format: date-time
        checker:
          type: string
        clientId:
          type: integer
          format: int64
        clientName:
          type: string
        commandAsJson:
          type: string
        entityName:
          type: string
        groupLevelName:
          type: string
        groupName:
          type: string
        id:
          type: integer
          format: int64
        loanAccountNo:
          type: string
        loanId:
          type: integer
          format: int64
        madeOnDate:
          type: string
          format: date-time
        maker:
          type: string
        officeName:
          type: string
        processingResult:
          type: string
        resourceId:
          type: integer
          format: int64
        savingsAccountNo:
          type: string
        subresourceId:
          type: integer
          format: int64
        url:
          type: string
    GetMakerCheckersSearchTemplateResponse:
      type: object
      description: GetMakerCheckersSearchTemplateResponse
      properties:
        actionNames:
          type: array
          items:
            type: string
        appUsers:
          type: array
          items:
            $ref: '#/components/schemas/AppUserData'
        entityNames:
          type: array
          items:
            type: string
        processingResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessingResultLookup'
    GetNotesNoteType:
      type: object
      properties:
        code:
          type: string
          example: noteType.client
        description:
          type: string
          example: Client note
        id:
          type: integer
          format: int64
          example: 100
    GetNotification:
      type: object
      properties:
        action:
          type: string
          example: a
        actorId:
          type: integer
          format: int64
          example: 1
        content:
          type: string
          example: a
        createdAt:
          type: string
          example: a
        id:
          type: integer
          format: int64
          example: 1
        isRead:
          type: boolean
          example: true
        isSystemGenerated:
          type: boolean
          example: true
        objectId:
          type: integer
          format: int64
          example: 1
        objectType:
          type: string
          example: a
        officeId:
          type: integer
          format: int64
          example: 1
        tenantIdentifier:
          type: string
          example: a
        userIds:
          type: array
          example: []
          items:
            type: integer
            format: int64
    GetNotificationsResponse:
      type: object
      description: GetNotificationsResponse
      properties:
        pageItems:
          type: array
          items:
            $ref: '#/components/schemas/GetNotification'
        totalFilteredRecords:
          type: integer
          format: int32
          example: 10
    GetObligeeData:
      type: object
      properties:
        accountNumber:
          type: string
          example: "00000002"
        amountReleased:
          type: number
          format: double
          example: 10000.0
        amountTransferred:
          type: number
          format: double
          example: 1000.0
        displayName:
          type: string
          example: John Doe
        firstName:
          type: string
          example: John
        guaranteeAmount:
          type: number
          format: double
          example: 100.0
        lastName:
          type: string
          example: Doe
        loanAmount:
          type: number
          format: double
          example: 12000.0
    GetOfficesResponse:
      type: object
      description: GetOfficesResponse
      properties:
        allowedParents:
          type: array
          items:
            $ref: '#/components/schemas/GetOfficesResponse'
        dateFormat:
          type: string
          example: dd MMMM yyyy
        externalId:
          type: string
          example: "1"
        hierarchy:
          type: string
          example: "."
        id:
          type: integer
          format: int64
          example: 1
        locale:
          type: string
          example: en
        name:
          type: string
          example: Head Office
        nameDecorated:
          type: string
          example: Head Office
        openingDate:
          type: string
          format: date
    GetOfficesTemplateResponse:
      type: object
      description: GetOfficesTemplateResponse
      properties:
        allowedParents:
          type: array
          items:
            $ref: '#/components/schemas/GetOfficesResponse'
        openingDate:
          type: string
          format: date
    GetOldestCOBProcessedLoanResponse:
      type: object
      description: GetOldestCOBProcessedLoanResponse
      properties:
        cobBusinessDate:
          type: string
          format: date
        cobProcessedDate:
          type: string
          format: date
        loanIds:
          type: array
          items:
            type: integer
            format: int64
    GetPageItemsStandingInstructionSwagger:
      type: object
      properties:
        accountDetailId:
          type: integer
          format: int64
          example: 6
        amount:
          type: number
          format: float
          example: 150.0
        fromAccount:
          $ref: '#/components/schemas/GetFromAccountStandingInstructionSwagger'
        fromAccountType:
          $ref: '#/components/schemas/GetFromAccountTypeStandingInstructionSwagger'
        fromClient:
          $ref: '#/components/schemas/GetFromClientStandingInstructionSwagger'
        fromOffice:
          $ref: '#/components/schemas/GetFromOfficeStandingInstructionSwagger'
        id:
          type: integer
          format: int64
          example: 1
        instructionType:
          $ref: '#/components/schemas/GetInstructionTypeStandingInstructionSwagger'
        name:
          type: string
          example: test standing
        priority:
          $ref: '#/components/schemas/GetPriorityStandingInstructionSwagger'
        recurrenceFrequency:
          $ref: '#/components/schemas/GetRecurrenceFrequencyStandingInstructionSwagger'
        recurrenceInterval:
          type: integer
          format: int32
          example: 1
        recurrenceOnMonthDay:
          type: string
          format: date
        recurrenceType:
          $ref: '#/components/schemas/GetRecurrenceTypeStandingInstructionSwagger'
        status:
          $ref: '#/components/schemas/GetStatusStandingInstructionSwagger'
        toAccount:
          $ref: '#/components/schemas/GetToAccountStandingInstructionSwagger'
        toAccountType:
          $ref: '#/components/schemas/GetToAccountTypeStandingInstructionSwagger'
        toClient:
          $ref: '#/components/schemas/GetToClientStandingInstructionSwagger'
        toOffice:
          $ref: '#/components/schemas/GetToOfficeStandingInstructionSwagger'
        transferType:
          $ref: '#/components/schemas/GetTransferTypeStandingInstructionSwagger'
        validFrom:
          type: string
          format: date
    GetPasswordPreferencesTemplateResponse:
      type: object
      description: GetPasswordPreferencesTemplateResponse
      properties:
        active:
          type: boolean
          example: true
        description:
          type: string
          example: Password must be at least 1 character and not more that 50 characters
            long
        id:
          type: integer
          format: int64
          example: 1
        key:
          type: string
          example: simple
    GetPaymentTypeData:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        isSystemDefined:
          type: boolean
          example: false
        name:
          type: string
          example: Money Transfer
    GetPaymentTypesPaymentTypeIdResponse:
      type: object
      description: GetPaymentTypesPaymentTypeIdResponse
      properties:
        codeName:
          type: string
          example: REPAYMENT_REFUND
        description:
          type: string
          example: cash Payment
        id:
          type: integer
          format: int64
          example: 13
        isCashPayment:
          type: boolean
          example: true
        isSystemDefined:
          type: boolean
          example: false
        name:
          type: string
          example: cash
        position:
          type: integer
          format: int32
          example: 1
    GetPaymentTypesResponse:
      type: object
      description: GetPaymentTypesResponse
      properties:
        codeName:
          type: string
          example: REPAYMENT_REFUND
        description:
          type: string
          example: Cash
        id:
          type: integer
          format: int64
          example: 24
        isCashPayment:
          type: boolean
          example: true
        isSystemDefined:
          type: boolean
          example: false
        name:
          type: string
          example: PTC
        position:
          type: integer
          format: int32
          example: 0
    GetPermissionsResponse:
      type: object
      description: GetPermissionsResponse
      properties:
        actionName:
          type: string
          example: READ
        code:
          type: string
          example: READ_PERMISSION
        entityName:
          type: string
          example: PERMISSION
        grouping:
          type: string
          example: authorisation
        selected:
          type: boolean
          example: true
    GetPocketData:
      type: object
      properties:
        row:
          type: string
          example: "[\"Head Office\", \"000000001\", \"John Doe\"  \"2017-03-04\"\
            , \"786YYH7\""
    GetPocketLoanAccounts:
      type: object
      properties:
        accountId:
          type: integer
          format: int64
          example: 11
        accountNumber:
          type: integer
          format: int32
          example: 11
        accountType:
          type: integer
          format: int32
          example: 2
        id:
          type: integer
          format: int64
          example: 10
        pocketId:
          type: integer
          format: int64
          example: 6
    GetPocketSavingAccounts:
      type: object
      properties:
        accountId:
          type: integer
          format: int64
          example: 2
        accountNumber:
          type: integer
          format: int32
          example: 2
        accountType:
          type: integer
          format: int32
          example: 3
        id:
          type: integer
          format: int64
          example: 11
        pocketId:
          type: integer
          format: int64
          example: 6
    GetPocketShareAccounts:
      type: object
    GetPostDatedChecks:
      type: object
      description: GetPostDatedChecks
      properties:
        accountNo:
          type: integer
          format: int64
          example: 900800200300
        amount:
          type: number
          example: 100000
        date:
          type: string
          format: date
          example: 2021-07-18
        id:
          type: integer
          format: int64
          example: 1
        installmentId:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: AMANA
    GetPriorityOptionsResponseStandingInstructionSwagger:
      type: object
      properties:
        code:
          type: string
          example: standingInstructionPriority.urgent
        description:
          type: string
          example: Urgent Priority
        id:
          type: integer
          format: int32
          example: 1
    GetPriorityStandingInstructionSwagger:
      type: object
      properties:
        code:
          type: string
          example: standingInstructionPriority.medium
        description:
          type: string
          example: Medium Priority
        id:
          type: integer
          format: int32
          example: 3
    GetProductsAccountingMappingOptions:
      type: object
      properties:
        assetAccountOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetProductsAssetAccountOptions'
          uniqueItems: true
        equityAccountOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetProductsEquityAccountOptions'
          uniqueItems: true
        incomeAccountOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetProductsIncomeAccountOptions'
          uniqueItems: true
        liabilityAccountOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetProductsLiabilityAccountOptions'
          uniqueItems: true
    GetProductsAccountingMappings:
      type: object
      properties:
        incomeFromFeeAccountId:
          $ref: '#/components/schemas/GetIncomeFromFeeAccountId'
        shareEquityId:
          $ref: '#/components/schemas/GetShareEquityId'
        shareReferenceId:
          $ref: '#/components/schemas/GetShareReferenceId'
        shareSuspenseId:
          $ref: '#/components/schemas/GetShareSuspenseId'
    GetProductsAccountingRule:
      type: object
      properties:
        code:
          type: string
          example: accountingRuleType.cash
        description:
          type: string
          example: CASH BASED
        id:
          type: integer
          format: int64
          example: 2
    GetProductsAssetAccountOptions:
      type: object
      properties:
        description:
          type: string
          example: DEFAULT_DESCRIPTION
        disabled:
          type: boolean
          example: false
        glCode:
          type: string
          example: ASSET_ED1461237837829
        id:
          type: integer
          format: int64
          example: 1
        manualEntriesAllowed:
          type: boolean
          example: true
        name:
          type: string
          example: ACCOUNT_NAME_1FJBQ
        nameDecorated:
          type: string
          example: ACCOUNT_NAME_1FJBQ
        tagId:
          $ref: '#/components/schemas/GetProductsTagId'
        type:
          $ref: '#/components/schemas/GetAssetType'
        usage:
          $ref: '#/components/schemas/GetProductsLiabilityUsage'
    GetProductsCharges:
      type: object
      properties:
        active:
          type: boolean
          example: true
        amount:
          type: integer
          format: int32
          example: 1
        chargeAppliesTo:
          $ref: '#/components/schemas/GetChargeAppliesTo'
        chargeCalculationType:
          $ref: '#/components/schemas/GetChargeCalculationType'
        chargePaymentMode:
          $ref: '#/components/schemas/GetChargePaymentMode'
        chargeTimeType:
          $ref: '#/components/schemas/GetChargeTimeType'
        currency:
          $ref: '#/components/schemas/GetChargesCurrency'
        id:
          type: integer
          format: int64
          example: 20
        name:
          type: string
          example: Share Account Activation Flat
        penalty:
          type: boolean
          example: false
    GetProductsCurrency:
      type: object
      properties:
        code:
          type: string
          example: USD
        decimalPlaces:
          type: integer
          format: int32
          example: 2
        displayLabel:
          type: string
          example: US Dollar ($)
        displaySymbol:
          type: string
          example: $
        inMultiplesOf:
          type: integer
          format: int32
          example: 100
        name:
          type: string
          example: US Dollar
        nameCode:
          type: string
          example: currency.USD
    GetProductsEquityAccountOptions:
      type: object
      properties:
        disabled:
          type: boolean
          example: false
        glCode:
          type: string
          example: EQUITY1
        id:
          type: integer
          format: int64
          example: 66
        manualEntriesAllowed:
          type: boolean
          example: true
        name:
          type: string
          example: Equity Account
        nameDecorated:
          type: string
          example: Equity Account
        tagId:
          $ref: '#/components/schemas/GetProductsTagId'
        type:
          $ref: '#/components/schemas/GetEquityType'
        usage:
          $ref: '#/components/schemas/GetProductsLiabilityUsage'
    GetProductsIncomeAccountOptions:
      type: object
      properties:
        description:
          type: string
          example: DEFAULT_DESCRIPTION
        disabled:
          type: boolean
          example: false
        glCode:
          type: string
          example: INCOME_9O1461237838422
        id:
          type: integer
          format: int64
          example: 2
        manualEntriesAllowed:
          type: boolean
          example: true
        name:
          type: string
          example: ACCOUNT_NAME_1FJBQ
        nameDecorated:
          type: string
          example: ACCOUNT_NAME_1FJBQ
        tagId:
          $ref: '#/components/schemas/GetProductsTagId'
        type:
          $ref: '#/components/schemas/GetIncomeType'
        usage:
          $ref: '#/components/schemas/GetProductsLiabilityUsage'
    GetProductsLiabilityAccountOptions:
      type: object
      properties:
        description:
          type: string
          example: DEFAULT_DESCRIPTION
        disabled:
          type: boolean
          example: false
        glCode:
          type: string
          example: LIABILITY_2T1461237838897
        id:
          type: integer
          format: int64
          example: 4
        manualEntriesAllowed:
          type: boolean
          example: true
        name:
          type: string
          example: ACCOUNT_NAME_1FJBQ
        nameDecorated:
          type: string
          example: ACCOUNT_NAME_1FJBQ
        tagId:
          $ref: '#/components/schemas/GetProductsTagId'
        type:
          $ref: '#/components/schemas/GetProductsLiabilityType'
        usage:
          $ref: '#/components/schemas/GetProductsLiabilityUsage'
    GetProductsLiabilityType:
      type: object
      properties:
        code:
          type: string
          example: accountType.liability
        description:
          type: string
          example: LIABILITY
        id:
          type: integer
          format: int64
          example: 2
    GetProductsLiabilityUsage:
      type: object
      properties:
        code:
          type: string
          example: accountUsage.detail
        description:
          type: string
          example: DETAIL
        id:
          type: integer
          format: int64
          example: 1
    GetProductsMarketPrice:
      type: object
      properties:
        fromDate:
          type: string
          example: "Feb 1, 2016"
        id:
          type: integer
          format: int64
          example: 4
        shareValue:
          type: integer
          format: int32
          example: 1
    GetProductsMinimumActivePeriodFrequencyTypeOptions:
      type: object
      properties:
        code:
          type: string
          example: savings.lockin.sharePeriodFrequencyType.days
        description:
          type: string
          example: Days
        id:
          type: integer
          format: int64
          example: 0
    GetProductsPageItems:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Share Product
        shortName:
          type: string
          example: Share Product Description
        totalShares:
          type: integer
          format: int32
          example: 100
    GetProductsTagId:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 0
        isActive:
          type: boolean
          example: false
    GetProductsTypeProductIdResponse:
      type: object
      description: GetProductsTypeProductIdResponse
      properties:
        accountingMappingOptions:
          $ref: '#/components/schemas/GetProductsAccountingMappingOptions'
        accountingMappings:
          $ref: '#/components/schemas/GetProductsAccountingMappings'
        accountingRule:
          $ref: '#/components/schemas/GetProductsAccountingRule'
        allowDividendCalculationForInactiveClients:
          type: boolean
          example: true
        chargeOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetProductsCharges'
          uniqueItems: true
        charges:
          type: array
          items:
            $ref: '#/components/schemas/GetProductsCharges'
          uniqueItems: true
        currency:
          $ref: '#/components/schemas/GetProductsCurrency'
        currencyOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetChargesCurrency'
          uniqueItems: true
        description:
          type: string
          example: SP
        id:
          type: integer
          format: int64
          example: 1
        lockPeriodTypeEnum:
          $ref: '#/components/schemas/GetLockPeriodTypeEnum'
        lockinPeriod:
          type: integer
          format: int32
          example: 1
        lockinPeriodFrequencyTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetProductsMinimumActivePeriodFrequencyTypeOptions'
          uniqueItems: true
        marketPrice:
          type: array
          items:
            $ref: '#/components/schemas/GetProductsMarketPrice'
          uniqueItems: true
        maximumShares:
          type: integer
          format: int32
          example: 50
        minimumActivePeriod:
          type: integer
          format: int32
          example: 1
        minimumActivePeriodForDividendsTypeEnum:
          $ref: '#/components/schemas/GetLockPeriodTypeEnum'
        minimumActivePeriodFrequencyTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetProductsMinimumActivePeriodFrequencyTypeOptions'
          uniqueItems: true
        minimumShares:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: Share Product
        nominalShares:
          type: integer
          format: int32
          example: 10
        shareCapital:
          type: integer
          format: int32
          example: 50
        shortName:
          type: string
          example: SP
        totalShares:
          type: integer
          format: int32
          example: 100
        totalSharesIssued:
          type: integer
          format: int32
          example: 50
        unitPrice:
          type: integer
          format: int32
          example: 1
    GetProductsTypeResponse:
      type: object
      description: GetProductsTypeResponse
      properties:
        pageItems:
          type: array
          items:
            $ref: '#/components/schemas/GetProductsPageItems'
          uniqueItems: true
        totalFilteredRecords:
          type: integer
          format: int32
          example: 1
    GetProvisioningCriteriaCriteriaIdResponse:
      type: object
      description: GetProvisioningCriteriaCriteriaIdResponse
      properties:
        createdBy:
          type: string
          example: mifos
        criteriaId:
          type: integer
          format: int64
          example: 1
        criteriaName:
          type: string
          example: High Risk Products Criteria
        loanProducts:
          type: array
          items:
            $ref: '#/components/schemas/LoanProductData'
        provisioningcriteria:
          type: array
          items:
            $ref: '#/components/schemas/ProvisioningCriteriaDefinitionData'
    GetProvisioningCriteriaResponse:
      type: object
      description: GetProvisioningCriteriaResponse
      properties:
        createdBy:
          type: string
          example: mifos
        criteriaId:
          type: integer
          format: int64
          example: 1
        criteriaName:
          type: string
          example: High Risk Products Criteria
    GetRecurrenceFrequencyOptionsResponseStandingInstructionSwagger:
      type: object
      properties:
        code:
          type: string
          example: frequencyperiodFrequencyType.days
        description:
          type: string
          example: Days
        id:
          type: integer
          format: int32
          example: 0
    GetRecurrenceFrequencyStandingInstructionSwagger:
      type: object
      properties:
        code:
          type: string
          example: frequencyperiodFrequencyType.months
        description:
          type: string
          example: Months
        id:
          type: integer
          format: int32
          example: 2
    GetRecurrenceTypeOptionsResponseStandingInstructionSwagger:
      type: object
      properties:
        code:
          type: string
          example: accountTransferRecurrenceType.periodic
        description:
          type: string
          example: Periodic Recurrence
        id:
          type: integer
          format: int32
          example: 1
    GetRecurrenceTypeStandingInstructionSwagger:
      type: object
      properties:
        code:
          type: string
          example: accountTransferRecurrenceType.periodic
        description:
          type: string
          example: Periodic Recurrence
        id:
          type: integer
          format: int32
          example: 1
    GetRecurringCurrency:
      type: object
      properties:
        code:
          type: string
          example: USD
        decimalPlaces:
          type: integer
          format: int32
          example: 4
        displayLabel:
          type: string
          example: US Dollar ($)
        displaySymbol:
          type: string
          example: $
        inMultiplesOf:
          type: integer
          format: int32
          example: 100
        name:
          type: string
          example: US Dollar
        nameCode:
          type: string
          example: currency.USD
    GetRecurringDepositAccountsAccountChart:
      type: object
      properties:
        accountId:
          type: integer
          format: int64
          example: 5
        accountNumber:
          type: integer
          format: int64
        chartSlabs:
          type: array
          items:
            $ref: '#/components/schemas/GetRecurringDepositAccountsChartSlabs'
          uniqueItems: true
        fromDate:
          type: string
          format: date
        id:
          type: integer
          format: int64
          example: 4
        periodTypes:
          type: array
          items:
            $ref: '#/components/schemas/GetRecurringDepositAccountsPeriodTypes'
          uniqueItems: true
    GetRecurringDepositAccountsAccountChartCurrency:
      type: object
      properties:
        code:
          type: string
          example: USD
        decimalPlaces:
          type: integer
          format: int32
          example: 2
        displayLabel:
          type: string
          example: US Dollar ($)
        displaySymbol:
          type: string
          example: $
        name:
          type: string
          example: US Dollar
        nameCode:
          type: string
          example: currency.USD
    GetRecurringDepositAccountsAccountIdResponse:
      type: object
      description: GetRecurringDepositAccountsAccountIdResponse
      properties:
        accountChart:
          $ref: '#/components/schemas/GetRecurringDepositAccountsAccountChart'
        accountNo:
          type: integer
          format: int64
        clientId:
          type: integer
          format: int64
          example: 1
        clientName:
          type: string
          example: Sangamesh N
        currency:
          $ref: '#/components/schemas/GetRecurringDepositAccountsCurrency'
        depositPeriod:
          type: integer
          format: int32
          example: 6
        depositPeriodFrequency:
          $ref: '#/components/schemas/GetRecurringDepositAccountsDepositPeriodFrequency'
        expectedFirstDepositOnDate:
          type: string
          format: date
        externalId:
          type: string
          example: RD-23
        fieldOfficerId:
          type: integer
          format: int64
          example: 0
        id:
          type: integer
          format: int64
          example: 1
        interestCalculationDaysInYearType:
          $ref: '#/components/schemas/GetRecurringDepositAccountsInterestCalculationDaysInYearType'
        interestCalculationType:
          $ref: '#/components/schemas/GetRecurringDepositAccountsInterestCalculationType'
        interestCompoundingPeriodType:
          $ref: '#/components/schemas/GetRecurringDepositAccountsInterestCompoundingPeriodType'
        interestPostingPeriodType:
          $ref: '#/components/schemas/GetRecurringDepositAccountsInterestPostingPeriodType'
        maxDepositTerm:
          type: integer
          format: int32
          example: 4
        maxDepositTermType:
          $ref: '#/components/schemas/GetRecurringDepositAccountsMaxDepositTermType'
        minDepositTerm:
          type: integer
          format: int32
          example: 3
        minDepositTermType:
          $ref: '#/components/schemas/GetRecurringDepositAccountsMinDepositTermType'
        preClosurePenalApplicable:
          type: boolean
          example: false
        recurringDepositAmount:
          type: integer
          format: int32
          example: 100
        recurringDepositFrequency:
          type: integer
          format: int32
          example: 1
        recurringDepositFrequencyType:
          $ref: '#/components/schemas/GetRecurringDepositAccountsRecurringDepositFrequencyType'
        savingsProductId:
          type: integer
          format: int64
          example: 3
        savingsProductName:
          type: string
          example: RD01
        status:
          $ref: '#/components/schemas/GetRecurringDepositAccountsStatus'
        summary:
          $ref: '#/components/schemas/GetRecurringDepositAccountsSummary'
        timeline:
          $ref: '#/components/schemas/GetRecurringDepositAccountsTimeline'
    GetRecurringDepositAccountsChartSlabs:
      type: object
      properties:
        annualInterestRate:
          type: number
          format: double
          example: 5.5
        currency:
          $ref: '#/components/schemas/GetRecurringDepositAccountsAccountChartCurrency'
        fromPeriod:
          type: integer
          format: int32
          example: 181
        id:
          type: integer
          format: int64
          example: 13
        periodType:
          $ref: '#/components/schemas/GetRecurringDepositAccountsPeriodType'
        toPeriod:
          type: integer
          format: int32
          example: 365
    GetRecurringDepositAccountsCurrency:
      type: object
      properties:
        code:
          type: string
          example: USD
        decimalPlaces:
          type: integer
          format: int32
          example: 2
        displayLabel:
          type: string
          example: US Dollar ($)
        displaySymbol:
          type: string
          example: $
        inMultiplesOf:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: US Dollar
        nameCode:
          type: string
          example: currency.USD
    GetRecurringDepositAccountsDepositPeriodFrequency:
      type: object
      properties:
        code:
          type: string
          example: deposit.period.savingsPeriodFrequencyType.months
        description:
          type: string
          example: Months
        id:
          type: integer
          format: int64
          example: 2
    GetRecurringDepositAccountsInterestCalculationDaysInYearType:
      type: object
      properties:
        code:
          type: string
          example: savingsInterestCalculationDaysInYearType.days365
        description:
          type: string
          example: 365 Days
        id:
          type: integer
          format: int64
          example: 365
    GetRecurringDepositAccountsInterestCalculationType:
      type: object
      properties:
        code:
          type: string
          example: savingsInterestCalculationType.dailybalance
        description:
          type: string
          example: Daily Balance
        id:
          type: integer
          format: int64
          example: 1
    GetRecurringDepositAccountsInterestCompoundingPeriodType:
      type: object
      properties:
        code:
          type: string
          example: savings.interest.period.savingsCompoundingInterestPeriodType.monthly
        description:
          type: string
          example: Monthly
        id:
          type: integer
          format: int64
          example: 4
    GetRecurringDepositAccountsInterestPostingPeriodType:
      type: object
      properties:
        code:
          type: string
          example: savings.interest.posting.period.savingsPostingInterestPeriodType.monthly
        description:
          type: string
          example: Monthly
        id:
          type: integer
          format: int64
          example: 4
    GetRecurringDepositAccountsMaxDepositTermType:
      type: object
      properties:
        code:
          type: string
          example: deposit.term.savingsPeriodFrequencyType.years
        description:
          type: string
          example: Years
        id:
          type: integer
          format: int64
          example: 3
    GetRecurringDepositAccountsMinDepositTermType:
      type: object
      properties:
        code:
          type: string
          example: deposit.term.savingsPeriodFrequencyType.months
        description:
          type: string
          example: Months
        id:
          type: integer
          format: int64
          example: 2
    GetRecurringDepositAccountsPeriodType:
      type: object
      properties:
        code:
          type: string
          example: interestChartPeriodType.days
        description:
          type: string
          example: Days
        id:
          type: integer
          format: int64
          example: 0
    GetRecurringDepositAccountsPeriodTypes:
      type: object
      properties:
        code:
          type: string
          example: interestChartPeriodType.days
        description:
          type: string
          example: Days
        id:
          type: integer
          format: int64
          example: 0
    GetRecurringDepositAccountsRecurringDepositAccountIdTransactionsTemplateResponse:
      type: object
      description: GetRecurringDepositAccountsRecurringDepositAccountIdTransactionsTemplateResponse
      properties:
        accountId:
          type: integer
          format: int64
          example: 1
        accountNo:
          type: string
          example: "000000001"
        amount:
          type: number
          example: 100000.0
        currency:
          $ref: '#/components/schemas/GetRecurringCurrency'
        date:
          type: string
          format: date
        id:
          type: integer
          format: int64
          example: 1
        paymentTypeOptions:
          type: array
          example: []
          items:
            type: integer
            format: int32
        reversed:
          type: boolean
          example: false
        transactionType:
          $ref: '#/components/schemas/GetRecurringTransactionType'
    GetRecurringDepositAccountsRecurringDepositAccountIdTransactionsTransactionIdResponse:
      type: object
      description: GetRecurringDepositAccountsRecurringDepositAccountIdTransactionsTransactionIdResponse
      properties:
        accountId:
          type: integer
          format: int64
          example: 1
        accountNo:
          type: string
          example: "000000001"
        amount:
          type: number
          format: float
          example: 5000
        currency:
          $ref: '#/components/schemas/GetRecurringTransactionsCurrency'
        date:
          type: string
          format: date
        id:
          type: integer
          format: int64
          example: 1
        paymentDetailData:
          $ref: '#/components/schemas/GetRecurringPaymentDetailData'
        reversed:
          type: boolean
          example: true
        runningBalance:
          type: integer
          format: int32
          example: 0
        transactionType:
          $ref: '#/components/schemas/GetRecurringTransactionsTransactionType'
    GetRecurringDepositAccountsRecurringDepositFrequencyType:
      type: object
      properties:
        code:
          type: string
          example: recurring.deposit.savingsPeriodFrequencyType.months
        description:
          type: string
          example: Months
        id:
          type: integer
          format: int64
          example: 2
    GetRecurringDepositAccountsResponse:
      type: object
      description: GetRecurringDepositAccountsResponse
      properties:
        accountNo:
          type: integer
          format: int64
          example: 1
        clientId:
          type: integer
          format: int64
          example: 1
        clientName:
          type: string
          example: Sangamesh N
        currency:
          $ref: '#/components/schemas/GetRecurringDepositAccountsCurrency'
        depositAmount:
          type: number
          format: float
          example: 1150
        depositPeriod:
          type: integer
          format: int32
          example: 6
        depositPeriodFrequency:
          $ref: '#/components/schemas/GetRecurringDepositAccountsDepositPeriodFrequency'
        fieldOfficerId:
          type: integer
          format: int64
          example: 0
        id:
          type: integer
          format: int64
          example: 1
        interestCalculationDaysInYearType:
          $ref: '#/components/schemas/GetRecurringDepositAccountsInterestCalculationDaysInYearType'
        interestCalculationType:
          $ref: '#/components/schemas/GetRecurringDepositAccountsInterestCalculationType'
        interestCompoundingPeriodType:
          $ref: '#/components/schemas/GetRecurringDepositAccountsInterestCompoundingPeriodType'
        interestPostingPeriodType:
          $ref: '#/components/schemas/GetRecurringDepositAccountsInterestPostingPeriodType'
        maturityAmount:
          type: number
          format: float
          example: 252.59
        maturityDate:
          type: string
          format: date
        maxDepositTerm:
          type: integer
          format: int32
          example: 4
        maxDepositTermType:
          $ref: '#/components/schemas/GetRecurringDepositAccountsMaxDepositTermType'
        minDepositTerm:
          type: integer
          format: int32
          example: 3
        minDepositTermType:
          $ref: '#/components/schemas/GetRecurringDepositAccountsMinDepositTermType'
        preClosurePenalApplicable:
          type: boolean
          example: false
        recurringDepositAmount:
          type: integer
          format: int32
          example: 100
        recurringDepositFrequency:
          type: integer
          format: int32
          example: 1
        recurringDepositFrequencyType:
          $ref: '#/components/schemas/GetRecurringDepositAccountsRecurringDepositFrequencyType'
        savingsProductId:
          type: integer
          format: int64
          example: 3
        savingsProductName:
          type: string
          example: RD01
        status:
          $ref: '#/components/schemas/GetRecurringDepositAccountsStatus'
        summary:
          $ref: '#/components/schemas/GetRecurringDepositAccountsSummary'
        timeline:
          $ref: '#/components/schemas/GetRecurringDepositAccountsTimeline'
    GetRecurringDepositAccountsStatus:
      type: object
      properties:
        active:
          type: boolean
          example: false
        approved:
          type: boolean
          example: false
        closed:
          type: boolean
          example: false
        code:
          type: string
          example: savingsAccountStatusType.submitted.and.pending.approval
        description:
          type: string
          example: Submitted and pending approval
        id:
          type: integer
          format: int64
          example: 100
        prematureClosed:
          type: boolean
          example: false
        rejected:
          type: boolean
          example: false
        submittedAndPendingApproval:
          type: boolean
          example: true
        transferInProgress:
          type: boolean
          example: false
        transferOnHold:
          type: boolean
          example: false
        withdrawnByApplicant:
          type: boolean
          example: false
    GetRecurringDepositAccountsSummary:
      type: object
      properties:
        accountBalance:
          type: number
          format: float
          example: 0
        currency:
          $ref: '#/components/schemas/GetRecurringDepositAccountsCurrency'
    GetRecurringDepositAccountsTemplateResponse:
      type: object
      description: GetRecurringDepositAccountsTemplateResponse
      properties:
        clientId:
          type: integer
          format: int64
          example: 1
        clientName:
          type: string
          example: small business
        productOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetRecurringProductOptions'
          uniqueItems: true
    GetRecurringDepositAccountsTimeline:
      type: object
      properties:
        submittedByFirstname:
          type: string
          example: App
        submittedByLastname:
          type: string
          example: Administrator
        submittedByUsername:
          type: string
          example: mifos
        submittedOnDate:
          type: string
          format: date
    GetRecurringDepositProductsAccountingRule:
      type: object
      properties:
        code:
          type: string
          example: accountingRuleType.none
        description:
          type: string
          example: NONE
        id:
          type: integer
          format: int32
          example: 1
    GetRecurringDepositProductsCurrency:
      type: object
      properties:
        code:
          type: string
          example: USD
        decimalPlaces:
          type: integer
          format: int32
          example: 2
        displayLabel:
          type: string
          example: US Dollar ($)
        displaySymbol:
          type: string
          example: $
        inMultiplesOf:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: US Dollar
        nameCode:
          type: string
          example: currency.USD
    GetRecurringDepositProductsGlAccount:
      type: object
      properties:
        glCode:
          type: string
          example: "2000001"
        id:
          type: integer
          format: int64
          example: 12
        name:
          type: string
          example: savings control
    GetRecurringDepositProductsInterestCalculationDaysInYearType:
      type: object
      properties:
        code:
          type: string
          example: savingsInterestCalculationDaysInYearType.days365
        description:
          type: string
          example: 365 Days
        id:
          type: integer
          format: int32
          example: 365
    GetRecurringDepositProductsInterestCalculationType:
      type: object
      properties:
        code:
          type: string
          example: savingsInterestCalculationType.dailybalance
        description:
          type: string
          example: Daily Balance
        id:
          type: integer
          format: int32
          example: 1
    GetRecurringDepositProductsInterestCompoundingPeriodType:
      type: object
      properties:
        code:
          type: string
          example: savings.interest.period.savingsCompoundingInterestPeriodType.monthly
        description:
          type: string
          example: Monthly
        id:
          type: integer
          format: int32
          example: 4
    GetRecurringDepositProductsInterestPostingPeriodType:
      type: object
      properties:
        code:
          type: string
          example: savings.interest.posting.period.savingsPostingInterestPeriodType.monthly
        description:
          type: string
          example: Monthly
        id:
          type: integer
          format: int32
          example: 4
    GetRecurringDepositProductsMaxDepositTermType:
      type: object
      properties:
        code:
          type: string
          example: deposit.term.savingsPeriodFrequencyType.years
        description:
          type: string
          example: Years
        id:
          type: integer
          format: int32
          example: 3
    GetRecurringDepositProductsMinDepositTermType:
      type: object
      properties:
        code:
          type: string
          example: deposit.term.savingsPeriodFrequencyType.months
        description:
          type: string
          example: Months
        id:
          type: integer
          format: int32
          example: 2
    GetRecurringDepositProductsProductIdAccountingMappings:
      type: object
      properties:
        feeReceivableAccount:
          $ref: '#/components/schemas/GetRecurringDepositProductsGlAccount'
        incomeFromFeeAccount:
          $ref: '#/components/schemas/GetRecurringDepositProductsGlAccount'
        incomeFromPenaltyAccount:
          $ref: '#/components/schemas/GetRecurringDepositProductsGlAccount'
        interestOnSavingsAccount:
          $ref: '#/components/schemas/GetRecurringDepositProductsGlAccount'
        interestPayableAccount:
          $ref: '#/components/schemas/GetRecurringDepositProductsGlAccount'
        penaltyReceivableAccount:
          $ref: '#/components/schemas/GetRecurringDepositProductsGlAccount'
        savingsControlAccount:
          $ref: '#/components/schemas/GetRecurringDepositProductsGlAccount'
        transfersInSuspenseAccount:
          $ref: '#/components/schemas/GetRecurringDepositProductsGlAccount'
    GetRecurringDepositProductsProductIdActiveChart:
      type: object
      properties:
        chartSlabs:
          type: array
          items:
            $ref: '#/components/schemas/GetRecurringDepositProductsProductIdChartSlabs'
          uniqueItems: true
        fromDate:
          type: string
          format: date
        id:
          type: integer
          format: int64
          example: 8
        periodTypes:
          type: array
          items:
            $ref: '#/components/schemas/GetRecurringDepositProductsProductIdPeriodType'
          uniqueItems: true
        savingsProductId:
          type: integer
          format: int64
          example: 8
        savingsProductName:
          type: string
          example: Recurring deposit product
    GetRecurringDepositProductsProductIdChartSlabs:
      type: object
      properties:
        annualInterestRate:
          type: number
          format: double
          example: 4.5
        currency:
          $ref: '#/components/schemas/GetRecurringDepositProductsProductIdCurrency'
        description:
          type: string
          example: from 0 to 90 days
        fromPeriod:
          type: integer
          format: int32
          example: 0
        id:
          type: integer
          format: int64
          example: 18
        periodType:
          $ref: '#/components/schemas/GetRecurringDepositProductsProductIdPeriodType'
        toPeriod:
          type: integer
          format: int32
          example: 90
    GetRecurringDepositProductsProductIdCurrency:
      type: object
      properties:
        code:
          type: string
          example: USD
        decimalPlaces:
          type: integer
          format: int32
          example: 2
        displayLabel:
          type: string
          example: US Dollar ($)
        displaySymbol:
          type: string
          example: $
        name:
          type: string
          example: US Dollar
        nameCode:
          type: string
          example: currency.USD
    GetRecurringDepositProductsProductIdFeeToIncomeAccountMappings:
      type: object
      properties:
        charge:
          $ref: '#/components/schemas/GetRecurringDepositProductsProductIdFeeToIncomeAccountMappingsCharge'
        incomeAccount:
          $ref: '#/components/schemas/GetRecurringDepositProductsProductIdFeeToIncomeAccountMappingsIncomeAccount'
    GetRecurringDepositProductsProductIdFeeToIncomeAccountMappingsCharge:
      type: object
      properties:
        active:
          type: boolean
          example: false
        id:
          type: integer
          format: int64
          example: 11
        name:
          type: string
          example: sav charge
        penalty:
          type: boolean
          example: false
    GetRecurringDepositProductsProductIdFeeToIncomeAccountMappingsIncomeAccount:
      type: object
      properties:
        glCode:
          type: string
          example: "24"
        id:
          type: integer
          format: int64
          example: 16
        name:
          type: string
          example: income from savings fee
    GetRecurringDepositProductsProductIdInterestCompoundingPeriodType:
      type: object
      properties:
        code:
          type: string
          example: savings.interest.period.savingsCompoundingInterestPeriodType.daily
        description:
          type: string
          example: Daily
        id:
          type: integer
          format: int32
          example: 1
    GetRecurringDepositProductsProductIdMaxDepositTermType:
      type: object
      properties:
        code:
          type: string
          example: deposit.term.savingsPeriodFrequencyType.years
        description:
          type: string
          example: Years
        id:
          type: integer
          format: int64
          example: 3
    GetRecurringDepositProductsProductIdMinDepositTermType:
      type: object
      properties:
        code:
          type: string
          example: deposit.term.savingsPeriodFrequencyType.weeks
        description:
          type: string
          example: Weeks
        id:
          type: integer
          format: int64
          example: 1
    GetRecurringDepositProductsProductIdPenaltyToIncomeAccountMappings:
      type: object
      properties:
        charge:
          $ref: '#/components/schemas/GetRecurringDepositProductsProductIdPenaltyToIncomeAccountMappingsCharge'
        incomeAccount:
          $ref: '#/components/schemas/GetRecurringDepositProductsGlAccount'
    GetRecurringDepositProductsProductIdPenaltyToIncomeAccountMappingsCharge:
      type: object
      properties:
        active:
          type: boolean
          example: false
        id:
          type: integer
          format: int64
          example: 12
        name:
          type: string
          example: sav 2
        penalty:
          type: boolean
          example: true
    GetRecurringDepositProductsProductIdPeriodType:
      type: object
      properties:
        code:
          type: string
          example: interestChartPeriodType.weeks
        description:
          type: string
          example: Weeks
        id:
          type: integer
          format: int64
          example: 1
    GetRecurringDepositProductsProductIdPreClosurePenalInterestOnType:
      type: object
      properties:
        code:
          type: string
          example: preClosurePenalInterestOnType.wholeTerm
        description:
          type: string
          example: Whole term
        id:
          type: integer
          format: int64
          example: 1
    GetRecurringDepositProductsProductIdResponse:
      type: object
      description: GetRecurringDepositProductsProductIdResponse
      properties:
        accountingMappings:
          $ref: '#/components/schemas/GetRecurringDepositProductsProductIdAccountingMappings'
        activeChart:
          $ref: '#/components/schemas/GetRecurringDepositProductsProductIdActiveChart'
        currency:
          $ref: '#/components/schemas/GetRecurringDepositProductsProductIdCurrency'
        description:
          type: string
          example: "Daily compounding using Daily Balance, 5% per year, 365 days in\
            \ year"
        feeToIncomeAccountMappings:
          type: array
          items:
            $ref: '#/components/schemas/GetRecurringDepositProductsProductIdFeeToIncomeAccountMappings'
          uniqueItems: true
        id:
          type: integer
          format: int64
          example: 1
        interestCalculationDaysInYearType:
          $ref: '#/components/schemas/GetRecurringDepositProductsInterestCalculationDaysInYearType'
        interestCalculationType:
          $ref: '#/components/schemas/GetRecurringDepositProductsInterestCalculationType'
        interestCompoundingPeriodType:
          $ref: '#/components/schemas/GetRecurringDepositProductsProductIdInterestCompoundingPeriodType'
        interestPostingPeriodType:
          $ref: '#/components/schemas/GetRecurringDepositProductsInterestPostingPeriodType'
        maxDepositTerm:
          type: integer
          format: int32
          example: 5
        maxDepositTermType:
          $ref: '#/components/schemas/GetRecurringDepositProductsProductIdMaxDepositTermType'
        minDepositTerm:
          type: integer
          format: int32
          example: 1
        minDepositTermType:
          $ref: '#/components/schemas/GetRecurringDepositProductsProductIdMinDepositTermType'
        name:
          type: string
          example: Recurring deposit product
        penaltyToIncomeAccountMappings:
          type: array
          items:
            $ref: '#/components/schemas/GetRecurringDepositProductsProductIdPenaltyToIncomeAccountMappings'
          uniqueItems: true
        preClosurePenalApplicable:
          type: boolean
          example: true
        preClosurePenalInterest:
          type: number
          format: double
          example: 1.75
        preClosurePenalInterestOnType:
          $ref: '#/components/schemas/GetRecurringDepositProductsProductIdPreClosurePenalInterestOnType'
        recurringDepositFrequency:
          type: integer
          format: int32
          example: 1
        recurringDepositFrequencyType:
          $ref: '#/components/schemas/GetRecurringDepositProductsRecurringDepositFrequencyType'
        shortName:
          type: string
          example: RD01
    GetRecurringDepositProductsRecurringDepositFrequencyType:
      type: object
      properties:
        code:
          type: string
          example: recurring.deposit.savingsPeriodFrequencyType.months
        description:
          type: string
          example: Months
        id:
          type: integer
          format: int32
          example: 1
    GetRecurringDepositProductsResponse:
      type: object
      description: GetRecurringDepositProductsResponse
      properties:
        accountingRule:
          $ref: '#/components/schemas/GetRecurringDepositProductsAccountingRule'
        currency:
          $ref: '#/components/schemas/GetRecurringDepositProductsCurrency'
        description:
          type: string
          example: RD01
        id:
          type: integer
          format: int64
          example: 3
        interestCalculationDaysInYearType:
          $ref: '#/components/schemas/GetRecurringDepositProductsInterestCalculationDaysInYearType'
        interestCalculationType:
          $ref: '#/components/schemas/GetRecurringDepositProductsInterestCalculationType'
        interestCompoundingPeriodType:
          $ref: '#/components/schemas/GetRecurringDepositProductsInterestCompoundingPeriodType'
        interestPostingPeriodType:
          $ref: '#/components/schemas/GetRecurringDepositProductsInterestPostingPeriodType'
        maxDepositTerm:
          type: integer
          format: int32
          example: 4
        maxDepositTermType:
          $ref: '#/components/schemas/GetRecurringDepositProductsMaxDepositTermType'
        minDepositTerm:
          type: integer
          format: int32
          example: 3
        minDepositTermType:
          $ref: '#/components/schemas/GetRecurringDepositProductsMinDepositTermType'
        name:
          type: string
          example: RD01
        nominalAnnualInterestRate:
          type: number
          format: double
          example: 0
        preClosurePenalApplicable:
          type: boolean
          example: false
        recurringDepositFrequency:
          type: integer
          format: int32
          example: 1
        recurringDepositFrequencyType:
          $ref: '#/components/schemas/GetRecurringDepositProductsRecurringDepositFrequencyType'
        shortName:
          type: string
          example: RD01
    GetRecurringPaymentDetailData:
      type: object
      properties:
        accountNumber:
          type: integer
          format: int32
        bankNumber:
          type: integer
          format: int32
        checkNumber:
          type: integer
          format: int32
        id:
          type: integer
          format: int64
          example: 62
        paymentType:
          $ref: '#/components/schemas/GetRecurringPaymentType'
        receiptNumber:
          type: integer
          format: int32
        routingCode:
          type: integer
          format: int32
    GetRecurringPaymentType:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 11
        name:
          type: string
          example: cash
    GetRecurringProductOptions:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Passbook Savings
    GetRecurringTransactionType:
      type: object
      properties:
        approveTransfer:
          type: boolean
          example: false
        code:
          type: string
          example: savingsAccountTransactionType.deposit
        deposit:
          type: boolean
          example: true
        description:
          type: string
          example: Deposit
        feeDeduction:
          type: boolean
          example: false
        id:
          type: integer
          format: int64
          example: 1
        initiateTransfer:
          type: boolean
          example: false
        interestPosting:
          type: boolean
          example: false
        overdraftFee:
          type: boolean
          example: true
        overdraftInterest:
          type: boolean
          example: false
        rejectTransfer:
          type: boolean
          example: false
        withdrawTransfer:
          type: boolean
          example: false
        withdrawal:
          type: boolean
          example: false
        writtenoff:
          type: boolean
          example: false
    GetRecurringTransactionsCurrency:
      type: object
      properties:
        code:
          type: string
          example: USD
        decimalPlaces:
          type: integer
          format: int32
          example: 2
        displayLabel:
          type: string
          example: US Dollar ($)
        displaySymbol:
          type: string
          example: $
        inMultiplesOf:
          type: integer
          format: int32
          example: 0
        name:
          type: string
          example: US Dollar
        nameCode:
          type: string
          example: currency.USD
    GetRecurringTransactionsTransactionType:
      type: object
      properties:
        code:
          type: string
          example: savingsAccountTransactionType.withdrawal
        deposit:
          type: boolean
          example: false
        description:
          type: string
          example: Withdrawal
        feeDeduction:
          type: boolean
          example: false
        id:
          type: integer
          format: int64
          example: 2
        interestPosting:
          type: boolean
          example: false
        withdrawal:
          type: boolean
          example: true
    GetReportMailingJobsResponse:
      type: object
      description: GetReportMailingJobsResponse
      properties:
        description:
          type: string
          example: Client Numbers Report
        emailAttachmentFileFormat:
          $ref: '#/components/schemas/EnumOptionData'
        emailMessage:
          type: string
          example: Client Numbers Report
        emailRecipients:
          type: string
          example: info@musonisystem.com
        emailSubject:
          type: string
          example: Client Numbers Report
        id:
          type: integer
          format: int64
          example: 1
        isActive:
          type: boolean
          example: true
        name:
          type: string
          example: Client Numbers Report
        nextRunDateTime:
          type: string
          format: date-time
        numberOfRuns:
          type: integer
          format: int32
          example: 0
        recurrence:
          type: string
        runAsUserId:
          type: integer
          format: int64
          example: 1
        startDateTime:
          type: string
          format: date-time
        stretchyReport:
          $ref: '#/components/schemas/ReportData'
        stretchyReportParamMap:
          type: string
          example: "{\"startDate\":\"2016-07-01\",\"endDate\":\"2016-08-02\",\"selectOffice\"\
            :\"1\",\"environementUrl\":\"environementUrl\"}"
        timeline:
          $ref: '#/components/schemas/ReportMailingJobTimelineData'
    GetReportMailingJobsTemplate:
      type: object
      description: GetReportMailingJobsTemplate
      properties:
        emailAttachmentFileFormatOptions:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
        isActive:
          type: boolean
          example: true
        stretchyReportParamDateOptions:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
    GetReportsResponse:
      type: object
      description: GetReportsResponse
      properties:
        coreReport:
          type: boolean
          example: true
        description:
          type: string
          example: "Individual Client Report Lists the small number of defined fields\
            \ on the client table.  Would expect to copy this report and add any one\
            \ to one additional data for specific tenant needs. Can be run for any\
            \ size MFI but you expect it only to be run within a branch for larger\
            \ ones.  Depending on how many columns are displayed, there is probably\
            \ is a limit of about 20/50k clients returned for html display (export\
            \ to excel doesnt have that client browser/memory impact)."
        id:
          type: integer
          format: int64
          example: 1
        reportCategory:
          type: string
          example: Client
        reportName:
          type: string
          example: Client Listing
        reportParameters:
          type: array
          items:
            $ref: '#/components/schemas/ReportParameterData'
        reportSql:
          type: string
        reportSubType:
          type: string
        reportType:
          type: string
          example: Table
        useReport:
          type: boolean
          example: true
    GetReportsTemplateResponse:
      type: object
      description: GetReportsTemplateResponse
      properties:
        allowedParameters:
          type: array
          items:
            $ref: '#/components/schemas/ReportParameterData'
        allowedReportSubTypes:
          type: array
          items:
            type: string
        allowedReportTypes:
          type: array
          items:
            type: string
    GetRescheduleReasonsAllowedTypes:
      type: object
      properties:
        active:
          type: boolean
          example: true
        description:
          type: string
          example: description
        id:
          type: integer
          format: int64
          example: 1
        mandatory:
          type: boolean
          example: false
        name:
          type: string
          example: reason
        position:
          type: integer
          format: int32
          example: 0
    GetRescheduleReasonsTemplateResponse:
      type: object
      description: GetRescheduleReasonsTemplateResponse
      properties:
        rescheduleReasons:
          type: array
          items:
            $ref: '#/components/schemas/GetRescheduleReasonsAllowedTypes'
          uniqueItems: true
    GetResourceTypeResourceIdNotesNoteIdResponse:
      type: object
      description: GetResourceTypeResourceIdNotesNoteIdResponse
      properties:
        clientId:
          type: integer
          format: int64
          example: 1
        createdById:
          type: integer
          format: int64
          example: 1
        createdByUsername:
          type: string
          example: mifos
        createdOn:
          type: string
          format: date-time
        id:
          type: integer
          format: int64
          example: 76
        note:
          type: string
          example: a note about the client
        noteType:
          $ref: '#/components/schemas/GetNotesNoteType'
        updatedById:
          type: integer
          format: int64
          example: 1
        updatedByUsername:
          type: string
          example: mifos
        updatedOn:
          type: string
          format: date-time
    GetResourceTypeResourceIdNotesResponse:
      type: object
      description: GetResourceTypeResourceIdNotesResponse
      properties:
        clientId:
          type: integer
          format: int64
          example: 1
        createdById:
          type: integer
          format: int64
          example: 1
        createdByUsername:
          type: string
          example: mifos
        createdOn:
          type: string
          format: date-time
        id:
          type: integer
          format: int64
          example: 2
        note:
          type: string
          example: First note edited
        noteType:
          $ref: '#/components/schemas/GetNotesNoteType'
        updatedById:
          type: integer
          format: int64
          example: 1
        updatedByUsername:
          type: string
          example: mifos
        updatedOn:
          type: string
          format: date-time
    GetRolesResponse:
      type: object
      description: GetRolesResponse
      properties:
        description:
          type: string
          example: This role provides all application permissions.
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Super Users
    GetRolesRoleIdPermissionsResponse:
      type: object
      description: GetRolesRoleIdPermissionsResponse
      properties:
        description:
          type: string
          example: This role provides all application permissions.
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Super Users
        permissionUsageData:
          type: array
          items:
            $ref: '#/components/schemas/GetRolesRoleIdPermissionsResponsePermissionData'
    GetRolesRoleIdPermissionsResponsePermissionData:
      type: object
      properties:
        actionName:
          type: string
          example: READ
        code:
          type: string
          example: READ_PERMISSION
        entityName:
          type: string
          example: PERMISSION
        grouping:
          type: string
          example: authorisation
        selected:
          type: boolean
          example: false
    GetRolesRoleIdResponse:
      type: object
      description: GetRolesRoleIdResponse
      properties:
        description:
          type: string
          example: This role provides all application permissions.
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Super Users
    GetRunReportColumnHeaders:
      type: object
      properties:
        columnName:
          type: string
          example: Office/Branch
        columnType:
          type: string
          example: VARCHAR
        columnValues:
          type: string
          example: "[]"
        isColumnNullable:
          type: boolean
          example: false
        isColumnPrimaryKey:
          type: boolean
          example: false
    GetRunReportResponse:
      type: object
      description: GetRunReportResponse
      properties:
        columnHeaders:
          type: array
          items:
            $ref: '#/components/schemas/GetRunReportColumnHeaders'
          uniqueItems: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetPocketData'
          uniqueItems: true
    GetSavingsAccountChargesPaidByData:
      type: object
      properties:
        amount:
          type: number
          example: 0
        chargeId:
          type: integer
          format: int64
          example: 1
    GetSavingsAccountTransactionsPageItem:
      type: object
      properties:
        accountId:
          type: integer
          format: int64
          example: 1
        accountNo:
          type: string
          example: "000000001"
        amount:
          type: number
          example: 500
        chargesPaidByData:
          type: array
          items:
            $ref: '#/components/schemas/GetSavingsAccountChargesPaidByData'
          uniqueItems: true
        currency:
          $ref: '#/components/schemas/GetTransactionsCurrency'
        date:
          type: string
          format: date
        entryType:
          type: string
          enum:
          - CREDIT
          - DEBIT
          example: CREDIT
        id:
          type: integer
          format: int64
          example: 1
        interestedPostedAsOn:
          type: boolean
          example: false
        isManualTransaction:
          type: boolean
          example: false
        isReversal:
          type: boolean
          example: false
        lienTransaction:
          type: boolean
          example: false
        originalTransactionId:
          type: integer
          format: int64
          example: 0
        paymentDetailData:
          $ref: '#/components/schemas/GetTransactionsPaymentDetailData'
        releaseTransactionId:
          type: integer
          format: int64
          example: 0
        reversed:
          type: boolean
          example: false
        runningBalance:
          type: number
          example: 500
        submittedByUsername:
          type: string
          example: mifos
        submittedOnDate:
          type: string
          format: date
        transactionType:
          $ref: '#/components/schemas/GetTranscationEnumData'
    GetSavingsAccountsAccountIdResponse:
      type: object
      description: GetSavingsAccountsAccountIdResponse
      properties:
        accountNo:
          type: string
          example: "000000001"
        clientId:
          type: integer
          format: int32
          example: 1
        clientName:
          type: string
          example: small business
        currency:
          $ref: '#/components/schemas/GetSavingsCurrency'
        fieldOfficerId:
          type: integer
          format: int32
          example: 0
        id:
          type: integer
          format: int32
          example: 1
        interestCalculationDaysInYearType:
          $ref: '#/components/schemas/GetSavingsInterestCalculationDaysInYearType'
        interestCalculationType:
          $ref: '#/components/schemas/GetSavingsInterestCalculationType'
        interestCompoundingPeriodType:
          $ref: '#/components/schemas/GetSavingsInterestCompoundingPeriodType'
        interestPostingPeriodType:
          $ref: '#/components/schemas/GetSavingsInterestPostingPeriodType'
        nominalAnnualInterestRate:
          type: number
          format: double
          example: 5
        savingsProductId:
          type: integer
          format: int32
          example: 1
        savingsProductName:
          type: string
          example: Passbook Savings
        status:
          $ref: '#/components/schemas/GetSavingsStatus'
        summary:
          $ref: '#/components/schemas/GetSavingsAccountsSummary'
        timeline:
          $ref: '#/components/schemas/GetSavingsTimeline'
    GetSavingsAccountsResponse:
      type: object
      description: GetSavingsAccountsResponse
      properties:
        pageItems:
          type: array
          items:
            $ref: '#/components/schemas/GetSavingsPageItems'
          uniqueItems: true
        totalFilteredRecords:
          type: integer
          format: int32
          example: 1
    GetSavingsAccountsSavingsAccountIdChargesResponse:
      type: object
      description: GetSavingsAccountsSavingsAccountIdChargesResponse
      properties:
        accountId:
          type: integer
          format: int64
          example: 57
        amount:
          type: number
          format: float
          example: 100
        amountOrPercentage:
          type: number
          format: float
          example: 100
        amountOutstanding:
          type: number
          format: float
          example: 100
        amountPaid:
          type: number
          format: float
          example: 0
        amountPercentageAppliedTo:
          type: number
          format: double
          example: 0
        amountWaived:
          type: number
          format: float
          example: 0
        amountWrittenOff:
          type: number
          format: float
          example: 0
        chargeCalculationType:
          $ref: '#/components/schemas/GetChargesChargeCalculationType'
        chargeId:
          type: integer
          format: int64
          example: 3
        chargeTimeType:
          $ref: '#/components/schemas/GetChargesChargeTimeType'
        currency:
          $ref: '#/components/schemas/GetChargesCurrencyResponse'
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Savings account maintenance fee
        penalty:
          type: boolean
          example: false
        percentage:
          type: number
          format: double
          example: 0
    GetSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdResponse:
      type: object
      description: GetSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdResponse
      properties:
        amount:
          type: number
          format: float
          example: 100
        amountOrPercentage:
          type: number
          format: float
          example: 100
        amountOutstanding:
          type: number
          format: float
          example: 100
        amountPaid:
          type: number
          format: float
          example: 0
        amountPercentageAppliedTo:
          type: number
          format: double
          example: 0
        amountWaived:
          type: number
          format: float
          example: 0
        amountWrittenOff:
          type: number
          format: float
          example: 0
        chargeCalculationType:
          $ref: '#/components/schemas/GetChargesChargeCalculationType'
        chargeId:
          type: integer
          format: int64
          example: 1
        chargeTimeType:
          $ref: '#/components/schemas/GetChargesChargeTimeType'
        currency:
          $ref: '#/components/schemas/GetChargesCurrencyResponse'
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Passbook fee
        penalty:
          type: boolean
          example: false
        percentage:
          type: number
          format: double
          example: 0
    GetSavingsAccountsSavingsAccountIdChargesTemplateResponse:
      type: object
      description: GetSavingsAccountsSavingsAccountIdChargesTemplateResponse
      properties:
        amountPaid:
          type: number
          format: float
          example: 0
        amountWaived:
          type: number
          format: float
          example: 0
        amountWrittenOff:
          type: number
          format: float
          example: 0
        chargeOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetSavingsChargesOptions'
          uniqueItems: true
        penalty:
          type: boolean
          example: false
    GetSavingsAccountsSummary:
      type: object
      properties:
        accountBalance:
          type: number
          example: 0
        availableBalance:
          type: number
          example: 0
        currency:
          $ref: '#/components/schemas/GetSavingsCurrency'
    GetSavingsAccountsTemplateResponse:
      type: object
      description: GetSavingsAccountsTemplateResponse
      properties:
        clientId:
          type: integer
          format: int32
          example: 1
        clientName:
          type: string
          example: small business
        productOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetSavingsProductOptions'
          uniqueItems: true
    GetSavingsAssetLiabilityType:
      type: object
      properties:
        code:
          type: string
          example: accountType.asset
        description:
          type: string
          example: ASSET
        id:
          type: integer
          format: int32
          example: 1
    GetSavingsAssetTagId:
      type: object
    GetSavingsChargeCalculationType:
      type: object
      properties:
        code:
          type: string
          example: chargeCalculationType.flat
        description:
          type: string
          example: Flat
        id:
          type: integer
          format: int32
          example: 1
    GetSavingsChargePaymentMode:
      type: object
      properties:
        code:
          type: string
          example: chargepaymentmode.regular
        description:
          type: string
          example: chargepaymentmode.regular
        id:
          type: integer
          format: int32
          example: 0
    GetSavingsChargeTimeType:
      type: object
      properties:
        code:
          type: string
          example: chargeTimeType.specifiedDueDate
        description:
          type: string
          example: Specified due date
        id:
          type: integer
          format: int32
          example: 1
    GetSavingsChargesChargeTimeType:
      type: object
      properties:
        code:
          type: string
          example: chargeTimeType.specifiedDueDate
        description:
          type: string
          example: Specified due date
        id:
          type: integer
          format: int32
          example: 2
    GetSavingsChargesOptions:
      type: object
      properties:
        active:
          type: boolean
          example: true
        amount:
          type: number
          format: float
          example: 100
        chargeCalculationType:
          $ref: '#/components/schemas/GetChargesChargeCalculationType'
        chargeTimeType:
          $ref: '#/components/schemas/GetSavingsChargesChargeTimeType'
        chargesAppliesTo:
          $ref: '#/components/schemas/GetChargesAppliesTo'
        currency:
          $ref: '#/components/schemas/GetChargesCurrencyResponse'
        id:
          type: integer
          format: int64
          example: 2
        name:
          type: string
          example: Passbook Fee
        penalty:
          type: boolean
          example: false
    GetSavingsCurrency:
      type: object
      properties:
        code:
          type: string
          example: USD
        decimalPlaces:
          type: integer
          format: int32
          example: 2
        displayLabel:
          type: string
          example: US Dollar ($)
        displaySymbol:
          type: string
          example: $
        name:
          type: string
          example: US Dollar
        nameCode:
          type: string
          example: currency.USD
    GetSavingsInterestCalculationDaysInYearType:
      type: object
      properties:
        code:
          type: string
          example: savingsInterestCalculationDaysInYearType.days365
        id:
          type: integer
          format: int32
          example: 365
        value:
          type: string
          example: 365 Days
    GetSavingsInterestCalculationType:
      type: object
      properties:
        code:
          type: string
          example: savingsInterestCalculationType.dailybalance
        id:
          type: integer
          format: int32
          example: 1
        value:
          type: string
          example: Daily Balance
    GetSavingsInterestCompoundingPeriodType:
      type: object
      properties:
        code:
          type: string
          example: savings.interest.period.savingsCompoundingInterestPeriodType.daily
        id:
          type: integer
          format: int32
          example: 1
        value:
          type: string
          example: Daily
    GetSavingsInterestPostingPeriodType:
      type: object
      properties:
        code:
          type: string
          example: savings.interest.posting.period.savingsPostingInterestPeriodType.monthly
        id:
          type: integer
          format: int32
          example: 4
        value:
          type: string
          example: Monthly
    GetSavingsPageItems:
      type: object
      properties:
        accountNo:
          type: string
          example: "000000001"
        clientId:
          type: integer
          format: int32
          example: 1
        clientName:
          type: string
          example: small business
        currency:
          $ref: '#/components/schemas/GetSavingsCurrency'
        fieldOfficerId:
          type: integer
          format: int32
          example: 0
        id:
          type: integer
          format: int32
          example: 1
        interestCalculationDaysInYearType:
          $ref: '#/components/schemas/GetSavingsInterestCalculationDaysInYearType'
        interestCalculationType:
          $ref: '#/components/schemas/GetSavingsInterestCalculationType'
        interestCompoundingPeriodType:
          $ref: '#/components/schemas/GetSavingsInterestCompoundingPeriodType'
        interestPostingPeriodType:
          $ref: '#/components/schemas/GetSavingsInterestPostingPeriodType'
        nominalAnnualInterestRate:
          type: number
          format: double
          example: 5
        savingsProductId:
          type: integer
          format: int32
          example: 1
        savingsProductName:
          type: string
          example: Passbook Savings
        status:
          $ref: '#/components/schemas/GetSavingsStatus'
        summary:
          $ref: '#/components/schemas/GetSavingsSummary'
        timeline:
          $ref: '#/components/schemas/GetSavingsTimeline'
    GetSavingsProductOptions:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: Passbook Savings
    GetSavingsProductsAccountingMappingOptions:
      type: object
      properties:
        assetAccountOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetSavingsProductsAssetAccountOptions'
          uniqueItems: true
        expenseAccountOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetSavingsProductsExpenseAccountOptions'
          uniqueItems: true
        incomeAccountOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetSavingsProductsIncomeAccountOptions'
          uniqueItems: true
        liabilityAccountOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetSavingsProductsLiabilityAccountOptions'
          uniqueItems: true
    GetSavingsProductsAccountingMappings:
      type: object
      properties:
        feeReceivableAccount:
          $ref: '#/components/schemas/GetSavingsProductsGlAccount'
        incomeFromFeeAccount:
          $ref: '#/components/schemas/GetSavingsProductsGlAccount'
        incomeFromInterest:
          $ref: '#/components/schemas/GetSavingsProductsGlAccount'
        incomeFromPenaltyAccount:
          $ref: '#/components/schemas/GetSavingsProductsGlAccount'
        interestOnSavingsAccount:
          $ref: '#/components/schemas/GetSavingsProductsGlAccount'
        interestPayableAccount:
          $ref: '#/components/schemas/GetSavingsProductsGlAccount'
        overdraftPortfolioControl:
          $ref: '#/components/schemas/GetSavingsProductsGlAccount'
        penaltyReceivableAccount:
          $ref: '#/components/schemas/GetSavingsProductsGlAccount'
        savingsControlAccount:
          $ref: '#/components/schemas/GetSavingsProductsGlAccount'
        savingsReferenceAccount:
          $ref: '#/components/schemas/GetSavingsProductsGlAccount'
        transfersInSuspenseAccount:
          $ref: '#/components/schemas/GetSavingsProductsGlAccount'
        writeOffAccount:
          $ref: '#/components/schemas/GetSavingsProductsGlAccount'
    GetSavingsProductsAccountingRule:
      type: object
      properties:
        code:
          type: string
          example: accountingRuleType.cash
        id:
          type: integer
          format: int32
          example: 2
        value:
          type: string
          example: CASH BASED
    GetSavingsProductsAssetAccountOptions:
      type: object
      properties:
        disabled:
          type: boolean
          example: false
        glCode:
          type: string
          example: "100001"
        id:
          type: integer
          format: int32
          example: 2
        manualEntriesAllowed:
          type: boolean
          example: true
        name:
          type: string
          example: Cash
        tagId:
          $ref: '#/components/schemas/GetSavingsAssetTagId'
        type:
          $ref: '#/components/schemas/GetSavingsAssetLiabilityType'
        usage:
          $ref: '#/components/schemas/GetSavingsProductsLiabilityUsage'
    GetSavingsProductsChargeAppliesTo:
      type: object
      properties:
        code:
          type: string
          example: chargeAppliesTo.savings
        description:
          type: string
          example: Savings
        id:
          type: integer
          format: int32
          example: 2
    GetSavingsProductsChargeOptions:
      type: object
      properties:
        active:
          type: boolean
          example: true
        amount:
          type: integer
          format: int64
          example: 200
        chargeAppliesTo:
          $ref: '#/components/schemas/GetSavingsProductsChargeAppliesTo'
        chargeCalculationType:
          $ref: '#/components/schemas/GetSavingsChargeCalculationType'
        chargePaymentMode:
          $ref: '#/components/schemas/GetSavingsChargePaymentMode'
        chargeTimeType:
          $ref: '#/components/schemas/GetSavingsChargeTimeType'
        currency:
          $ref: '#/components/schemas/GetSavingsCurrency'
        id:
          type: integer
          format: int32
          example: 4
        name:
          type: string
          example: Savings charge 1
        penalty:
          type: boolean
          example: false
    GetSavingsProductsExpenseAccountOptions:
      type: object
      properties:
        disabled:
          type: boolean
          example: false
        glCode:
          type: string
          example: "60001"
        id:
          type: integer
          format: int32
          example: 6
        manualEntriesAllowed:
          type: boolean
          example: true
        name:
          type: string
          example: Write Off Expenses
        tagId:
          $ref: '#/components/schemas/GetSavingsAssetTagId'
        type:
          $ref: '#/components/schemas/GetSavingsProductsExpenseType'
        usage:
          $ref: '#/components/schemas/GetSavingsProductsLiabilityUsage'
    GetSavingsProductsExpenseType:
      type: object
      properties:
        code:
          type: string
          example: accountType.expense
        description:
          type: string
          example: EXPENSE
        id:
          type: integer
          format: int32
          example: 5
    GetSavingsProductsFeeToIncomeAccountMappings:
      type: object
      properties:
        charge:
          $ref: '#/components/schemas/GetSavingsProductsFeeToIncomeAccountMappingsCharge'
        incomeAccount:
          $ref: '#/components/schemas/GetSavingsProductsFeeToIncomeAccountMappingsIncomeAccount'
    GetSavingsProductsFeeToIncomeAccountMappingsCharge:
      type: object
      properties:
        active:
          type: boolean
          example: false
        id:
          type: integer
          format: int32
          example: 11
        name:
          type: string
          example: sav charge
        penalty:
          type: boolean
          example: false
    GetSavingsProductsFeeToIncomeAccountMappingsIncomeAccount:
      type: object
      properties:
        glCode:
          type: string
          example: "24"
        id:
          type: integer
          format: int32
          example: 16
        name:
          type: string
          example: income from savings fee
    GetSavingsProductsFundSourceAccount:
      type: object
      properties:
        glCode:
          type: string
          example: "20"
        id:
          type: integer
          format: int32
          example: 12
        name:
          type: string
          example: savings ref
    GetSavingsProductsGlAccount:
      type: object
      properties:
        glCode:
          type: string
          example: "2000001"
        id:
          type: integer
          format: int32
          example: 12
        name:
          type: string
          example: savings control
    GetSavingsProductsIncomeAccountOptions:
      type: object
      properties:
        disabled:
          type: boolean
          example: false
        glCode:
          type: string
          example: "40001"
        id:
          type: integer
          format: int32
          example: 3
        manualEntriesAllowed:
          type: boolean
          example: true
        name:
          type: string
          example: income from interest
        tagId:
          $ref: '#/components/schemas/GetSavingsAssetTagId'
        type:
          $ref: '#/components/schemas/GetSavingsProductsIncomeType'
        usage:
          $ref: '#/components/schemas/GetSavingsProductsLiabilityUsage'
    GetSavingsProductsIncomeType:
      type: object
      properties:
        code:
          type: string
          example: accountType.income
        description:
          type: string
          example: INCOME
        id:
          type: integer
          format: int32
          example: 4
    GetSavingsProductsInterestCalculationDaysInYearType:
      type: object
      properties:
        code:
          type: string
          example: savingsInterestCalculationDaysInYearType.days365
        id:
          type: integer
          format: int32
          example: 365
        value:
          type: string
          example: 365 Days
    GetSavingsProductsInterestCalculationType:
      type: object
      properties:
        code:
          type: string
          example: savingsInterestCalculationType.dailybalance
        id:
          type: integer
          format: int32
          example: 1
        value:
          type: string
          example: Daily Balance
    GetSavingsProductsInterestCompoundingPeriodType:
      type: object
      properties:
        code:
          type: string
          example: savings.interest.period.savingsCompoundingInterestPeriodType.daily
        id:
          type: integer
          format: int32
          example: 1
        value:
          type: string
          example: Daily
    GetSavingsProductsInterestPostingPeriodType:
      type: object
      properties:
        code:
          type: string
          example: savings.interest.posting.period.savingsPostingInterestPeriodType.monthly
        id:
          type: integer
          format: int32
          example: 4
        value:
          type: string
          example: Monthly
    GetSavingsProductsLiabilityAccountOptions:
      type: object
      properties:
        disabled:
          type: boolean
          example: false
        glCode:
          type: string
          example: "50001"
        id:
          type: integer
          format: int32
          example: 15
        manualEntriesAllowed:
          type: boolean
          example: true
        name:
          type: string
          example: Savings Control
        nameDecorated:
          type: string
          example: Savings Control
        tagId:
          $ref: '#/components/schemas/GetSavingsProductsLiabilityTagId'
        type:
          $ref: '#/components/schemas/GetSavingsProductsLiabilityType'
        usage:
          $ref: '#/components/schemas/GetSavingsProductsLiabilityUsage'
    GetSavingsProductsLiabilityTagId:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 0
    GetSavingsProductsLiabilityType:
      type: object
      properties:
        code:
          type: string
          example: accountType.liability
        description:
          type: string
          example: LIABILITY
        id:
          type: integer
          format: int32
          example: 2
    GetSavingsProductsLiabilityUsage:
      type: object
      properties:
        code:
          type: string
          example: accountUsage.detail
        description:
          type: string
          example: DETAIL
        id:
          type: integer
          format: int32
          example: 1
    GetSavingsProductsLockinPeriodFrequencyTypeOptions:
      type: object
      properties:
        code:
          type: string
          example: savings.lockin.savingsPeriodFrequencyType.days
        id:
          type: integer
          format: int32
          example: 0
        value:
          type: string
          example: Days
    GetSavingsProductsPaymentChannelToFundSourceMappings:
      type: object
      properties:
        fundSourceAccount:
          $ref: '#/components/schemas/GetSavingsProductsFundSourceAccount'
        paymentType:
          $ref: '#/components/schemas/GetSavingsProductsPaymentType'
    GetSavingsProductsPaymentType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 10
        name:
          type: string
          example: check
    GetSavingsProductsPaymentTypeOptions:
      type: object
      properties:
        description:
          type: string
          example: Money Transfer
        id:
          type: integer
          format: int32
          example: 14
        isCashPayment:
          type: boolean
          example: true
        name:
          type: string
          example: Wire Transfer
        position:
          type: integer
          format: int32
          example: 0
    GetSavingsProductsPenaltyToIncomeAccountMappings:
      type: object
      properties:
        charge:
          $ref: '#/components/schemas/GetSavingsProductsPenaltyToIncomeAccountMappingsCharge'
        incomeAccount:
          $ref: '#/components/schemas/GetSavingsProductsGlAccount'
    GetSavingsProductsPenaltyToIncomeAccountMappingsCharge:
      type: object
      properties:
        active:
          type: boolean
          example: false
        id:
          type: integer
          format: int32
          example: 12
        name:
          type: string
          example: sav 2
        penalty:
          type: boolean
          example: true
    GetSavingsProductsProductIdResponse:
      type: object
      description: GetSavingsProductsProductIdResponse
      properties:
        accountingMappings:
          $ref: '#/components/schemas/GetSavingsProductsAccountingMappings'
        accountingRule:
          $ref: '#/components/schemas/GetSavingsProductsAccountingRule'
        charges:
          type: array
          example: []
          items:
            type: integer
            format: int32
        currency:
          $ref: '#/components/schemas/GetSavingsCurrency'
        description:
          type: string
          example: gtasga
        feeToIncomeAccountMappings:
          type: array
          items:
            $ref: '#/components/schemas/GetSavingsProductsFeeToIncomeAccountMappings'
          uniqueItems: true
        id:
          type: integer
          format: int32
          example: 1
        interestCalculationDaysInYearType:
          $ref: '#/components/schemas/GetSavingsProductsInterestCalculationDaysInYearType'
        interestCalculationType:
          $ref: '#/components/schemas/GetSavingsProductsInterestCalculationType'
        interestCompoundingPeriodType:
          $ref: '#/components/schemas/GetSavingsProductsInterestCompoundingPeriodType'
        interestPostingPeriodType:
          $ref: '#/components/schemas/GetSavingsProductsInterestPostingPeriodType'
        name:
          type: string
          example: savings product
        nominalAnnualInterestRate:
          type: number
          example: 5
        paymentChannelToFundSourceMappings:
          type: array
          items:
            $ref: '#/components/schemas/GetSavingsProductsPaymentChannelToFundSourceMappings'
          uniqueItems: true
        penaltyToIncomeAccountMappings:
          type: array
          items:
            $ref: '#/components/schemas/GetSavingsProductsPenaltyToIncomeAccountMappings'
          uniqueItems: true
        shortName:
          type: string
          example: sa1
        withdrawalFeeForTransfers:
          type: boolean
          example: false
    GetSavingsProductsResponse:
      type: object
      description: GetSavingsProductsResponse
      properties:
        accountingRule:
          $ref: '#/components/schemas/GetSavingsProductsAccountingRule'
        currency:
          $ref: '#/components/schemas/GetSavingsCurrency'
        description:
          type: string
          example: gtasga
        id:
          type: integer
          format: int32
          example: 1
        interestCalculationDaysInYearType:
          $ref: '#/components/schemas/GetSavingsProductsInterestCalculationDaysInYearType'
        interestCalculationType:
          $ref: '#/components/schemas/GetSavingsProductsInterestCalculationType'
        interestCompoundingPeriodType:
          $ref: '#/components/schemas/GetSavingsProductsInterestCompoundingPeriodType'
        interestPostingPeriodType:
          $ref: '#/components/schemas/GetSavingsProductsInterestPostingPeriodType'
        name:
          type: string
          example: Savings product
        nominalAnnualInterestRate:
          type: number
          example: 5.0
        shortName:
          type: string
          example: sa1
        withdrawalFeeForTransfers:
          type: boolean
          example: false
    GetSavingsProductsTemplateAccountingRule:
      type: object
      properties:
        code:
          type: string
          example: accountingRuleType.none
        id:
          type: integer
          format: int32
          example: 1
        value:
          type: string
          example: NONE
    GetSavingsProductsTemplateResponse:
      type: object
      description: GetSavingsProductsTemplateResponse
      properties:
        accountMapping:
          $ref: '#/components/schemas/GetSavingsCurrency'
        accountingMappingOptions:
          $ref: '#/components/schemas/GetSavingsProductsAccountingMappingOptions'
        accountingRule:
          $ref: '#/components/schemas/GetSavingsProductsTemplateAccountingRule'
        accountingRuleOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetSavingsProductsTemplateAccountingRule'
          uniqueItems: true
        chargeOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetSavingsProductsChargeOptions'
          uniqueItems: true
        currency:
          $ref: '#/components/schemas/GetSavingsCurrency'
        currencyOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetSavingsCurrency'
          uniqueItems: true
        interestCalculationDaysInYearType:
          $ref: '#/components/schemas/GetSavingsProductsInterestCalculationDaysInYearType'
        interestCalculationDaysInYearTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetSavingsProductsInterestCalculationDaysInYearType'
          uniqueItems: true
        interestCalculationType:
          $ref: '#/components/schemas/GetSavingsProductsInterestCalculationType'
        interestCalculationTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetSavingsProductsInterestCalculationType'
          uniqueItems: true
        interestCompoundingPeriodType:
          $ref: '#/components/schemas/GetSavingsProductsInterestCompoundingPeriodType'
        interestCompoundingPeriodTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetSavingsProductsInterestCompoundingPeriodType'
          uniqueItems: true
        interestPostingPeriodType:
          $ref: '#/components/schemas/GetSavingsProductsInterestPostingPeriodType'
        interestPostingPeriodTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetSavingsProductsInterestPostingPeriodType'
          uniqueItems: true
        lockinPeriodFrequencyTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetSavingsProductsLockinPeriodFrequencyTypeOptions'
          uniqueItems: true
        paymentTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetSavingsProductsPaymentTypeOptions'
          uniqueItems: true
        withdrawalFeeTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetSavingsProductsWithdrawalFeeTypeOptions'
          uniqueItems: true
    GetSavingsProductsWithdrawalFeeTypeOptions:
      type: object
      properties:
        code:
          type: string
          example: savingsWithdrawalFeesType.flat
        id:
          type: integer
          format: int32
          example: 1
        value:
          type: string
          example: Flat
    GetSavingsStatus:
      type: object
      properties:
        active:
          type: boolean
          example: false
        approved:
          type: boolean
          example: false
        closed:
          type: boolean
          example: false
        code:
          type: string
          example: savingsAccountStatusType.submitted.and.pending.approval
        id:
          type: integer
          format: int32
          example: 100
        rejected:
          type: boolean
          example: false
        submittedAndPendingApproval:
          type: boolean
          example: true
        value:
          type: string
          example: Submitted and pending approval
        withdrawnByApplicant:
          type: boolean
          example: false
    GetSavingsSummary:
      type: object
      properties:
        accountBalance:
          type: number
          example: 0
        currency:
          $ref: '#/components/schemas/GetSavingsCurrency'
    GetSavingsTimeline:
      type: object
      properties:
        activatedOnDate:
          type: string
          format: date
        approvedByFirstname:
          type: string
          example: name
        approvedByLastname:
          type: string
          example: lastname
        approvedByUsername:
          type: string
          example: mifos
        approvedOnDate:
          type: string
          format: date
        submittedByFirstname:
          type: string
          example: name
        submittedByLastname:
          type: string
          example: lastname
        submittedByUsername:
          type: string
          example: username
        submittedOnDate:
          type: string
          format: date
    GetSchedulerResponse:
      type: object
      description: GetSchedulerResponse
      properties:
        active:
          type: boolean
          example: true
    GetSearchResponse:
      type: object
      description: GetSearchResponse
      properties:
        entityAccountNo:
          type: integer
          format: int64
          example: 1
        entityExternalId:
          type: string
          example: ID_JKZGEXF
        entityId:
          type: integer
          format: int64
          example: 1
        entityName:
          type: string
          example: Group_Name_HVCU5
        entityStatus:
          $ref: '#/components/schemas/EnumOptionData'
        entityType:
          type: string
          example: GROUP
        parentId:
          type: integer
          format: int64
          example: 1
        parentName:
          type: string
          example: Head Office
    GetSelfBeneficiariesAccountOptions:
      type: object
      properties:
        code:
          type: string
          example: accountType.savings
        description:
          type: string
          example: Savings Account
        id:
          type: integer
          format: int32
          example: 2
    GetSelfBeneficiariesTPTResponse:
      type: object
      description: GetSelfBeneficiariesTPTResponse
      properties:
        accountNumber:
          type: integer
          format: int64
          example: 2
        accountType:
          $ref: '#/components/schemas/GetSelfBeneficiariesAccountOptions'
        clientName:
          type: string
          example: FN2 LN2
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: Client2Savings
        officeName:
          type: string
          example: Test Office
        transferLimit:
          type: integer
          format: int32
          example: 0
    GetSelfBeneficiariesTPTTemplateResponse:
      type: object
      description: GetSelfBeneficiariesTPTTemplateResponse
      properties:
        accountTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetSelfBeneficiariesAccountOptions'
          uniqueItems: true
    GetSelfClientsChargeCalculationType:
      type: object
      properties:
        code:
          type: string
          example: chargeCalculationType.flat
        description:
          type: string
          example: Flat
        id:
          type: integer
          format: int32
          example: 1
    GetSelfClientsChargeTimeType:
      type: object
      properties:
        code:
          type: string
          example: chargeTimeType.specifiedDueDate
        description:
          type: string
          example: Specified due date
        id:
          type: integer
          format: int32
          example: 2
    GetSelfClientsChargesPageItems:
      type: object
      properties:
        amount:
          type: number
          format: float
          example: 550
        amountOutstanding:
          type: number
          format: float
          example: 550
        amountPaid:
          type: number
          format: float
          example: 0
        amountWaived:
          type: number
          format: float
          example: 0
        amountWrittenOff:
          type: number
          format: float
          example: 0
        chargeCalculationType:
          $ref: '#/components/schemas/GetSelfClientsChargeCalculationType'
        chargeId:
          type: integer
          format: int32
          example: 6
        chargeTimeType:
          $ref: '#/components/schemas/GetSelfClientsChargeTimeType'
        clientId:
          type: integer
          format: int32
          example: 1
        currency:
          $ref: '#/components/schemas/GetSelfClientsSavingsAccountsCurrency'
        dueDate:
          type: string
          format: date
        id:
          type: integer
          format: int32
          example: 5
        isActive:
          type: boolean
          example: true
        isPaid:
          type: boolean
          example: false
        isWaived:
          type: boolean
          example: false
        name:
          type: string
          example: Client Fees 2
        penalty:
          type: boolean
          example: false
    GetSelfClientsClientIdAccountsResponse:
      type: object
      description: GetSelfClientsClientIdAccountsResponse
      properties:
        loanAccounts:
          type: array
          items:
            $ref: '#/components/schemas/GetSelfClientsLoanAccounts'
          uniqueItems: true
        savingsAccounts:
          type: array
          items:
            $ref: '#/components/schemas/GetSelfClientsSavingsAccounts'
          uniqueItems: true
    GetSelfClientsClientIdChargesChargeIdResponse:
      type: object
      description: GetSelfClientsClientIdChargesChargeIdResponse
      properties:
        amount:
          type: number
          format: float
          example: 100
        amountOutstanding:
          type: number
          format: float
          example: 0
        amountPaid:
          type: number
          format: float
          example: 0
        amountWaived:
          type: number
          format: float
          example: 100
        amountWrittenOff:
          type: number
          format: float
          example: 0
        chargeCalculationType:
          $ref: '#/components/schemas/GetSelfClientsChargeCalculationType'
        chargeId:
          type: integer
          format: int32
          example: 5
        chargeTimeType:
          $ref: '#/components/schemas/GetSelfClientsChargeTimeType'
        clientId:
          type: integer
          format: int32
          example: 1
        currency:
          $ref: '#/components/schemas/GetSelfClientsSavingsAccountsCurrency'
        dueDate:
          type: string
          format: date
        id:
          type: integer
          format: int32
          example: 3
        isActive:
          type: boolean
          example: true
        isPaid:
          type: boolean
          example: false
        isWaived:
          type: boolean
          example: true
        name:
          type: string
          example: Client Fee 1
        penalty:
          type: boolean
          example: true
    GetSelfClientsClientIdChargesResponse:
      type: object
      description: GetSelfClientsClientIdChargesResponse
      properties:
        pageItems:
          type: array
          items:
            $ref: '#/components/schemas/GetSelfClientsChargesPageItems'
          uniqueItems: true
        totalFilteredRecords:
          type: integer
          format: int32
          example: 4
    GetSelfClientsClientIdResponse:
      type: object
      description: GetSelfClientsClientIdResponse
      properties:
        accountNo:
          type: integer
          format: int64
          example: 27
        activationDate:
          type: string
          format: date
        active:
          type: boolean
          example: true
        displayName:
          type: string
          example: savings test
        firstname:
          type: string
          example: savings
        groups:
          type: array
          items:
            type: string
        id:
          type: integer
          format: int32
          example: 27
        lastname:
          type: string
          example: test
        officeId:
          type: integer
          format: int32
          example: 1
        officeName:
          type: string
          example: Head Office
        savingsProductId:
          type: integer
          format: int32
          example: 4
        savingsProductName:
          type: string
          example: account overdraft
        status:
          $ref: '#/components/schemas/GetSelfClientsStatus'
        timeline:
          $ref: '#/components/schemas/GetSelfClientsTimeline'
    GetSelfClientsClientIdTransactionsPageItems:
      type: object
      properties:
        amount:
          type: number
          format: double
          example: 22
        currency:
          $ref: '#/components/schemas/GetSelfClientsSavingsAccountsCurrency'
        date:
          type: string
          format: date
        id:
          type: integer
          format: int32
          example: 226
        officeId:
          type: integer
          format: int32
          example: 1
        officeName:
          type: string
          example: Head Office
        reversed:
          type: boolean
          example: false
        submittedOnDate:
          type: string
          format: date
        type:
          $ref: '#/components/schemas/GetSelfClientsClientIdTransactionsType'
    GetSelfClientsClientIdTransactionsResponse:
      type: object
      description: GetSelfClientsClientIdTransactionsResponse
      properties:
        pageItems:
          type: array
          items:
            $ref: '#/components/schemas/GetSelfClientsClientIdTransactionsPageItems'
          uniqueItems: true
        totalFilteredRecords:
          type: integer
          format: int32
          example: 20
    GetSelfClientsClientIdTransactionsTransactionIdResponse:
      type: object
      description: GetSelfClientsClientIdTransactionsTransactionIdResponse
      properties:
        amount:
          type: number
          format: float
          example: 60.0
        currency:
          $ref: '#/components/schemas/GetSelfClientsSavingsAccountsCurrency'
        date:
          type: string
          format: date
        id:
          type: integer
          format: int32
          example: 1
        officeId:
          type: integer
          format: int32
          example: 1
        officeName:
          type: string
          example: Head Office
        reversed:
          type: boolean
          example: true
        submittedOnDate:
          type: string
          format: date
        type:
          $ref: '#/components/schemas/GetSelfClientsClientIdTransactionsType'
    GetSelfClientsClientIdTransactionsType:
      type: object
      properties:
        code:
          type: string
          example: clientTransactionType.payCharge
        description:
          type: string
          example: PAY_CHARGE
        id:
          type: integer
          format: int32
          example: 1
    GetSelfClientsLoanAccounts:
      type: object
      properties:
        accountNo:
          type: integer
          format: int64
          example: 1
        externalId:
          type: integer
          format: int32
          example: 456
        id:
          type: integer
          format: int32
          example: 1
        loanCycle:
          type: integer
          format: int32
          example: 1
        loanType:
          $ref: '#/components/schemas/GetSelfClientsLoanAccountsType'
        productId:
          type: integer
          format: int32
          example: 1
        productName:
          type: string
          example: TestOne
        status:
          $ref: '#/components/schemas/GetSelfClientsLoanAccountsStatus'
    GetSelfClientsLoanAccountsStatus:
      type: object
      properties:
        active:
          type: boolean
          example: true
        closed:
          type: boolean
          example: false
        closedObligationsMet:
          type: boolean
          example: false
        closedRescheduled:
          type: boolean
          example: false
        closedWrittenOff:
          type: boolean
          example: false
        code:
          type: string
          example: loanStatusType.active
        description:
          type: string
          example: Active
        id:
          type: integer
          format: int32
          example: 300
        overpaid:
          type: boolean
          example: false
        pendingApproval:
          type: boolean
          example: false
        waitingForDisbursal:
          type: boolean
          example: false
    GetSelfClientsLoanAccountsType:
      type: object
      properties:
        code:
          type: string
          example: loanType.individual
        description:
          type: string
          example: Individual
        id:
          type: integer
          format: int32
          example: 1
    GetSelfClientsPageItems:
      type: object
      properties:
        accountNo:
          type: integer
          format: int64
          example: 1
        activationDate:
          type: string
          format: date
        active:
          type: boolean
          example: true
        displayName:
          type: string
          example: Small shop
        fullname:
          type: string
          example: Small shop
        id:
          type: integer
          format: int32
          example: 1
        officeId:
          type: integer
          format: int32
          example: 1
        officeName:
          type: string
          example: Head Office
        status:
          $ref: '#/components/schemas/GetSelfClientsStatus'
    GetSelfClientsResponse:
      type: object
      description: GetSelfClientsResponse
      properties:
        pageItems:
          type: array
          items:
            $ref: '#/components/schemas/GetSelfClientsPageItems'
          uniqueItems: true
        totalFilteredRecords:
          type: integer
          format: int32
          example: 2
    GetSelfClientsSavingsAccounts:
      type: object
      properties:
        accountNo:
          type: integer
          format: int64
          example: 7
        currency:
          $ref: '#/components/schemas/GetSelfClientsSavingsAccountsCurrency'
        id:
          type: integer
          format: int32
          example: 7
        productId:
          type: integer
          format: int32
          example: 2
        productName:
          type: string
          example: Other product
        status:
          $ref: '#/components/schemas/GetSelfClientsSavingsAccountsStatus'
    GetSelfClientsSavingsAccountsCurrency:
      type: object
      properties:
        code:
          type: string
          example: USD
        decimalPlaces:
          type: integer
          format: int32
          example: 2
        displayLabel:
          type: string
          example: US Dollar ($)
        displaySymbol:
          type: string
          example: $
        name:
          type: string
          example: US Dollar
        nameCode:
          type: string
          example: currency.USD
    GetSelfClientsSavingsAccountsStatus:
      type: object
      properties:
        active:
          type: boolean
          example: false
        approved:
          type: boolean
          example: false
        closed:
          type: boolean
          example: false
        code:
          type: string
          example: savingsAccountStatusType.submitted.and.pending.approval
        description:
          type: string
          example: Submitted and pending approval
        id:
          type: integer
          format: int32
          example: 100
        rejected:
          type: boolean
          example: false
        submittedAndPendingApproval:
          type: boolean
          example: true
        withdrawnByApplicant:
          type: boolean
          example: false
    GetSelfClientsStatus:
      type: object
      properties:
        code:
          type: string
          example: clientStatusType.active
        description:
          type: string
          example: Active
        id:
          type: integer
          format: int32
          example: 300
    GetSelfClientsTimeline:
      type: object
      properties:
        activatedByFirstname:
          type: string
          example: App
        activatedByLastname:
          type: string
          example: Administrator
        activatedByUsername:
          type: string
          example: mifos
        activatedOnDate:
          type: string
          format: date
        submittedByFirstname:
          type: string
          example: App
        submittedByLastname:
          type: string
          example: Administrator
        submittedByUsername:
          type: string
          example: mifos
        submittedOnDate:
          type: string
          format: date
    GetSelfLoanIdSummary:
      type: object
      properties:
        canDisburse:
          type: boolean
          example: false
        currency:
          $ref: '#/components/schemas/GetLoansLoanIdCurrency'
        disbursementDetails:
          type: array
          items:
            $ref: '#/components/schemas/GetLoansLoanIdDisbursementDetails'
          uniqueItems: true
        emiAmountVariations:
          type: array
          items:
            $ref: '#/components/schemas/GetLoansLoanIdEmiVariations'
          uniqueItems: true
        feeChargesCharged:
          type: number
          format: double
          example: 18000.0
        feeChargesDueAtDisbursementCharged:
          type: number
          format: double
          example: 0.0
        feeChargesOutstanding:
          type: number
          format: double
          example: 18000.0
        feeChargesOverdue:
          type: number
          format: double
          example: 15000.0
        feeChargesPaid:
          type: number
          format: double
          example: 0.0
        feeChargesWaived:
          type: number
          format: double
          example: 0.0
        feeChargesWrittenOff:
          type: number
          format: double
          example: 0.0
        fixedEmiAmount:
          type: number
          format: double
          example: 1100.0
        inArrears:
          type: boolean
          example: true
        interestCharged:
          type: number
          format: double
          example: 240000.0
        interestOutstanding:
          type: number
          format: double
          example: 240000.0
        interestOverdue:
          type: number
          format: double
          example: 200000.0
        interestPaid:
          type: number
          format: double
          example: 0.0
        interestWaived:
          type: number
          format: double
          example: 0.0
        interestWrittenOff:
          type: number
          format: double
          example: 0.0
        isNPA:
          type: boolean
          example: false
        linkedAccount:
          $ref: '#/components/schemas/GetLoansLoanIdLinkedAccount'
        maxOutstandingLoanBalance:
          type: number
          format: double
          example: 35000.0
        overdueCharges:
          type: array
          items:
            $ref: '#/components/schemas/GetLoansLoanIdOverdueCharges'
          uniqueItems: true
        overdueSinceDate:
          type: string
          format: date
        penaltyChargesCharged:
          type: number
          format: double
          example: 0.0
        penaltyChargesOutstanding:
          type: number
          format: double
          example: 0.0
        penaltyChargesOverdue:
          type: number
          format: double
          example: 0.0
        penaltyChargesPaid:
          type: number
          format: double
          example: 0.0
        penaltyChargesWaived:
          type: number
          format: double
          example: 0.0
        penaltyChargesWrittenOff:
          type: number
          format: double
          example: 0.0
        principalAdjustments:
          type: number
          format: double
          example: 0.0
        principalDisbursed:
          type: number
          format: double
          example: 1000000.0
        principalOutstanding:
          type: number
          format: double
          example: 1000000.0
        principalOverdue:
          type: number
          format: double
          example: 833333.3
        principalPaid:
          type: number
          format: double
          example: 0.0
        principalWrittenOff:
          type: number
          format: double
          example: 0.0
        totalChargeAdjustment:
          type: number
          format: double
          example: 0.0
        totalChargeAdjustmentReversed:
          type: number
          format: double
          example: 0.0
        totalChargeback:
          type: number
          format: double
          example: 0.0
        totalCostOfLoan:
          type: number
          format: double
          example: 0.0
        totalCreditBalanceRefund:
          type: number
          format: double
          example: 0.0
        totalCreditBalanceRefundReversed:
          type: number
          format: double
          example: 0.0
        totalExpectedCostOfLoan:
          type: number
          format: double
          example: 258000.0
        totalExpectedRepayment:
          type: number
          format: double
          example: 1258000.0
        totalGoodwillCredit:
          type: number
          format: double
          example: 0.0
        totalGoodwillCreditReversed:
          type: number
          format: double
          example: 0.0
        totalMerchantRefund:
          type: number
          format: double
          example: 0.0
        totalMerchantRefundReversed:
          type: number
          format: double
          example: 0.0
        totalOutstanding:
          type: number
          format: double
          example: 1258000.0
        totalOverdue:
          type: number
          format: double
          example: 1048333.3
        totalPayoutRefund:
          type: number
          format: double
          example: 0.0
        totalPayoutRefundReversed:
          type: number
          format: double
          example: 0.0
        totalRepayment:
          type: number
          format: double
          example: 0.0
        totalRepaymentTransaction:
          type: number
          format: double
          example: 0.0
        totalRepaymentTransactionReversed:
          type: number
          format: double
          example: 0.0
        totalWaived:
          type: number
          format: double
          example: 0.0
        totalWrittenOff:
          type: number
          format: double
          example: 0.0
    GetSelfLoanIdTimeline:
      type: object
      properties:
        actualDisbursementDate:
          type: string
          format: date
        approvedByFirstname:
          type: string
          example: App
        approvedByLastname:
          type: string
          example: Administrator
        approvedByUsername:
          type: string
          example: admin
        approvedOnDate:
          type: string
          format: date
        closedOnDate:
          type: string
          format: date
        disbursedByFirstname:
          type: string
          example: App
        disbursedByLastname:
          type: string
          example: Administrator
        disbursedByUsername:
          type: string
          example: admin
        expectedDisbursementDate:
          type: string
          format: date
        expectedMaturityDate:
          type: string
          format: date
        submittedByFirstname:
          type: string
          example: App
        submittedByLastname:
          type: string
          example: Administrator
        submittedByUsername:
          type: string
          example: admin
        submittedOnDate:
          type: string
          format: date
    GetSelfLoansChargeCalculationType:
      type: object
      properties:
        code:
          type: string
          example: chargeCalculationType.flat
        description:
          type: string
          example: Flat
        id:
          type: integer
          format: int32
          example: 1
    GetSelfLoansChargeTimeType:
      type: object
      properties:
        code:
          type: string
          example: chargeTimeType.disbursement
        description:
          type: string
          example: Disbursement
        id:
          type: integer
          format: int32
          example: 1
    GetSelfLoansLoanIdChargesResponse:
      type: object
      description: GetSelfLoansLoanIdChargesResponse
      properties:
        amount:
          type: number
          format: float
          example: 100
        amountOrPercentage:
          type: number
          format: float
          example: 100
        amountOutstanding:
          type: number
          format: float
          example: 100
        amountPaid:
          type: number
          format: float
          example: 0
        amountPercentageAppliedTo:
          type: number
          format: double
          example: 0
        amountWaived:
          type: number
          format: float
          example: 0
        amountWrittenOff:
          type: number
          format: float
          example: 0
        chargeCalculationType:
          $ref: '#/components/schemas/GetSelfLoansChargeCalculationType'
        chargeId:
          type: integer
          format: int32
          example: 1
        chargeTimeType:
          $ref: '#/components/schemas/GetSelfLoansChargeTimeType'
        currency:
          $ref: '#/components/schemas/GetLoanCurrency'
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: Loan Processing fee
        penalty:
          type: boolean
          example: false
        percentage:
          type: number
          format: double
          example: 0
    GetSelfLoansLoanIdResponse:
      type: object
      description: GetSelfLoansLoanIdResponse
      properties:
        accountNo:
          type: integer
          format: int64
          example: 1
        amortizationType:
          $ref: '#/components/schemas/GetLoansLoanIdAmortizationType'
        annualInterestRate:
          type: integer
          format: int32
          example: 24
        clientId:
          type: integer
          format: int32
          example: 1
        clientName:
          type: string
          example: Kampala first Client
        clientOfficeId:
          type: integer
          format: int32
          example: 2
        currency:
          $ref: '#/components/schemas/GetLoansLoanIdCurrency'
        id:
          type: integer
          format: int64
          example: 1
        interestCalculationPeriodType:
          $ref: '#/components/schemas/GetLoansLoanIdInterestCalculationPeriodType'
        interestRateFrequencyType:
          $ref: '#/components/schemas/GetLoansLoanIdInterestRateFrequencyType'
        interestRatePerPeriod:
          type: integer
          format: int32
          example: 24
        interestType:
          $ref: '#/components/schemas/GetLoansLoanIdInterestType'
        loanOfficerId:
          type: integer
          format: int32
          example: 2
        loanOfficerName:
          type: string
          example: "LoanOfficer, Kampala"
        loanProductDescription:
          type: string
          example: Typical Kampala loan product with cash accounting enabled for testing.
        loanProductId:
          type: integer
          format: int32
          example: 1
        loanProductName:
          type: string
          example: Kampala Product (with cash accounting)
        loanPurposeId:
          type: integer
          format: int32
          example: 22
        loanPurposeName:
          type: string
          example: option.HousingImprovement
        loanType:
          $ref: '#/components/schemas/GetLoansLoanIdLoanType'
        numberOfRepayments:
          type: integer
          format: int32
          example: 12
        principal:
          type: integer
          format: int64
          example: 1000000
        repaymentEvery:
          type: integer
          format: int32
          example: 1
        repaymentFrequencyType:
          $ref: '#/components/schemas/GetLoansLoanIdRepaymentFrequencyType'
        status:
          $ref: '#/components/schemas/GetLoansLoanIdStatus'
        summary:
          $ref: '#/components/schemas/GetSelfLoanIdSummary'
        termFrequency:
          type: integer
          format: int32
          example: 12
        termPeriodFrequencyType:
          $ref: '#/components/schemas/GetLoansLoanIdTermPeriodFrequencyType'
        timeline:
          $ref: '#/components/schemas/GetSelfLoanIdTimeline'
        transactionProcessingStrategyCode:
          type: string
          example: mifos-standard-strategy
    GetSelfLoansLoanIdTransactionsTransactionIdResponse:
      type: object
      description: GetSelfLoansLoanIdTransactionsTransactionIdResponse
      properties:
        amount:
          type: number
          format: float
          example: 559.88
        currency:
          $ref: '#/components/schemas/GetLoanCurrency'
        date:
          type: string
          format: date
        id:
          type: integer
          format: int32
          example: 3
        interestPortion:
          type: number
          format: float
          example: 559.88
        manuallyReversed:
          type: boolean
          example: false
        type:
          $ref: '#/components/schemas/GetSelfLoansLoanIdTransactionsType'
    GetSelfLoansLoanIdTransactionsType:
      type: object
      properties:
        code:
          type: string
          example: loanTransactionType.repayment
        contra:
          type: boolean
          example: false
        description:
          type: string
          example: Repayment
        disbursement:
          type: boolean
          example: false
        id:
          type: integer
          format: int32
          example: 2
        recoveryRepayment:
          type: boolean
          example: false
        repayment:
          type: boolean
          example: true
        repaymentAtDisbursement:
          type: boolean
          example: false
        waiveCharges:
          type: boolean
          example: false
        waiveInterest:
          type: boolean
          example: false
        writeOff:
          type: boolean
          example: false
    GetSelfLoansProductOptions:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: Kampala Product (with cash accounting)
    GetSelfLoansTemplateResponse:
      type: object
      description: GetSelfLoansTemplateResponse
      properties:
        clientId:
          type: integer
          format: int32
          example: 1
        clientName:
          type: string
          example: Kampala first Client
        clientOfficeId:
          type: integer
          format: int32
          example: 2
        productOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetSelfLoansProductOptions'
          uniqueItems: true
        timeline:
          $ref: '#/components/schemas/GetSelfLoansTimeline'
    GetSelfLoansTimeline:
      type: object
      properties:
        expectedDisbursementDate:
          type: string
          format: date
    GetSelfSavingsAccountsAccountIdChargesResponse:
      type: object
      description: GetSelfSavingsAccountsAccountIdChargesResponse
      properties:
        accountId:
          type: integer
          format: int32
          example: 57
        amount:
          type: integer
          format: int32
          example: 100
        amountOrPercentage:
          type: integer
          format: int32
          example: 100
        amountOutstanding:
          type: integer
          format: int32
          example: 100
        amountPaid:
          type: integer
          format: int32
          example: 0
        amountPercentageAppliedTo:
          type: number
          format: double
          example: 0
        amountWaived:
          type: integer
          format: int32
          example: 0
        amountWrittenOff:
          type: integer
          format: int32
          example: 0
        chargeCalculationType:
          $ref: '#/components/schemas/GetSelfSavingsChargeCalculationType'
        chargeId:
          type: integer
          format: int32
          example: 3
        chargeTimeType:
          $ref: '#/components/schemas/GetSelfSavingsChargeTimeType'
        currency:
          $ref: '#/components/schemas/GetSelfSavingsCurrency'
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: Savings account maintenance fee
        penalty:
          type: boolean
          example: false
        percentage:
          type: number
          format: double
          example: 0
    GetSelfSavingsAccountsAccountIdChargesSavingsAccountChargeIdResponse:
      type: object
      description: GetSelfSavingsAccountsAccountIdChargesSavingsAccountChargeIdResponse
      properties:
        amount:
          type: integer
          format: int32
          example: 100
        amountOrPercentage:
          type: integer
          format: int32
          example: 100
        amountOutstanding:
          type: integer
          format: int32
          example: 100
        amountPaid:
          type: integer
          format: int32
          example: 0
        amountPercentageAppliedTo:
          type: number
          format: double
          example: 0
        amountWaived:
          type: integer
          format: int32
          example: 0
        amountWrittenOff:
          type: integer
          format: int32
          example: 0
        chargeCalculationType:
          $ref: '#/components/schemas/GetSelfSavingsChargeCalculationType'
        chargeId:
          type: integer
          format: int32
          example: 1
        chargeTimeType:
          $ref: '#/components/schemas/GetSelfSavingsChargeTimeType'
        currency:
          $ref: '#/components/schemas/GetSelfSavingsCurrency'
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: Passbook fee
        penalty:
          type: boolean
          example: false
        percentage:
          type: number
          format: double
          example: 0
    GetSelfSavingsAccountsAccountIdTransactionsTransactionIdResponse:
      type: object
      description: GetSelfSavingsAccountsAccountIdTransactionsTransactionIdResponse
      properties:
        accountId:
          type: integer
          format: int32
          example: 1
        accountNo:
          type: integer
          format: int64
          example: 1
        amount:
          type: integer
          format: int32
          example: 5000
        currency:
          $ref: '#/components/schemas/GetSelfSavingsTransactionCurrency'
        date:
          type: string
          format: date
        id:
          type: integer
          format: int32
          example: 1
        paymentDetailData:
          $ref: '#/components/schemas/GetSelfSavingsPaymentDetailData'
        reversed:
          type: boolean
          example: true
        runningBalance:
          type: integer
          format: int32
          example: 0
        transactionType:
          $ref: '#/components/schemas/GetSelfSavingsTransactionType'
    GetSelfSavingsAccountsResponse:
      type: object
      description: GetSelfSavingsAccountsResponse
      properties:
        accountNo:
          type: integer
          format: int64
          example: 1
        clientId:
          type: integer
          format: int32
          example: 1
        clientName:
          type: string
          example: small business
        currency:
          $ref: '#/components/schemas/GetSelfSavingsCurrency'
        fieldOfficerId:
          type: integer
          format: int32
          example: 0
        id:
          type: integer
          format: int32
          example: 1
        interestCalculationDaysInYearType:
          $ref: '#/components/schemas/GetSelfSavingsInterestCalculationDaysInYearType'
        interestCalculationType:
          $ref: '#/components/schemas/GetSelfSavingsInterestCalculationType'
        interestCompoundingPeriodType:
          $ref: '#/components/schemas/GetSelfSavingsInterestCompoundingPeriodType'
        interestPostingPeriodType:
          $ref: '#/components/schemas/GetSelfSavingsInterestPostingPeriodType'
        nominalAnnualInterestRate:
          type: number
          format: double
          example: 5
        savingsProductId:
          type: integer
          format: int32
          example: 1
        savingsProductName:
          type: string
          example: Passbook Savings
        status:
          $ref: '#/components/schemas/GetSelfSavingsStatus'
        summary:
          $ref: '#/components/schemas/GetSelfSavingsSummary'
        timeline:
          $ref: '#/components/schemas/GetSelfSavingsTimeline'
    GetSelfSavingsChargeCalculationType:
      type: object
      properties:
        code:
          type: string
          example: chargeCalculationType.flat
        description:
          type: string
          example: Flat
        id:
          type: integer
          format: int32
          example: 1
    GetSelfSavingsChargeTimeType:
      type: object
      properties:
        code:
          type: string
          example: chargeTimeType.specifiedDueDate
        description:
          type: string
          example: Specified due date
        id:
          type: integer
          format: int32
          example: 1
    GetSelfSavingsCurrency:
      type: object
      properties:
        code:
          type: string
          example: USD
        decimalPlaces:
          type: integer
          format: int32
          example: 2
        displayLabel:
          type: string
          example: US Dollar ($)
        displaySymbol:
          type: string
          example: $
        name:
          type: string
          example: US Dollar
        nameCode:
          type: string
          example: currency.USD
    GetSelfSavingsInterestCalculationDaysInYearType:
      type: object
      properties:
        code:
          type: string
          example: savingsInterestCalculationDaysInYearType.days365
        description:
          type: string
          example: 365 Days
        id:
          type: integer
          format: int32
          example: 365
    GetSelfSavingsInterestCalculationType:
      type: object
      properties:
        code:
          type: string
          example: savingsInterestCalculationType.dailybalance
        description:
          type: string
          example: Daily Balance
        id:
          type: integer
          format: int32
          example: 1
    GetSelfSavingsInterestCompoundingPeriodType:
      type: object
      properties:
        code:
          type: string
          example: savings.interest.period.savingsCompoundingInterestPeriodType.daily
        description:
          type: string
          example: Daily
        id:
          type: integer
          format: int32
          example: 1
    GetSelfSavingsInterestPostingPeriodType:
      type: object
      properties:
        code:
          type: string
          example: savings.interest.posting.period.savingsPostingInterestPeriodType.monthly
        description:
          type: string
          example: Monthly
        id:
          type: integer
          format: int32
          example: 4
    GetSelfSavingsPaymentDetailData:
      type: object
      properties:
        accountNumber:
          type: integer
          format: int32
        bankNumber:
          type: integer
          format: int32
        checkNumber:
          type: integer
          format: int32
        id:
          type: integer
          format: int32
          example: 62
        paymentType:
          $ref: '#/components/schemas/GetSelfSavingsPaymentType'
        receiptNumber:
          type: integer
          format: int32
        routingCode:
          type: integer
          format: int32
    GetSelfSavingsPaymentType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 11
        name:
          type: string
          example: cash
    GetSelfSavingsStatus:
      type: object
      properties:
        active:
          type: boolean
          example: false
        approved:
          type: boolean
          example: false
        closed:
          type: boolean
          example: false
        code:
          type: string
          example: savingsAccountStatusType.submitted.and.pending.approval
        description:
          type: string
          example: Submitted and pending approval
        id:
          type: integer
          format: int32
          example: 100
        rejected:
          type: boolean
          example: false
        submittedAndPendingApproval:
          type: boolean
          example: true
        withdrawnByApplicant:
          type: boolean
          example: false
    GetSelfSavingsSummary:
      type: object
      properties:
        accountBalance:
          type: integer
          format: int32
          example: 0
        currency:
          $ref: '#/components/schemas/GetSelfSavingsCurrency'
    GetSelfSavingsTimeline:
      type: object
      properties:
        submittedOnDate:
          type: string
          format: date
    GetSelfSavingsTransactionCurrency:
      type: object
      properties:
        code:
          type: string
          example: USD
        decimalPlaces:
          type: integer
          format: int32
          example: 2
        displayLabel:
          type: string
          example: US Dollar ($)
        displaySymbol:
          type: string
          example: $
        inMultiplesOf:
          type: integer
          format: int32
          example: 0
        name:
          type: string
          example: US Dollar
        nameCode:
          type: string
          example: currency.USD
    GetSelfSavingsTransactionType:
      type: object
      properties:
        code:
          type: string
          example: savingsAccountTransactionType.withdrawal
        deposit:
          type: boolean
          example: false
        description:
          type: string
          example: Withdrawal
        feeDeduction:
          type: boolean
          example: false
        id:
          type: integer
          format: int32
          example: 2
        interestPosting:
          type: boolean
          example: false
        withdrawal:
          type: boolean
          example: true
    GetSelfUserDetailsOrganisationalRole:
      type: object
      properties:
        code:
          type: string
          example: staffOrganisationalRoleType.programDirector
        description:
          type: string
          example: Program Director
        id:
          type: integer
          format: int32
          example: 100
    GetSelfUserDetailsResponse:
      type: object
      description: GetSelfUserDetailsResponse
      properties:
        authenticated:
          type: boolean
          example: true
        base64EncodedAuthenticationKey:
          type: string
          example: bWlmb3M6cGFzc3dvcmQ=
        clients:
          type: array
          example:
          - 1
          - 2
          - 3
          items:
            type: integer
            format: int32
        isSelfServiceUser:
          type: boolean
          example: true
        officeId:
          type: integer
          format: int64
          example: 1
        officeName:
          type: string
          example: Head Office
        organisationalRole:
          $ref: '#/components/schemas/GetSelfUserDetailsOrganisationalRole'
        permissions:
          type: array
          example: ALL_FUNCTIONS
          items:
            type: string
            example: ALL_FUNCTIONS
        roles:
          type: array
          items:
            $ref: '#/components/schemas/GetSelfUserDetailsRoles'
          uniqueItems: true
        staffDisplayName:
          type: string
          example: "Director, Program"
        staffId:
          type: integer
          format: int64
          example: 1
        userId:
          type: integer
          format: int64
          example: 1
        username:
          type: string
          example: mifos
    GetSelfUserDetailsRoles:
      type: object
      properties:
        description:
          type: string
          example: This role provides all application permissions.
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: Super user
    GetShareAccountsChargeAppliesTo:
      type: object
      properties:
        code:
          type: string
          example: chargeAppliesTo.shares
        description:
          type: string
          example: Shares
        id:
          type: integer
          format: int32
          example: 4
    GetShareAccountsChargeCalculationType:
      type: object
      properties:
        code:
          type: string
          example: chargeCalculationType.flat
        description:
          type: string
          example: Flat
        id:
          type: integer
          format: int32
          example: 1
    GetShareAccountsChargeOptions:
      type: object
      properties:
        active:
          type: boolean
          example: true
        amount:
          type: integer
          format: int32
          example: 2
        calculationType:
          $ref: '#/components/schemas/GetShareAccountsChargeCalculationType'
        chargeAppliesTo:
          $ref: '#/components/schemas/GetShareAccountsChargeAppliesTo'
        chargeTimeType:
          $ref: '#/components/schemas/GetShareAccountsChargeTimeType'
        currency:
          $ref: '#/components/schemas/GetShareAccountsCurrency'
        id:
          type: integer
          format: int32
          example: 2
        name:
          type: string
          example: Activation fee
        paymentMode:
          $ref: '#/components/schemas/GetShareAccountsChargePaymentMode'
        penalty:
          type: boolean
          example: false
    GetShareAccountsChargePaymentMode:
      type: object
      properties:
        code:
          type: string
          example: chargepaymentmode.regular
        description:
          type: string
          example: Regular
        id:
          type: integer
          format: int32
          example: 0
    GetShareAccountsChargeTimeType:
      type: object
      properties:
        code:
          type: string
          example: chargeTimeType.sharespurchase
        description:
          type: string
          example: Share purchase
        id:
          type: integer
          format: int32
          example: 14
    GetShareAccountsClientIdProductIdAccountingRule:
      type: object
      properties:
        code:
          type: string
          example: accountingRuleType.cash
        description:
          type: string
          example: CASH BASED
        id:
          type: integer
          format: int32
          example: 2
    GetShareAccountsClientIdProductIdLockPeriodTypeEnum:
      type: object
      properties:
        code:
          type: string
          example: shares.lockin.sharePeriodFrequencyType.days
        description:
          type: string
          example: days
        id:
          type: integer
          format: int32
          example: 0
    GetShareAccountsClientIdProductIdMinimumActivePeriodForDividendsTypeEnum:
      type: object
      properties:
        code:
          type: string
          example: shares.minimumactive.sharePeriodFrequencyType.days
        description:
          type: string
          example: days
        id:
          type: integer
          format: int32
          example: 0
    GetShareAccountsClientIdProductIdResponse:
      type: object
      description: GetShareAccountsClientIdProductIdResponse
      properties:
        chargeOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetClientIdProductIdChargeOptions'
          uniqueItems: true
        productOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetClientIdProductIdProductOptions'
          uniqueItems: true
    GetShareAccountsCurrency:
      type: object
      properties:
        code:
          type: string
          example: USD
        decimalPlaces:
          type: integer
          format: int32
          example: 2
        displayLabel:
          type: string
          example: US Dollar ($)
        displaySymbol:
          type: string
          example: $
        name:
          type: string
          example: US Dollar
        nameCode:
          type: string
          example: currency.USD
    GetShareAccountsIncomeFromFeeAccountId:
      type: object
      properties:
        glCode:
          type: string
          example: "30105"
        id:
          type: integer
          format: int32
          example: 40
        name:
          type: string
          example: Other Operating Income
    GetShareAccountsShareEquityId:
      type: object
      properties:
        glCode:
          type: string
          example: "00098"
        id:
          type: integer
          format: int32
          example: 56
        name:
          type: string
          example: Share Equity
    GetShareAccountsShareReferenceId:
      type: object
      properties:
        glCode:
          type: string
          example: "20301"
        id:
          type: integer
          format: int32
          example: 32
        name:
          type: string
          example: Cash in Hand
    GetShareAccountsShareSuspenseId:
      type: object
      properties:
        glCode:
          type: string
          example: "10200"
        id:
          type: integer
          format: int32
          example: 2
        name:
          type: string
          example: Overpayment Liability
    GetShareEquityId:
      type: object
      properties:
        glCode:
          type: string
          example: EQUITY1
        id:
          type: integer
          format: int64
          example: 66
        name:
          type: string
          example: Equity Account
    GetShareReferenceId:
      type: object
      properties:
        glCode:
          type: string
          example: ASSET_ED1461237837829
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: ACCOUNT_NAME_1FJBQ
    GetShareSuspenseId:
      type: object
      properties:
        glCode:
          type: string
          example: LIABILITY_MA1461237860198
        id:
          type: integer
          format: int64
          example: 8
        name:
          type: string
          example: ACCOUNT_NAME_1FJBQ
    GetStandingInstructionHistoryFromAccount:
      type: object
      properties:
        accountNo:
          type: integer
          format: int64
          example: 2
        id:
          type: integer
          format: int64
          example: 2
        productId:
          type: integer
          format: int64
          example: 1
        productName:
          type: string
          example: General Savings
    GetStandingInstructionHistoryPageItemsFromClient:
      type: object
      properties:
        displayName:
          type: string
          example: Test client
        id:
          type: integer
          format: int64
          example: 1
        officeId:
          type: integer
          format: int64
          example: 1
        officeName:
          type: string
          example: Head Office
    GetStandingInstructionHistoryPageItemsResponse:
      type: object
      properties:
        amount:
          type: number
          format: float
          example: 10
        errorLog:
          type: string
        executionTime:
          type: string
          format: date
        fromAccount:
          $ref: '#/components/schemas/GetStandingInstructionHistoryFromAccount'
        fromAccountType:
          $ref: '#/components/schemas/GetFromAccountTypeStandingInstructionSwagger'
        fromClient:
          $ref: '#/components/schemas/GetStandingInstructionHistoryPageItemsFromClient'
        fromOffice:
          $ref: '#/components/schemas/GetFromOfficeStandingInstructionSwagger'
        name:
          type: string
          example: ACC Transfer
        standingInstructionId:
          type: integer
          format: int64
          example: 1
        status:
          type: string
          example: success
        toAccount:
          $ref: '#/components/schemas/GetStandingInstructionHistoryToAccount'
        toAccountType:
          $ref: '#/components/schemas/GetToAccountTypeStandingInstructionSwagger'
        toClient:
          $ref: '#/components/schemas/GetStandingInstructionHistoryToClient'
        toOffice:
          $ref: '#/components/schemas/GetToOfficeStandingInstructionSwagger'
    GetStandingInstructionHistoryToAccount:
      type: object
      properties:
        accountNo:
          type: integer
          format: int64
          example: 1
        id:
          type: integer
          format: int64
          example: 1
        productId:
          type: integer
          format: int64
          example: 1
        productName:
          type: string
          example: General Savings
    GetStandingInstructionHistoryToClient:
      type: object
      properties:
        displayName:
          type: string
          example: Test client
        id:
          type: integer
          format: int64
          example: 1
        officeId:
          type: integer
          format: int64
          example: 1
        officeName:
          type: string
          example: Head Office
    GetStandingInstructionRunHistoryResponse:
      type: object
      description: GetStandingInstructionRunHistoryResponse
      properties:
        pageItems:
          type: array
          items:
            $ref: '#/components/schemas/GetStandingInstructionHistoryPageItemsResponse'
          uniqueItems: true
        totalFilteredRecords:
          type: integer
          format: int32
          example: 2
    GetStandingInstructionsResponse:
      type: object
      description: GetStandingInstructionsResponse
      properties:
        pageItems:
          type: array
          items:
            $ref: '#/components/schemas/GetPageItemsStandingInstructionSwagger'
          uniqueItems: true
        totalFilteredRecords:
          type: integer
          format: int32
          example: 2
    GetStandingInstructionsStandingInstructionIdResponse:
      type: object
      description: GetStandingInstructionsStandingInstructionIdResponse
      properties:
        accountDetailId:
          type: integer
          format: int64
          example: 6
        amount:
          type: number
          format: float
          example: 150.0
        fromAccount:
          $ref: '#/components/schemas/GetFromAccountStandingInstructionSwagger'
        fromAccountType:
          $ref: '#/components/schemas/GetFromAccountTypeStandingInstructionSwagger'
        fromClient:
          $ref: '#/components/schemas/GetFromClientStandingInstructionSwagger'
        fromOffice:
          $ref: '#/components/schemas/GetFromOfficeStandingInstructionSwagger'
        id:
          type: integer
          format: int64
          example: 1
        instructionType:
          $ref: '#/components/schemas/GetInstructionTypeStandingInstructionSwagger'
        name:
          type: string
          example: test standing
        priority:
          $ref: '#/components/schemas/GetPriorityStandingInstructionSwagger'
        recurrenceFrequency:
          $ref: '#/components/schemas/GetRecurrenceFrequencyStandingInstructionSwagger'
        recurrenceInterval:
          type: integer
          format: int32
          example: 1
        recurrenceOnMonthDay:
          type: string
          format: date
        recurrenceType:
          $ref: '#/components/schemas/GetRecurrenceTypeStandingInstructionSwagger'
        status:
          $ref: '#/components/schemas/GetStatusStandingInstructionSwagger'
        toAccount:
          $ref: '#/components/schemas/GetToAccountStandingInstructionSwagger'
        toAccountType:
          $ref: '#/components/schemas/GetToAccountTypeStandingInstructionSwagger'
        toClient:
          $ref: '#/components/schemas/GetToClientStandingInstructionSwagger'
        toOffice:
          $ref: '#/components/schemas/GetToOfficeStandingInstructionSwagger'
        transferType:
          $ref: '#/components/schemas/GetTransferTypeStandingInstructionSwagger'
        validFrom:
          type: string
          format: date
    GetStandingInstructionsTemplateResponse:
      type: object
      description: GetStandingInstructionsTemplateResponse
      properties:
        fromAccountType:
          $ref: '#/components/schemas/GetFromAccountTypeResponseStandingInstructionSwagger'
        fromAccountTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetFromAccountTypeOptionsResponseStandingInstructionSwagger'
          uniqueItems: true
        fromClientOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetFromClientOptionsResponseStandingInstructionSwagger'
          uniqueItems: true
        fromOffice:
          $ref: '#/components/schemas/GetFromOfficeResponseStandingInstructionSwagger'
        fromOfficeOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetFromOfficeOptionsResponseStandingInstructionSwagger'
          uniqueItems: true
        instructionTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetInstructionTypeOptionsResponseStandingInstructionSwagger'
          uniqueItems: true
        priorityOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetPriorityOptionsResponseStandingInstructionSwagger'
          uniqueItems: true
        recurrenceFrequencyOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetRecurrenceFrequencyOptionsResponseStandingInstructionSwagger'
          uniqueItems: true
        recurrenceTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetRecurrenceTypeOptionsResponseStandingInstructionSwagger'
          uniqueItems: true
        statusOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetStatusOptionsResponseStandingInstructionSwagger'
          uniqueItems: true
        toAccountTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetToAccountTypeOptionsResponseStandingInstructionSwagger'
          uniqueItems: true
        toOfficeOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetToOfficeOptionsResponseStandingInstructionSwagger'
          uniqueItems: true
        transferTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/GetTransferTypeOptionsResponseStandingInstructionSwagger'
          uniqueItems: true
    GetStatusOptionsResponseStandingInstructionSwagger:
      type: object
      properties:
        code:
          type: string
          example: standingInstructionStatus.active
        description:
          type: string
          example: Active
        id:
          type: integer
          format: int32
          example: 1
    GetStatusStandingInstructionSwagger:
      type: object
      properties:
        code:
          type: string
          example: standingInstructionStatus.deleted
        description:
          type: string
          example: Deleted
        id:
          type: integer
          format: int32
          example: 1
    GetSurveyResponse:
      type: object
      description: GetSurveyResponse
      properties:
        datatableData:
          $ref: '#/components/schemas/GetSurveyResponseDatatableData'
        enabled:
          type: boolean
          example: false
    GetSurveyResponseDatatableData:
      type: object
      properties:
        applicationTableName:
          type: string
          example: m_client
        columnHeaderData:
          type: array
          items:
            $ref: '#/components/schemas/ResultsetColumnHeaderData'
        registeredTableName:
          type: string
          example: ppi_kenya_2005
    GetTaxesComponentsCreditAccount:
      type: object
      properties:
        glCode:
          type: string
          example: LIABILITY_PA1460364665046
        id:
          type: integer
          format: int32
          example: 4
        name:
          type: string
          example: ACCOUNT_NAME_7BR9C
    GetTaxesComponentsCreditAccountType:
      type: object
      properties:
        code:
          type: string
          example: accountType.liability
        description:
          type: string
          example: LIABILITY
        id:
          type: integer
          format: int32
          example: 2
    GetTaxesComponentsHistories:
      type: object
    GetTaxesComponentsResponse:
      type: object
      description: GetTaxesComponentsResponse
      properties:
        creditAccount:
          $ref: '#/components/schemas/GetTaxesComponentsCreditAccount'
        creditAccountType:
          $ref: '#/components/schemas/GetTaxesComponentsCreditAccountType'
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: tax component 1
        percentage:
          type: number
          format: float
          example: 10.0
        startDate:
          type: string
          format: date
        taxComponentsHistories:
          type: array
          items:
            $ref: '#/components/schemas/GetTaxesComponentsHistories'
          uniqueItems: true
    GetTaxesGroupResponse:
      type: object
      description: GetTaxesGroupResponse
      properties:
        id:
          type: integer
          format: int64
          example: 7
        name:
          type: string
          example: tax group 1
        taxAssociations:
          type: array
          items:
            $ref: '#/components/schemas/GetTaxesGroupTaxAssociations'
          uniqueItems: true
    GetTaxesGroupTaxAssociations:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 7
        startDate:
          type: string
          format: date
        taxComponent:
          $ref: '#/components/schemas/GetTaxesGroupTaxComponent'
    GetTaxesGroupTaxComponent:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 7
        name:
          type: string
          example: tax component 2
    GetTellersResponse:
      type: object
      description: GetTellersResponse
      properties:
        creditAccountId:
          type: integer
          format: int64
          example: 0
        debitAccountId:
          type: integer
          format: int64
          example: 0
        id:
          type: integer
          format: int64
          example: 3
        name:
          type: string
          example: Teller3
        officeId:
          type: integer
          format: int64
          example: 1
        officeName:
          type: string
          example: Head Office
        startDate:
          type: string
          format: date
        status:
          type: string
          enum:
          - INVALID
          - PENDING
          - ACTIVE
          - INACTIVE
          - CLOSED
          example: ACTIVE
    GetTellersTellerIdCashiersCashierIdResponse:
      type: object
      description: GetTellersTellerIdCashiersCashierIdResponse
      properties:
        description:
          type: string
        endDate:
          type: string
          format: date
        endTime:
          type: string
        id:
          type: integer
          format: int64
          example: 1
        isFullDay:
          type: boolean
          example: true
        staffId:
          type: integer
          format: int64
          example: 1
        staffName:
          type: string
          example: "Staff1, Test"
        startDate:
          type: string
          format: date
        startTime:
          type: string
        tellerId:
          type: integer
          format: int64
          example: 1
        tellerName:
          type: string
          example: Teller1
    GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse:
      type: object
      description: GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse
      properties:
        cashierId:
          type: integer
          format: int64
          example: 1
        cashierName:
          type: string
          example: "Staff1, Test"
        cashierTransactions:
          $ref: '#/components/schemas/PageCashierTransactionData'
        netCash:
          type: number
          example: 6950.0
        officeName:
          type: string
          example: Head Office
        sumCashAllocation:
          type: number
          example: 7000.0
        sumCashSettlement:
          type: number
          example: 50.0
        sumInwardCash:
          type: number
          example: 0
        sumOutwardCash:
          type: number
          example: 0
        tellerId:
          type: integer
          format: int64
          example: 1
        tellerName:
          type: string
          example: Teller1
    GetTellersTellerIdCashiersCashiersIdTransactionsResponse:
      type: object
      description: GetTellersTellerIdCashiersCashiersIdTransactionsResponse
      properties:
        cashierId:
          type: integer
          format: int64
          example: 15
        cashierName:
          type: string
          example: "B, Ramesh"
        createdDate:
          type: string
          format: date-time
        entityId:
          type: integer
          format: int64
          example: 2
        entityType:
          type: string
          example: loans
        id:
          type: integer
          format: int64
          example: 8
        officeId:
          type: integer
          format: int64
          example: 1
        officeName:
          type: string
          example: Head Office
        tellerId:
          type: integer
          format: int64
          example: 0
        txnAmount:
          type: number
          example: 1000
        txnDate:
          type: string
          format: date
        txnNote:
          type: string
          example: "Disbursement, Loan:2-000000002,Client:1-Test 1"
        txnType:
          $ref: '#/components/schemas/CashierTxnType'
    GetTellersTellerIdCashiersCashiersIdTransactionsTemplateResponse:
      type: object
      description: GetTellersTellerIdCashiersCashiersIdTransactionsTemplateResponse
      properties:
        cashierData:
          $ref: '#/components/schemas/CashierData'
        cashierId:
          type: integer
          format: int64
          example: 1
        cashierName:
          type: string
          example: "Staff1, Test"
        currencyOptions:
          type: array
          items:
            $ref: '#/components/schemas/CurrencyData'
        endDate:
          type: string
          format: date
        officeName:
          type: string
          example: Head Office
        startDate:
          type: string
          format: date
        tellerId:
          type: integer
          format: int64
          example: 0
        tellerName:
          type: string
          example: Teller1
    GetTellersTellerIdCashiersResponse:
      type: object
      description: GetTellersTellerIdCashiersResponse
      properties:
        cashiers:
          type: array
          items:
            $ref: '#/components/schemas/CashierData'
        officeId:
          type: integer
          format: int64
          example: 1
        officeName:
          type: string
          example: Head Office
        tellerId:
          type: integer
          format: int64
          example: 1
        tellerName:
          type: string
          example: Teller1
    GetTellersTellerIdCashiersTemplateResponse:
      type: object
      description: GetTellersTellerIdCashiersTemplateResponse
      properties:
        officeId:
          type: integer
          format: int64
          example: 1
        officeName:
          type: string
          example: Head Office
        staffOptions:
          type: array
          items:
            $ref: '#/components/schemas/StaffData'
        tellerId:
          type: integer
          format: int64
          example: 1
        tellerName:
          type: string
          example: Teller1
    GetTemplatesResponse:
      type: object
      description: GetTemplatesResponse
      properties:
        entity:
          type: integer
          format: int64
          example: 1
        id:
          type: integer
          format: int64
          example: 1
        mappers:
          type: array
          items:
            $ref: '#/components/schemas/TemplateMapper'
        name:
          type: string
          example: Text
        text:
          type: string
          example: "This is a loan for {{loan.clientName}}"
        type:
          type: integer
          format: int64
          example: 0
    GetTemplatesTemplateIdResponse:
      type: object
      description: GetTemplatesTemplateIdResponse
      properties:
        entity:
          type: integer
          format: int64
          example: 1
        id:
          type: integer
          format: int64
          example: 1
        mappers:
          type: array
          items:
            $ref: '#/components/schemas/TemplateMapper'
        name:
          type: string
          example: Text
        text:
          type: string
          example: "This is a loan for {{loan.clientName}}"
        type:
          type: integer
          format: int64
          example: 0
    GetTemplatesTemplateResponse:
      type: object
      description: GetTemplatesTemplateResponse
      properties:
        entity:
          type: integer
          format: int64
          example: 1
        id:
          type: integer
          format: int64
          example: 1
        mappers:
          type: array
          items:
            $ref: '#/components/schemas/TemplateMapper'
        name:
          type: string
          example: Text
        text:
          type: string
          example: "This is a loan for {{loan.clientName}}"
        type:
          type: integer
          format: int64
          example: 0
    GetToAccountStandingInstructionSwagger:
      type: object
      properties:
        accountNo:
          type: integer
          format: int64
          example: 3
        id:
          type: integer
          format: int64
          example: 3
        productId:
          type: integer
          format: int64
          example: 4
        productName:
          type: string
          example: account overdraft
    GetToAccountTypeOptionsResponseStandingInstructionSwagger:
      type: object
      properties:
        code:
          type: string
          example: accountType.loan
        description:
          type: string
          example: Loan Account
        id:
          type: integer
          format: int32
          example: 1
    GetToAccountTypeStandingInstructionSwagger:
      type: object
      properties:
        code:
          type: string
          example: accountType.savings
        description:
          type: string
          example: Savings Account
        id:
          type: integer
          format: int32
          example: 2
    GetToClientStandingInstructionSwagger:
      type: object
      properties:
        displayName:
          type: string
          example: Test test
        id:
          type: integer
          format: int64
          example: 1
        officeId:
          type: integer
          format: int64
          example: 1
        officeName:
          type: string
          example: Head Office
    GetToOfficeOptionsResponseStandingInstructionSwagger:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: Head Office
        nameDecorated:
          type: string
          example: Head Office
    GetToOfficeStandingInstructionSwagger:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Head Office
    GetTransactionsCurrency:
      type: object
      properties:
        code:
          type: string
          example: USD
        decimalPlaces:
          type: integer
          format: int32
          example: 2
        displayLabel:
          type: string
          example: US Dollar ($)
        displaySymbol:
          type: string
          example: $
        isMultiplesOf:
          type: integer
          format: int32
          example: 0
        name:
          type: string
          example: US Dollar
        nameCode:
          type: string
          example: currency.USD
    GetTransactionsPaymentDetailData:
      type: object
      properties:
        accountNumber:
          type: string
          example: acc123
        bankNumber:
          type: string
          example: ban123
        checkNumber:
          type: string
          example: che123
        id:
          type: integer
          format: int64
          example: 1
        paymentType:
          $ref: '#/components/schemas/GetPaymentTypeData'
        receiptNumber:
          type: string
          example: rec123
        routingCode:
          type: string
          example: rou123
    GetTranscationEnumData:
      type: object
      properties:
        amountHold:
          type: boolean
          example: false
        amountRelease:
          type: boolean
          example: false
        approveTransfer:
          type: boolean
          example: false
        code:
          type: string
          example: savingsAccountTransactionType.deposit
        deposit:
          type: boolean
          example: true
        dividendPayout:
          type: boolean
          example: false
        escheat:
          type: boolean
          example: false
        feeDeduction:
          type: boolean
          example: false
        id:
          type: integer
          format: int64
          example: 1
        initiateTransfer:
          type: boolean
          example: false
        interestPosting:
          type: boolean
          example: false
        overdraftFee:
          type: boolean
          example: true
        overdraftInterest:
          type: boolean
          example: false
        rejectTransfer:
          type: boolean
          example: false
        value:
          type: string
          example: Deposit
        withdrawTransfer:
          type: boolean
          example: false
        withdrawal:
          type: boolean
          example: false
        withholdTax:
          type: boolean
          example: false
        writtenoff:
          type: boolean
          example: false
    GetTransferTypeOptionsResponseStandingInstructionSwagger:
      type: object
      properties:
        code:
          type: string
          example: accountTransferType.account.receiveTransfer
        description:
          type: string
          example: Account Transfer
        id:
          type: integer
          format: int32
          example: 1
    GetTransferTypeStandingInstructionSwagger:
      type: object
      properties:
        code:
          type: string
          example: accountTransferType.account.receiveTransfer
        description:
          type: string
          example: Account Transfer
        id:
          type: integer
          format: int32
          example: 1
    GetUserDetailsResponse:
      type: object
      description: GetUserDetailsResponse
      properties:
        accessToken:
          type: string
          example: bWlmb3M6cGFzc3dvcmQ=
        authenticated:
          type: boolean
          example: true
        officeId:
          type: integer
          format: int64
          example: 1
        officeName:
          type: string
          example: Head Office
        organisationalRole:
          $ref: '#/components/schemas/EnumOptionData'
        permissions:
          type: array
          example: ALL_FUNCTIONS
          items:
            type: string
            example: ALL_FUNCTIONS
        roles:
          type: array
          items:
            $ref: '#/components/schemas/RoleData'
        staffDisplayName:
          type: string
          example: mifosStaffDisplayName
        staffId:
          type: integer
          format: int64
          example: 1
        userId:
          type: integer
          format: int64
          example: 1
        username:
          type: string
          example: mifos
    GetUsersResponse:
      type: object
      description: GetUsersResponse
      properties:
        email:
          type: string
          example: demomfi@mifos.org
        firstname:
          type: string
          example: App
        id:
          type: integer
          format: int64
          example: 1
        lastname:
          type: string
          example: Administrator
        officeId:
          type: integer
          format: int64
          example: 1
        officeName:
          type: string
          example: Head Office
        passwordNeverExpires:
          type: boolean
          example: false
        selectedRoles:
          type: array
          items:
            $ref: '#/components/schemas/RoleData'
        staff:
          $ref: '#/components/schemas/StaffData'
        username:
          type: string
          example: mifos
    GetUsersTemplateResponse:
      type: object
      description: GetUsersTemplateResponse
      properties:
        allowedOffices:
          type: array
          items:
            $ref: '#/components/schemas/OfficeData'
        availableRoles:
          type: array
          items:
            $ref: '#/components/schemas/RoleData'
        selfServiceRoles:
          type: array
          items:
            $ref: '#/components/schemas/RoleData'
    GetUsersUserIdResponse:
      type: object
      description: GetUsersUserIdResponse
      properties:
        availableRoles:
          type: array
          items:
            $ref: '#/components/schemas/RoleData'
        email:
          type: string
          example: demomfi@mifos.org
        firstname:
          type: string
          example: App
        id:
          type: integer
          format: int64
          example: 1
        lastname:
          type: string
          example: Administrator
        officeId:
          type: integer
          format: int64
          example: 1
        officeName:
          type: string
          example: Head Office
        passwordNeverExpires:
          type: boolean
          example: false
        selectedRoles:
          type: array
          items:
            $ref: '#/components/schemas/RoleData'
        staff:
          $ref: '#/components/schemas/StaffData'
        username:
          type: string
          example: mifos
    GetWorkingDaysResponse:
      type: object
      description: GetWorkingDaysResponse
      properties:
        extendTermForDailyRepayments:
          type: boolean
          example: true
        id:
          type: integer
          format: int64
          example: 1
        recurrence:
          type: string
          example: "FREQ=WEEKLY;INTERVAL=1;BYDAY=MO,TU,WE,TH,FR"
        repaymentRescheduleType:
          $ref: '#/components/schemas/EnumOptionData'
    GetWorkingDaysTemplateResponse:
      type: object
      description: GetWorkingDaysTemplateResponse
      properties:
        repaymentRescheduleOptions:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
    GlobalConfigurationPropertyData:
      type: object
      properties:
        dateValue:
          type: string
          format: date
        description:
          type: string
        enabled:
          type: boolean
        id:
          type: integer
          format: int64
        name:
          type: string
        stringValue:
          type: string
        trapDoor:
          type: boolean
        value:
          type: integer
          format: int64
    GrantedAuthority:
      type: object
      properties:
        authority:
          type: string
    Group:
      type: object
      properties:
        accountNumberRequiresAutoGeneration:
          type: boolean
        activationDate:
          type: string
          format: date
        active:
          type: boolean
        activeClientMembers:
          type: array
          items:
            $ref: '#/components/schemas/Client'
          uniqueItems: true
        center:
          type: boolean
        childGroup:
          type: boolean
        clientMembers:
          type: array
          items:
            $ref: '#/components/schemas/Client'
          uniqueItems: true
        closed:
          type: boolean
        group:
          type: boolean
        groupLevel:
          $ref: '#/components/schemas/GroupLevel'
        groupMembers:
          type: array
          items:
            $ref: '#/components/schemas/Group'
          writeOnly: true
        id:
          type: integer
          format: int64
        new:
          type: boolean
        notActive:
          type: boolean
        notPending:
          type: boolean
        office:
          $ref: '#/components/schemas/Office'
        parent:
          $ref: '#/components/schemas/Group'
        pending:
          type: boolean
        staff:
          $ref: '#/components/schemas/Staff'
        submittedOnDate:
          type: string
          format: date
        transferInProgress:
          type: boolean
        transferInProgressOrOnHold:
          type: boolean
        transferOnHold:
          type: boolean
    GroupGeneralData:
      type: object
      properties:
        accountNo:
          type: string
        activationDate:
          type: string
          format: date
        active:
          type: boolean
        activeClientMembers:
          type: array
          items:
            $ref: '#/components/schemas/ClientData'
        availableRoles:
          type: array
          items:
            $ref: '#/components/schemas/CodeValueData'
        calendarsData:
          type: array
          items:
            $ref: '#/components/schemas/CalendarData'
        centerId:
          type: integer
          format: int64
        centerName:
          type: string
        centerOptions:
          type: array
          items:
            $ref: '#/components/schemas/CenterData'
        childGroup:
          type: boolean
        clientMembers:
          type: array
          items:
            $ref: '#/components/schemas/ClientData'
        clientOptions:
          type: array
          items:
            $ref: '#/components/schemas/ClientData'
        closureReasons:
          type: array
          items:
            $ref: '#/components/schemas/CodeValueData'
        collectionMeetingCalendar:
          $ref: '#/components/schemas/CalendarData'
        datatables:
          type: array
          items:
            $ref: '#/components/schemas/DatatableData'
        dateFormat:
          type: string
        externalId:
          type: string
        groupLevel:
          type: string
        groupRoles:
          type: array
          items:
            $ref: '#/components/schemas/GroupRoleData'
        hierarchy:
          type: string
        id:
          type: integer
          format: int64
        locale:
          type: string
        name:
          type: string
        officeId:
          type: integer
          format: int64
        officeName:
          type: string
        officeOptions:
          type: array
          items:
            $ref: '#/components/schemas/OfficeData'
        parentId:
          type: integer
          format: int64
        rowIndex:
          type: integer
          format: int32
        selectedRole:
          $ref: '#/components/schemas/GroupRoleData'
        staffId:
          type: integer
          format: int64
        staffName:
          type: string
        staffOptions:
          type: array
          items:
            $ref: '#/components/schemas/StaffData'
        status:
          $ref: '#/components/schemas/EnumOptionData'
        submittedOnDate:
          type: string
          format: date
        timeline:
          $ref: '#/components/schemas/GroupTimelineData'
    GroupLevel:
      type: object
      properties:
        center:
          type: boolean
        group:
          type: boolean
        id:
          type: integer
          format: int64
        levelName:
          type: string
        new:
          type: boolean
        parentId:
          type: integer
          format: int64
        recursable:
          type: boolean
        superParent:
          type: boolean
    GroupRoleData:
      type: object
      properties:
        clientId:
          type: integer
          format: int64
        clientName:
          type: string
        id:
          type: integer
          format: int64
        role:
          $ref: '#/components/schemas/CodeValueData'
    GroupTimelineData:
      type: object
    Grouping:
      type: object
      properties:
        entities:
          type: array
          items:
            $ref: '#/components/schemas/Entity'
        name:
          type: string
    Header:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
    HookTemplateData:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        schema:
          type: array
          items:
            $ref: '#/components/schemas/Field'
    IdDocument:
      type: object
      properties:
        idNumber:
          type: string
        idType:
          type: string
        issuerCountry:
          type: string
        otherIdDescription:
          type: string
    Image:
      type: object
      properties:
        id:
          type: integer
          format: int64
        location:
          type: string
        new:
          type: boolean
        storageType:
          type: integer
          format: int32
    InlineJobRequest:
      type: object
      description: InlineJobRequest
      properties:
        loanIds:
          type: array
          items:
            type: integer
            format: int64
    InlineJobResponse:
      type: object
      description: InlineJobResponse
      properties:
        loanIds:
          type: array
          items:
            type: integer
            format: int64
    InteropAccountData:
      type: object
      properties:
        changes:
          type: object
          additionalProperties:
            type: object
        clientId:
          type: integer
          format: int64
        commandId:
          type: integer
          format: int64
        creditBureauReportData:
          type: object
          additionalProperties:
            type: object
        glimId:
          type: integer
          format: int64
        groupId:
          type: integer
          format: int64
        gsimId:
          type: integer
          format: int64
        loanId:
          type: integer
          format: int64
        officeId:
          type: integer
          format: int64
        productId:
          type: integer
          format: int64
        resourceExternalId:
          $ref: '#/components/schemas/ExternalId'
        resourceId:
          type: integer
          format: int64
        resourceIdentifier:
          type: string
        rollbackTransaction:
          type: boolean
        savingsId:
          type: integer
          format: int64
        subResourceExternalId:
          $ref: '#/components/schemas/ExternalId'
        subResourceId:
          type: integer
          format: int64
        transactionId:
          type: string
    InteropIdentifierAccountResponseData:
      type: object
      properties:
        accountId:
          type: string
        changes:
          type: object
          additionalProperties:
            type: object
        clientId:
          type: integer
          format: int64
        commandId:
          type: integer
          format: int64
        creditBureauReportData:
          type: object
          additionalProperties:
            type: object
        glimId:
          type: integer
          format: int64
        groupId:
          type: integer
          format: int64
        gsimId:
          type: integer
          format: int64
        loanId:
          type: integer
          format: int64
        officeId:
          type: integer
          format: int64
        productId:
          type: integer
          format: int64
        resourceExternalId:
          $ref: '#/components/schemas/ExternalId'
        resourceId:
          type: integer
          format: int64
        resourceIdentifier:
          type: string
        rollbackTransaction:
          type: boolean
        savingsId:
          type: integer
          format: int64
        subResourceExternalId:
          $ref: '#/components/schemas/ExternalId'
        subResourceId:
          type: integer
          format: int64
        transactionId:
          type: string
      required:
      - accountId
    InteropIdentifierRequestData:
      type: object
      properties:
        accountId:
          type: string
        idType:
          type: string
          enum:
          - MSISDN
          - EMAIL
          - PERSONAL_ID
          - BUSINESS
          - DEVICE
          - ACCOUNT_ID
          - IBAN
          - ALIAS
        idValue:
          type: string
        subIdOrType:
          type: string
      required:
      - accountId
      - idType
      - idValue
    InteropIdentifiersResponseData:
      type: object
      properties:
        changes:
          type: object
          additionalProperties:
            type: object
        clientId:
          type: integer
          format: int64
        commandId:
          type: integer
          format: int64
        creditBureauReportData:
          type: object
          additionalProperties:
            type: object
        glimId:
          type: integer
          format: int64
        groupId:
          type: integer
          format: int64
        gsimId:
          type: integer
          format: int64
        loanId:
          type: integer
          format: int64
        officeId:
          type: integer
          format: int64
        productId:
          type: integer
          format: int64
        resourceExternalId:
          $ref: '#/components/schemas/ExternalId'
        resourceId:
          type: integer
          format: int64
        resourceIdentifier:
          type: string
        rollbackTransaction:
          type: boolean
        savingsId:
          type: integer
          format: int64
        subResourceExternalId:
          $ref: '#/components/schemas/ExternalId'
        subResourceId:
          type: integer
          format: int64
        transactionId:
          type: string
    InteropKycResponseData:
      type: object
      properties:
        birthCountry:
          type: string
        changes:
          type: object
          additionalProperties:
            type: object
        clientId:
          type: integer
          format: int64
        commandId:
          type: integer
          format: int64
        contactPhone:
          type: string
        creditBureauReportData:
          type: object
          additionalProperties:
            type: object
        dateOfBirth:
          type: string
        emailAddress:
          type: string
        gender:
          type: string
        glimId:
          type: integer
          format: int64
        groupId:
          type: integer
          format: int64
        gsimId:
          type: integer
          format: int64
        idDocument:
          type: array
          items:
            $ref: '#/components/schemas/IdDocument'
        loanId:
          type: integer
          format: int64
        nationality:
          type: string
        officeId:
          type: integer
          format: int64
        postalAddress:
          $ref: '#/components/schemas/PostalAddress'
        productId:
          type: integer
          format: int64
        resourceExternalId:
          $ref: '#/components/schemas/ExternalId'
        resourceId:
          type: integer
          format: int64
        resourceIdentifier:
          type: string
        rollbackTransaction:
          type: boolean
        savingsId:
          type: integer
          format: int64
        subResourceExternalId:
          $ref: '#/components/schemas/ExternalId'
        subResourceId:
          type: integer
          format: int64
        subjectName:
          $ref: '#/components/schemas/SubjectName'
        transactionId:
          type: string
    InteropQuoteRequestData:
      type: object
      properties:
        accountId:
          type: string
        amount:
          $ref: '#/components/schemas/MoneyData'
        amountType:
          type: string
          enum:
          - SEND
          - RECEIVE
        expiration:
          type: string
          format: date-time
        expirationLocalDate:
          type: string
          format: date
        extensionList:
          type: array
          items:
            $ref: '#/components/schemas/ExtensionData'
        fees:
          $ref: '#/components/schemas/MoneyData'
        geoCode:
          $ref: '#/components/schemas/GeoCodeData'
        note:
          type: string
        quoteCode:
          type: string
        requestCode:
          type: string
        transactionCode:
          type: string
        transactionRole:
          type: string
          enum:
          - PAYER
          - PAYEE
        transactionType:
          $ref: '#/components/schemas/InteropTransactionTypeData'
      required:
      - accountId
      - amount
      - amountType
      - quoteCode
      - transactionCode
      - transactionRole
    InteropQuoteResponseData:
      type: object
      properties:
        changes:
          type: object
          additionalProperties:
            type: object
        clientId:
          type: integer
          format: int64
        commandId:
          type: integer
          format: int64
        creditBureauReportData:
          type: object
          additionalProperties:
            type: object
        expiration:
          type: string
        extensionList:
          type: array
          items:
            $ref: '#/components/schemas/ExtensionData'
        fspCommission:
          $ref: '#/components/schemas/MoneyData'
        fspFee:
          $ref: '#/components/schemas/MoneyData'
        glimId:
          type: integer
          format: int64
        groupId:
          type: integer
          format: int64
        gsimId:
          type: integer
          format: int64
        loanId:
          type: integer
          format: int64
        officeId:
          type: integer
          format: int64
        productId:
          type: integer
          format: int64
        quoteCode:
          type: string
        resourceExternalId:
          $ref: '#/components/schemas/ExternalId'
        resourceId:
          type: integer
          format: int64
        resourceIdentifier:
          type: string
        rollbackTransaction:
          type: boolean
        savingsId:
          type: integer
          format: int64
        state:
          type: string
          enum:
          - ACCEPTED
          - REJECTED
        subResourceExternalId:
          $ref: '#/components/schemas/ExternalId'
        subResourceId:
          type: integer
          format: int64
        transactionCode:
          type: string
        transactionId:
          type: string
      required:
      - quoteCode
      - state
      - transactionCode
    InteropTransactionData:
      type: object
      properties:
        accountBalance:
          type: number
        accountId:
          type: string
        amount:
          type: number
        bookingDateTime:
          type: string
          format: date
        changes:
          type: object
          additionalProperties:
            type: object
        chargeAmount:
          type: number
        clientId:
          type: integer
          format: int64
        commandId:
          type: integer
          format: int64
        creditBureauReportData:
          type: object
          additionalProperties:
            type: object
        currency:
          type: string
        glimId:
          type: integer
          format: int64
        groupId:
          type: integer
          format: int64
        gsimId:
          type: integer
          format: int64
        loanId:
          type: integer
          format: int64
        note:
          type: string
        officeId:
          type: integer
          format: int64
        productId:
          type: integer
          format: int64
        resourceExternalId:
          $ref: '#/components/schemas/ExternalId'
        resourceId:
          type: integer
          format: int64
        resourceIdentifier:
          type: string
        rollbackTransaction:
          type: boolean
        savingTransactionId:
          type: string
        savingsId:
          type: integer
          format: int64
        subResourceExternalId:
          $ref: '#/components/schemas/ExternalId'
        subResourceId:
          type: integer
          format: int64
        transactionId:
          type: string
        transactionType:
          type: string
          enum:
          - INVALID
          - DEPOSIT
          - WITHDRAWAL
          - INTEREST_POSTING
          - WITHDRAWAL_FEE
          - ANNUAL_FEE
          - WAIVE_CHARGES
          - PAY_CHARGE
          - DIVIDEND_PAYOUT
          - ACCRUAL
          - INITIATE_TRANSFER
          - APPROVE_TRANSFER
          - WITHDRAW_TRANSFER
          - REJECT_TRANSFER
          - WRITTEN_OFF
          - OVERDRAFT_INTEREST
          - WITHHOLD_TAX
          - ESCHEAT
          - AMOUNT_HOLD
          - AMOUNT_RELEASE
        valueDateTime:
          type: string
          format: date
      required:
      - accountBalance
      - accountId
      - amount
      - bookingDateTime
      - currency
      - savingTransactionId
      - transactionType
      - valueDateTime
    InteropTransactionRequestData:
      type: object
      properties:
        accountId:
          type: string
        amount:
          $ref: '#/components/schemas/MoneyData'
        expiration:
          type: string
          format: date-time
        expirationLocalDate:
          type: string
          format: date
        extensionList:
          type: array
          items:
            $ref: '#/components/schemas/ExtensionData'
        geoCode:
          $ref: '#/components/schemas/GeoCodeData'
        note:
          type: string
        requestCode:
          type: string
        transactionCode:
          type: string
        transactionRole:
          type: string
          enum:
          - PAYER
          - PAYEE
        transactionType:
          $ref: '#/components/schemas/InteropTransactionTypeData'
      required:
      - accountId
      - amount
      - transactionCode
      - transactionRole
    InteropTransactionRequestResponseData:
      type: object
      properties:
        changes:
          type: object
          additionalProperties:
            type: object
        clientId:
          type: integer
          format: int64
        commandId:
          type: integer
          format: int64
        creditBureauReportData:
          type: object
          additionalProperties:
            type: object
        expiration:
          type: string
        extensionList:
          type: array
          items:
            $ref: '#/components/schemas/ExtensionData'
        glimId:
          type: integer
          format: int64
        groupId:
          type: integer
          format: int64
        gsimId:
          type: integer
          format: int64
        loanId:
          type: integer
          format: int64
        officeId:
          type: integer
          format: int64
        productId:
          type: integer
          format: int64
        requestCode:
          type: string
        resourceExternalId:
          $ref: '#/components/schemas/ExternalId'
        resourceId:
          type: integer
          format: int64
        resourceIdentifier:
          type: string
        rollbackTransaction:
          type: boolean
        savingsId:
          type: integer
          format: int64
        state:
          type: string
          enum:
          - ACCEPTED
          - REJECTED
        subResourceExternalId:
          $ref: '#/components/schemas/ExternalId'
        subResourceId:
          type: integer
          format: int64
        transactionCode:
          type: string
        transactionId:
          type: string
      required:
      - requestCode
      - state
      - transactionCode
    InteropTransactionTypeData:
      type: object
      properties:
        initiator:
          type: string
          enum:
          - PAYER
          - PAYEE
        initiatorType:
          type: string
          enum:
          - CONSUMER
          - AGENT
          - BUSINESS
          - DEVICE
        scenario:
          type: string
          enum:
          - DEPOSIT
          - WITHDRAWAL
          - TRANSFER
          - PAYMENT
          - REFUND
        subScenario:
          type: string
      required:
      - initiator
      - initiatorType
      - scenario
    InteropTransactionsData:
      type: object
      properties:
        changes:
          type: object
          additionalProperties:
            type: object
        clientId:
          type: integer
          format: int64
        commandId:
          type: integer
          format: int64
        creditBureauReportData:
          type: object
          additionalProperties:
            type: object
        glimId:
          type: integer
          format: int64
        groupId:
          type: integer
          format: int64
        gsimId:
          type: integer
          format: int64
        loanId:
          type: integer
          format: int64
        officeId:
          type: integer
          format: int64
        productId:
          type: integer
          format: int64
        resourceExternalId:
          $ref: '#/components/schemas/ExternalId'
        resourceId:
          type: integer
          format: int64
        resourceIdentifier:
          type: string
        rollbackTransaction:
          type: boolean
        savingsId:
          type: integer
          format: int64
        subResourceExternalId:
          $ref: '#/components/schemas/ExternalId'
        subResourceId:
          type: integer
          format: int64
        transactionId:
          type: string
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/InteropTransactionData'
    InteropTransferRequestData:
      type: object
      properties:
        accountId:
          type: string
        amount:
          $ref: '#/components/schemas/MoneyData'
        expiration:
          type: string
          format: date-time
        expirationLocalDate:
          type: string
          format: date
        extensionList:
          type: array
          items:
            $ref: '#/components/schemas/ExtensionData'
        fspCommission:
          $ref: '#/components/schemas/MoneyData'
        fspFee:
          $ref: '#/components/schemas/MoneyData'
        geoCode:
          $ref: '#/components/schemas/GeoCodeData'
        note:
          type: string
        requestCode:
          type: string
        transactionCode:
          type: string
        transactionRole:
          type: string
          enum:
          - PAYER
          - PAYEE
        transactionType:
          $ref: '#/components/schemas/InteropTransactionTypeData'
        transferCode:
          type: string
      required:
      - accountId
      - amount
      - transactionCode
      - transactionRole
      - transferCode
    InteropTransferResponseData:
      type: object
      properties:
        changes:
          type: object
          additionalProperties:
            type: object
        clientId:
          type: integer
          format: int64
        commandId:
          type: integer
          format: int64
        completedTimestamp:
          type: string
        creditBureauReportData:
          type: object
          additionalProperties:
            type: object
        expiration:
          type: string
        extensionList:
          type: array
          items:
            $ref: '#/components/schemas/ExtensionData'
        glimId:
          type: integer
          format: int64
        groupId:
          type: integer
          format: int64
        gsimId:
          type: integer
          format: int64
        loanId:
          type: integer
          format: int64
        officeId:
          type: integer
          format: int64
        productId:
          type: integer
          format: int64
        resourceExternalId:
          $ref: '#/components/schemas/ExternalId'
        resourceId:
          type: integer
          format: int64
        resourceIdentifier:
          type: string
        rollbackTransaction:
          type: boolean
        savingsId:
          type: integer
          format: int64
        state:
          type: string
          enum:
          - ACCEPTED
          - REJECTED
        subResourceExternalId:
          $ref: '#/components/schemas/ExternalId'
        subResourceId:
          type: integer
          format: int64
        transactionCode:
          type: string
        transactionId:
          type: string
        transferCode:
          type: string
      required:
      - state
      - transactionCode
      - transferCode
    IsCatchUpRunningResponse:
      type: object
      description: IsCatchUpRunningResponse
      properties:
        isCatchUpRunning:
          type: boolean
          example: true
        processingDate:
          type: string
          format: date
    JobDetailHistoryData:
      type: object
      properties:
        jobRunEndTime:
          type: string
          format: date-time
        jobRunErrorLog:
          type: string
        jobRunErrorMessage:
          type: string
        jobRunStartTime:
          type: string
          format: date-time
        status:
          type: string
        triggerType:
          type: string
        version:
          type: integer
          format: int64
    JobDetailHistoryDataSwagger:
      type: object
      properties:
        jobRunEndTime:
          type: string
          format: date-time
        jobRunStartTime:
          type: string
          format: date-time
        status:
          type: string
          example: success
        triggerType:
          type: string
          example: cron
        version:
          type: integer
          format: int64
          example: 1
    JobParameterDTO:
      type: object
      example: Update loan Summary
      properties:
        parameterName:
          type: string
        parameterValue:
          type: string
    JournalEntryCommand:
      type: object
      properties:
        accountNumber:
          type: string
        accountingRuleId:
          type: integer
          format: int64
        amount:
          type: number
        bankNumber:
          type: string
        checkNumber:
          type: string
        comments:
          type: string
        credits:
          type: array
          items:
            $ref: '#/components/schemas/SingleDebitOrCreditEntryCommand'
        currencyCode:
          type: string
        debits:
          type: array
          items:
            $ref: '#/components/schemas/SingleDebitOrCreditEntryCommand'
        officeId:
          type: integer
          format: int64
        paymentTypeId:
          type: integer
          format: int64
        receiptNumber:
          type: string
        referenceNumber:
          type: string
        routingCode:
          type: string
        transactionDate:
          type: string
          format: date
    JournalEntryData:
      type: object
      properties:
        accountNumber:
          type: string
        amount:
          type: number
        bankNumber:
          type: string
        checkNumber:
          type: string
        comments:
          type: string
        createdByUserId:
          type: integer
          format: int64
        createdByUserName:
          type: string
        createdDate:
          type: string
          format: date
        credits:
          type: array
          items:
            $ref: '#/components/schemas/CreditDebit'
        currency:
          $ref: '#/components/schemas/CurrencyData'
        currencyCode:
          type: string
        dateFormat:
          type: string
        debits:
          type: array
          items:
            $ref: '#/components/schemas/CreditDebit'
        entityId:
          type: integer
          format: int64
        entityType:
          $ref: '#/components/schemas/EnumOptionData'
        entryType:
          $ref: '#/components/schemas/EnumOptionData'
        glAccountCode:
          type: string
        glAccountId:
          type: integer
          format: int64
        glAccountName:
          type: string
        glAccountType:
          $ref: '#/components/schemas/EnumOptionData'
        id:
          type: integer
          format: int64
        locale:
          type: string
        manualEntry:
          type: boolean
        officeId:
          type: integer
          format: int64
        officeName:
          type: string
        officeRunningBalance:
          type: number
        organizationRunningBalance:
          type: number
        paymentTypeId:
          type: integer
          format: int64
        receiptNumber:
          type: string
        referenceNumber:
          type: string
        reversed:
          type: boolean
        routingCode:
          type: string
        rowIndex:
          type: integer
          format: int32
        runningBalanceComputed:
          type: boolean
        savingTransactionId:
          type: integer
          format: int64
        submittedOnDate:
          type: string
          format: date
        transactionDate:
          type: string
          format: date
        transactionDetails:
          $ref: '#/components/schemas/TransactionDetailData'
        transactionId:
          type: string
    JournalEntryTransactionItem:
      type: object
      properties:
        amount:
          type: number
          format: double
          example: 100.0
        comments:
          type: string
          example: Manual entry
        createdByUserId:
          type: integer
          format: int64
          example: 1
        createdByUserName:
          type: string
          example: mifos
        createdDate:
          type: string
          format: date
        currency:
          $ref: '#/components/schemas/CurrencyItem'
        entityId:
          type: integer
          format: int64
          example: 1
        entityType:
          $ref: '#/components/schemas/EnumOptionType'
        entryType:
          $ref: '#/components/schemas/EnumOptionType'
        glAccountCode:
          type: string
          example: 0123-4567
        glAccountId:
          type: integer
          format: int64
          example: 10
        glAccountName:
          type: string
          example: Cash Account
        glAccountType:
          $ref: '#/components/schemas/EnumOptionType'
        id:
          type: integer
          format: int64
          example: 1
        manualEntry:
          type: boolean
          example: false
        officeId:
          type: integer
          format: int64
          example: 1
        officeName:
          type: string
          example: Head Office
        officeRunningBalance:
          type: number
          example: 1234.56
        organizationRunningBalance:
          type: number
          example: 1234.56
        referenceNumber:
          type: string
          example: QWERTY
        reversed:
          type: boolean
          example: false
        runningBalanceComputed:
          type: boolean
          example: false
        submittedOnDate:
          type: string
          format: date
        transactionDate:
          type: string
          format: date
        transactionDetails:
          $ref: '#/components/schemas/TransactionDetails'
        transactionId:
          type: string
          example: L12
    LoanAccountLock:
      type: object
      properties:
        error:
          type: string
        loanId:
          type: integer
          format: int64
        lockOwner:
          type: string
          enum:
          - LOAN_COB_CHUNK_PROCESSING
          - LOAN_INLINE_COB_PROCESSING
        lockPlacedOn:
          type: string
          format: date-time
        lockPlacedOnCobBusinessDate:
          type: string
          format: date
        newLockOwner:
          type: string
          enum:
          - LOAN_COB_CHUNK_PROCESSING
          - LOAN_INLINE_COB_PROCESSING
          writeOnly: true
        stacktrace:
          type: string
        version:
          type: integer
          format: int64
    LoanProduct:
      type: object
      properties:
        accountingDisabled:
          type: boolean
        accountingType:
          type: integer
          format: int32
        accrualBasedAccountingEnabled:
          type: boolean
        allowApprovedDisbursedAmountsOverApplied:
          type: boolean
        arrearsBasedOnOriginalSchedule:
          type: boolean
        cashBasedAccountingEnabled:
          type: boolean
        closeDate:
          type: string
          format: date
        creditAllocationRules:
          type: array
          items:
            $ref: '#/components/schemas/LoanProductCreditAllocationRule'
        currency:
          $ref: '#/components/schemas/MonetaryCurrency'
        delinquencyBucket:
          $ref: '#/components/schemas/DelinquencyBucket'
        disallowExpectedDisbursements:
          type: boolean
        dueDaysForRepaymentEvent:
          type: integer
          format: int32
        enableInstallmentLevelDelinquency:
          type: boolean
        equalAmortization:
          type: boolean
        externalId:
          $ref: '#/components/schemas/ExternalId'
        fixedPrincipalPercentagePerInstallment:
          type: number
        floatingRates:
          $ref: '#/components/schemas/LoanProductFloatingRates'
        holdGuaranteeFundsEnabled:
          type: boolean
        id:
          type: integer
          format: int64
        includeInBorrowerCycle:
          type: boolean
        installmentAmountInMultiplesOf:
          type: integer
          format: int32
        interestPeriodFrequencyType:
          type: string
          enum:
          - DAYS
          - WEEKS
          - MONTHS
          - YEARS
          - WHOLE_TERM
          - INVALID
        interestRecalculationEnabled:
          type: boolean
        linkedToFloatingInterestRate:
          type: boolean
        loanProductCharges:
          type: array
          items:
            $ref: '#/components/schemas/Charge'
        loanProductConfigurableAttributes:
          $ref: '#/components/schemas/LoanProductConfigurableAttributes'
        loanProductGuaranteeDetails:
          $ref: '#/components/schemas/LoanProductGuaranteeDetails'
        loanProductRelatedDetail:
          $ref: '#/components/schemas/LoanProductRelatedDetail'
        loanProductTrancheDetails:
          $ref: '#/components/schemas/LoanProductTrancheDetails'
        maxNominalInterestRatePerPeriod:
          type: number
        maxNumberOfRepayments:
          type: integer
          format: int32
        maxPrincipalAmount:
          $ref: '#/components/schemas/Money'
        minNominalInterestRatePerPeriod:
          type: number
        minNumberOfRepayments:
          type: integer
          format: int32
        minPrincipalAmount:
          $ref: '#/components/schemas/Money'
        minimumDaysBetweenDisbursalAndFirstRepayment:
          type: integer
          format: int32
        multiDisburseLoan:
          type: boolean
        new:
          type: boolean
        nominalInterestRatePerPeriod:
          type: number
        numberOfRepayments:
          type: integer
          format: int32
        overAppliedCalculationType:
          type: string
        overAppliedNumber:
          type: integer
          format: int32
        overDueDaysForRepaymentEvent:
          type: integer
          format: int32
        paymentAllocationRules:
          type: array
          items:
            $ref: '#/components/schemas/LoanProductPaymentAllocationRule'
        periodicAccrualAccountingEnabled:
          type: boolean
        principalAmount:
          $ref: '#/components/schemas/Money'
        principalThresholdForLastInstallment:
          type: number
        productInterestRecalculationDetails:
          $ref: '#/components/schemas/LoanProductInterestRecalculationDetails'
        rates:
          type: array
          items:
            $ref: '#/components/schemas/Rate'
        repaymentStartDateType:
          type: string
          enum:
          - INVALID
          - DISBURSEMENT_DATE
          - SUBMITTED_ON_DATE
        repaymentStrategy:
          type: string
        shortName:
          type: string
        startDate:
          type: string
          format: date
        syncExpectedWithDisbursementDate:
          type: boolean
          writeOnly: true
        transactionProcessingStrategyCode:
          type: string
        transactionProcessingStrategyName:
          type: string
          writeOnly: true
        upfrontAccrualAccountingEnabled:
          type: boolean
    LoanProductBorrowerCycleVariationData:
      type: object
      properties:
        borrowerCycleNumber:
          type: integer
          format: int32
        defaultValue:
          type: number
        id:
          type: integer
          format: int64
        loanProductParamType:
          type: string
          enum:
          - INVALID
          - PRINCIPAL
          - INTERESTRATE
          - REPAYMENT
        loanProductValueConditionType:
          type: string
          enum:
          - INVALID
          - EQUAL
          - GREATERTHAN
        maxValue:
          type: number
        minValue:
          type: number
        paramType:
          $ref: '#/components/schemas/EnumOptionData'
        valueConditionType:
          $ref: '#/components/schemas/EnumOptionData'
    LoanProductConfigurableAttributes:
      type: object
      properties:
        amortizationBoolean:
          type: boolean
        amortizationType:
          type: boolean
          writeOnly: true
        arrearsToleranceBoolean:
          type: boolean
        graceOnArrearsAgeing:
          type: boolean
          writeOnly: true
        graceOnArrearsAgingBoolean:
          type: boolean
        graceOnPrincipalAndInterestPayment:
          type: boolean
          writeOnly: true
        graceOnPrincipalAndInterestPaymentBoolean:
          type: boolean
        id:
          type: integer
          format: int64
        inArrearsTolerance:
          type: boolean
          writeOnly: true
        interestCalcPeriodBoolean:
          type: boolean
        interestCalculationPeriodType:
          type: boolean
          writeOnly: true
        interestMethodBoolean:
          type: boolean
        interestType:
          type: boolean
          writeOnly: true
        loanProduct:
          $ref: '#/components/schemas/LoanProduct'
        new:
          type: boolean
        repaymentEvery:
          type: boolean
          writeOnly: true
        repaymentEveryBoolean:
          type: boolean
        transactionProcessingStrategyBoolean:
          type: boolean
        transactionProcessingStrategyCode:
          type: boolean
          writeOnly: true
    LoanProductCreditAllocationRule:
      type: object
      properties:
        allocationTypes:
          type: array
          items:
            type: string
            enum:
            - PENALTY
            - FEE
            - PRINCIPAL
            - INTEREST
        createdBy:
          type: integer
          format: int64
        createdDate:
          type: string
          format: date-time
        createdDateTime:
          type: string
          format: date-time
        id:
          type: integer
          format: int64
        lastModifiedBy:
          type: integer
          format: int64
        lastModifiedDate:
          type: string
          format: date-time
        lastModifiedDateTime:
          type: string
          format: date-time
        loanProduct:
          $ref: '#/components/schemas/LoanProduct'
        new:
          type: boolean
        transactionType:
          type: string
          enum:
          - CHARGEBACK
      required:
      - createdBy
      - createdDate
      - createdDateTime
      - lastModifiedBy
      - lastModifiedDate
      - lastModifiedDateTime
    LoanProductData:
      type: object
      properties:
        accountMovesOutOfNPAOnlyOnArrearsCompletion:
          type: boolean
        accountingMappingOptions:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/GLAccountData'
        accountingMappings:
          type: object
          additionalProperties:
            type: object
        accountingRule:
          $ref: '#/components/schemas/EnumOptionData'
        accountingRuleOptions:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
        advancedPaymentAllocationFutureInstallmentAllocationRules:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
        advancedPaymentAllocationTransactionTypes:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
        advancedPaymentAllocationTypes:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
        allowApprovedDisbursedAmountsOverApplied:
          type: boolean
        allowAttributeOverrides:
          $ref: '#/components/schemas/LoanProductConfigurableAttributes'
        allowPartialPeriodInterestCalculation:
          type: boolean
        allowVariableInstallments:
          type: boolean
        amortizationType:
          $ref: '#/components/schemas/EnumOptionData'
        amortizationTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
        annualInterestRate:
          type: number
        canDefineInstallmentAmount:
          type: boolean
        canUseForTopup:
          type: boolean
        chargeOptions:
          type: array
          items:
            $ref: '#/components/schemas/ChargeData'
        charges:
          type: array
          items:
            $ref: '#/components/schemas/ChargeData'
        closeDate:
          type: string
          format: date
        compoundingToBePostedAsTransaction:
          type: boolean
        creditAllocation:
          type: array
          items:
            $ref: '#/components/schemas/CreditAllocationData'
        creditAllocationAllocationTypes:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
        creditAllocationTransactionTypes:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
        currency:
          $ref: '#/components/schemas/CurrencyData'
        currencyOptions:
          type: array
          items:
            $ref: '#/components/schemas/CurrencyData'
        daysInMonthType:
          $ref: '#/components/schemas/EnumOptionData'
        daysInMonthTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
        daysInYearType:
          $ref: '#/components/schemas/EnumOptionData'
        daysInYearTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
        defaultDifferentialLendingRate:
          type: number
        delinquencyBucket:
          $ref: '#/components/schemas/DelinquencyBucketData'
        delinquencyBucketOptions:
          type: array
          items:
            $ref: '#/components/schemas/DelinquencyBucketData'
        description:
          type: string
        disallowExpectedDisbursements:
          type: boolean
        disbursedAmountPercentageForDownPayment:
          type: number
        dueDaysForRepaymentEvent:
          type: integer
          format: int32
        enableAutoRepaymentForDownPayment:
          type: boolean
        enableDownPayment:
          type: boolean
        enableInstallmentLevelDelinquency:
          type: boolean
        equalAmortization:
          type: boolean
        externalId:
          type: string
        feeToIncomeAccountMappings:
          type: array
          items:
            $ref: '#/components/schemas/ChargeToGLAccountMapper'
        fixedPrincipalPercentagePerInstallment:
          type: number
        floatingInterestRateCalculationAllowed:
          type: boolean
        floatingRateId:
          type: integer
          format: int32
        floatingRateName:
          type: string
        floatingRateOptions:
          type: array
          items:
            $ref: '#/components/schemas/FloatingRateData'
        fundId:
          type: integer
          format: int64
        fundName:
          type: string
        fundOptions:
          type: array
          items:
            $ref: '#/components/schemas/FundData'
        graceOnArrearsAgeing:
          type: integer
          format: int32
        graceOnInterestCharged:
          type: integer
          format: int32
        graceOnInterestPayment:
          type: integer
          format: int32
        graceOnPrincipalPayment:
          type: integer
          format: int32
        holdGuaranteeFunds:
          type: boolean
        id:
          type: integer
          format: int64
        inArrearsTolerance:
          type: number
        includeInBorrowerCycle:
          type: boolean
        installmentAmountInMultiplesOf:
          type: integer
          format: int32
        interestCalculationPeriodType:
          $ref: '#/components/schemas/EnumOptionData'
        interestCalculationPeriodTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
        interestRateDifferential:
          type: number
        interestRateFrequencyType:
          $ref: '#/components/schemas/EnumOptionData'
        interestRateFrequencyTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
        interestRatePerPeriod:
          type: number
        interestRateVariationsForBorrowerCycle:
          type: array
          items:
            $ref: '#/components/schemas/LoanProductBorrowerCycleVariationData'
        interestRecalculationCompoundingTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
        interestRecalculationData:
          $ref: '#/components/schemas/LoanProductInterestRecalculationData'
        interestRecalculationDayOfWeekTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
        interestRecalculationEnabled:
          type: boolean
        interestRecalculationFrequencyTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
        interestRecalculationNthDayTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
        interestType:
          $ref: '#/components/schemas/EnumOptionData'
        interestTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
        isAllowPartialPeriodInterestCalculation:
          type: boolean
        isEqualAmortization:
          type: boolean
        isFloatingInterestRateCalculationAllowed:
          type: boolean
        isInterestRecalculationEnabled:
          type: boolean
        isLinkedToFloatingInterestRates:
          type: boolean
        isRatesEnabled:
          type: boolean
        linkedToFloatingInterestRates:
          type: boolean
        loanProductConfigurableAttributes:
          $ref: '#/components/schemas/LoanProductConfigurableAttributes'
        loanScheduleProcessingType:
          $ref: '#/components/schemas/EnumOptionData'
        loanScheduleProcessingTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
        loanScheduleType:
          $ref: '#/components/schemas/EnumOptionData'
        loanScheduleTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
        maxDifferentialLendingRate:
          type: number
        maxInterestRatePerPeriod:
          type: number
        maxNumberOfRepayments:
          type: integer
          format: int32
        maxPrincipal:
          type: number
        maxTrancheCount:
          type: integer
          format: int32
        maximumGap:
          type: integer
          format: int32
        minDifferentialLendingRate:
          type: number
        minInterestRatePerPeriod:
          type: number
        minNumberOfRepayments:
          type: integer
          format: int32
        minPrincipal:
          type: number
        minimumDaysBetweenDisbursalAndFirstRepayment:
          type: integer
          format: int32
        minimumGap:
          type: integer
          format: int32
        multiDisburseLoan:
          type: boolean
        name:
          type: string
        numberOfRepaymentVariationsForBorrowerCycle:
          type: array
          items:
            $ref: '#/components/schemas/LoanProductBorrowerCycleVariationData'
        numberOfRepayments:
          type: integer
          format: int32
        outstandingLoanBalance:
          type: number
        overAppliedCalculationType:
          type: string
        overAppliedNumber:
          type: integer
          format: int32
        overDueDaysForRepaymentEvent:
          type: integer
          format: int32
        overdueDaysForNPA:
          type: integer
          format: int32
        paymentAllocation:
          type: array
          items:
            $ref: '#/components/schemas/AdvancedPaymentData'
        paymentChannelToFundSourceMappings:
          type: array
          items:
            $ref: '#/components/schemas/PaymentTypeToGLAccountMapper'
        paymentTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/PaymentTypeData'
        penaltyOptions:
          type: array
          items:
            $ref: '#/components/schemas/ChargeData'
        penaltyToIncomeAccountMappings:
          type: array
          items:
            $ref: '#/components/schemas/ChargeToGLAccountMapper'
        preClosureInterestCalculationStrategyOptions:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
        principal:
          type: number
        principalThresholdForLastInstallment:
          type: number
        principalVariationsForBorrowerCycle:
          type: array
          items:
            $ref: '#/components/schemas/LoanProductBorrowerCycleVariationData'
        productGuaranteeData:
          $ref: '#/components/schemas/LoanProductGuaranteeData'
        rateOptions:
          type: array
          items:
            $ref: '#/components/schemas/RateData'
        rates:
          type: array
          items:
            $ref: '#/components/schemas/RateData'
        ratesEnabled:
          type: boolean
        recurringMoratoriumOnPrincipalPeriods:
          type: integer
          format: int32
        repaymentEvery:
          type: integer
          format: int32
        repaymentFrequencyType:
          $ref: '#/components/schemas/EnumOptionData'
        repaymentFrequencyTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
        repaymentStartDateType:
          $ref: '#/components/schemas/EnumOptionData'
        repaymentStartDateTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
        rescheduleStrategyTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
        shortName:
          type: string
        startDate:
          type: string
          format: date
        status:
          type: string
        syncExpectedWithDisbursementDate:
          type: boolean
        transactionProcessingStrategyCode:
          type: string
        transactionProcessingStrategyName:
          type: string
        transactionProcessingStrategyOptions:
          type: array
          items:
            $ref: '#/components/schemas/TransactionProcessingStrategyData'
        useBorrowerCycle:
          type: boolean
        valueConditionTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
    LoanProductFloatingRates:
      type: object
      properties:
        defaultDifferentialLendingRate:
          type: number
        floatingInterestRateCalculationAllowed:
          type: boolean
        floatingRate:
          $ref: '#/components/schemas/FloatingRate'
        id:
          type: integer
          format: int64
        interestRateDifferential:
          type: number
        loanProduct:
          $ref: '#/components/schemas/LoanProduct'
        maxDifferentialLendingRate:
          type: number
        minDifferentialLendingRate:
          type: number
        new:
          type: boolean
    LoanProductGuaranteeData:
      type: object
      properties:
        id:
          type: integer
          format: int64
        mandatoryGuarantee:
          type: number
        minimumGuaranteeFromGuarantor:
          type: number
        minimumGuaranteeFromOwnFunds:
          type: number
        productId:
          type: integer
          format: int64
    LoanProductGuaranteeDetails:
      type: object
      properties:
        id:
          type: integer
          format: int64
        mandatoryGuarantee:
          type: number
        minimumGuaranteeFromGuarantor:
          type: number
        minimumGuaranteeFromOwnFunds:
          type: number
        new:
          type: boolean
    LoanProductInterestRecalculationData:
      type: object
      properties:
        allowCompoundingOnEod:
          type: boolean
        arrearsBasedOnOriginalSchedule:
          type: boolean
        compoundingToBePostedAsTransaction:
          type: boolean
        id:
          type: integer
          format: int64
        interestRecalculationCompoundingType:
          $ref: '#/components/schemas/EnumOptionData'
        isArrearsBasedOnOriginalSchedule:
          type: boolean
        isCompoundingToBePostedAsTransaction:
          type: boolean
        preClosureInterestCalculationStrategy:
          $ref: '#/components/schemas/EnumOptionData'
        productId:
          type: integer
          format: int64
        recalculationCompoundingFrequencyInterval:
          type: integer
          format: int32
        recalculationCompoundingFrequencyNthDay:
          $ref: '#/components/schemas/EnumOptionData'
        recalculationCompoundingFrequencyOnDay:
          type: integer
          format: int32
        recalculationCompoundingFrequencyType:
          $ref: '#/components/schemas/EnumOptionData'
        recalculationCompoundingFrequencyWeekday:
          $ref: '#/components/schemas/EnumOptionData'
        recalculationRestFrequencyInterval:
          type: integer
          format: int32
        recalculationRestFrequencyNthDay:
          $ref: '#/components/schemas/EnumOptionData'
        recalculationRestFrequencyOnDay:
          type: integer
          format: int32
        recalculationRestFrequencyType:
          $ref: '#/components/schemas/EnumOptionData'
        recalculationRestFrequencyWeekday:
          $ref: '#/components/schemas/EnumOptionData'
        rescheduleStrategyType:
          $ref: '#/components/schemas/EnumOptionData'
    LoanProductInterestRecalculationDetails:
      type: object
      properties:
        arrearsBasedOnOriginalSchedule:
          type: boolean
        compoundingFrequencyNthDay:
          type: integer
          format: int32
        compoundingFrequencyOnDay:
          type: integer
          format: int32
        compoundingFrequencyType:
          type: string
          enum:
          - INVALID
          - SAME_AS_REPAYMENT_PERIOD
          - DAILY
          - WEEKLY
          - MONTHLY
        compoundingFrequencyWeekday:
          type: integer
          format: int32
        compoundingInterval:
          type: integer
          format: int32
        id:
          type: integer
          format: int64
        interestRecalculationCompoundingMethod:
          type: integer
          format: int32
        isCompoundingToBePostedAsTransaction:
          type: boolean
        new:
          type: boolean
        rescheduleStrategyMethod:
          type: integer
          format: int32
        restFrequencyNthDay:
          type: integer
          format: int32
        restFrequencyOnDay:
          type: integer
          format: int32
        restFrequencyType:
          type: string
          enum:
          - INVALID
          - SAME_AS_REPAYMENT_PERIOD
          - DAILY
          - WEEKLY
          - MONTHLY
        restFrequencyWeekday:
          type: integer
          format: int32
        restInterval:
          type: integer
          format: int32
    LoanProductPaymentAllocationRule:
      type: object
      properties:
        allocationTypes:
          type: array
          items:
            type: string
            enum:
            - PAST_DUE_PENALTY
            - PAST_DUE_FEE
            - PAST_DUE_PRINCIPAL
            - PAST_DUE_INTEREST
            - DUE_PENALTY
            - DUE_FEE
            - DUE_PRINCIPAL
            - DUE_INTEREST
            - IN_ADVANCE_PENALTY
            - IN_ADVANCE_FEE
            - IN_ADVANCE_PRINCIPAL
            - IN_ADVANCE_INTEREST
        createdBy:
          type: integer
          format: int64
        createdDate:
          type: string
          format: date-time
        createdDateTime:
          type: string
          format: date-time
        futureInstallmentAllocationRule:
          type: string
          enum:
          - NEXT_INSTALLMENT
          - LAST_INSTALLMENT
          - REAMORTIZATION
        id:
          type: integer
          format: int64
        lastModifiedBy:
          type: integer
          format: int64
        lastModifiedDate:
          type: string
          format: date-time
        lastModifiedDateTime:
          type: string
          format: date-time
        loanProduct:
          $ref: '#/components/schemas/LoanProduct'
        new:
          type: boolean
        transactionType:
          type: string
          enum:
          - DEFAULT
          - REPAYMENT
          - DOWN_PAYMENT
          - MERCHANT_ISSUED_REFUND
          - PAYOUT_REFUND
          - GOODWILL_CREDIT
          - CHARGE_REFUND
          - CHARGE_ADJUSTMENT
          - WAIVE_INTEREST
          - CHARGE_PAYMENT
          - REFUND_FOR_ACTIVE_LOAN
      required:
      - createdBy
      - createdDate
      - createdDateTime
      - lastModifiedBy
      - lastModifiedDate
      - lastModifiedDateTime
    LoanProductProvisioningEntryData:
      type: object
      properties:
        amountreserved:
          type: number
        balance:
          type: number
        categoryId:
          type: integer
          format: int64
        categoryName:
          type: string
        criteriaId:
          type: integer
          format: int64
        currencyCode:
          type: string
        expenseAccount:
          type: integer
          format: int64
        expenseAccountCode:
          type: string
        expenseAccountName:
          type: string
        historyId:
          type: integer
          format: int64
        liabilityAccountCode:
          type: string
        liabilityAccountName:
          type: string
        liablityAccount:
          type: integer
          format: int64
        officeId:
          type: integer
          format: int64
        officeName:
          type: string
        overdueInDays:
          type: integer
          format: int64
        percentage:
          type: number
        productId:
          type: integer
          format: int64
        productName:
          type: string
    LoanProductRelatedDetail:
      type: object
      properties:
        allowPartialPeriodInterestCalcualtion:
          type: boolean
        amortizationMethod:
          type: string
          enum:
          - EQUAL_PRINCIPAL
          - EQUAL_INSTALLMENTS
          - INVALID
        annualNominalInterestRate:
          type: number
        arrearsTolerance:
          type: number
        currency:
          $ref: '#/components/schemas/MonetaryCurrency'
        disbursedAmountPercentageForDownPayment:
          type: number
        enableAutoRepaymentForDownPayment:
          type: boolean
        enableDownPayment:
          type: boolean
        equalAmortization:
          type: boolean
        graceOnArrearsAgeing:
          type: integer
          format: int32
        graceOnDueDate:
          type: integer
          format: int32
        graceOnInterestPayment:
          type: integer
          format: int32
        graceOnPrincipalPayment:
          type: integer
          format: int32
        inArrearsTolerance:
          $ref: '#/components/schemas/Money'
        interestCalculationPeriodMethod:
          type: string
          enum:
          - DAILY
          - SAME_AS_REPAYMENT_PERIOD
          - INVALID
        interestMethod:
          type: string
          enum:
          - DECLINING_BALANCE
          - FLAT
          - INVALID
        interestPeriodFrequencyType:
          type: string
          enum:
          - DAYS
          - WEEKS
          - MONTHS
          - YEARS
          - WHOLE_TERM
          - INVALID
        interestRecalculationEnabled:
          type: boolean
        loanScheduleProcessingType:
          type: string
          enum:
          - HORIZONTAL
          - VERTICAL
        loanScheduleType:
          type: string
          enum:
          - CUMULATIVE
          - PROGRESSIVE
        nominalInterestRatePerPeriod:
          type: number
        numberOfRepayments:
          type: integer
          format: int32
        principal:
          $ref: '#/components/schemas/Money'
        repayEvery:
          type: integer
          format: int32
        repaymentPeriodFrequencyType:
          type: string
          enum:
          - DAYS
          - WEEKS
          - MONTHS
          - YEARS
          - WHOLE_TERM
          - INVALID
    LoanProductTrancheDetails:
      type: object
      properties:
        multiDisburseLoan:
          type: boolean
    LoanTermTypeOptions:
      type: object
      properties:
        code:
          type: string
          example: loanTermType.dueDate
        id:
          type: integer
          format: int64
          example: 2
        value:
          type: string
          example: dueDate
    LoanTermVariationsData:
      type: object
      properties:
        dateValue:
          type: string
          format: date
        decimalValue:
          type: number
          example: 100.0
        id:
          type: integer
          format: int64
          example: 1
        isProcessed:
          type: boolean
          example: true
        isSpecificToInstallment:
          type: boolean
          example: true
        termType:
          $ref: '#/components/schemas/LoanTermTypeOptions'
        termVariationApplicableFrom:
          type: string
          format: date
    LocalTime:
      type: object
      properties:
        hour:
          type: integer
          format: int32
        minute:
          type: integer
          format: int32
        nano:
          type: integer
          format: int32
        second:
          type: integer
          format: int32
    LookupTableData:
      type: object
      properties:
        description:
          type: string
        entries:
          type: array
          items:
            $ref: '#/components/schemas/LookupTableEntry'
        key:
          type: string
    LookupTableEntry:
      type: object
      properties:
        score:
          type: number
          format: double
        valueFrom:
          type: integer
          format: int32
        valueTo:
          type: integer
          format: int32
    MediaType:
      type: object
      properties:
        parameters:
          type: object
          additionalProperties:
            type: string
        subtype:
          type: string
        type:
          type: string
        wildcardSubtype:
          type: boolean
        wildcardType:
          type: boolean
    MessageBodyWorkers:
      type: object
    MonetaryCurrency:
      type: object
      properties:
        code:
          type: string
        currencyInMultiplesOf:
          type: integer
          format: int32
        digitsAfterDecimal:
          type: integer
          format: int32
    Money:
      type: object
      properties:
        amount:
          type: number
        amountDefaultedToNullIfZero:
          type: number
        currency:
          $ref: '#/components/schemas/MonetaryCurrency'
        currencyCode:
          type: string
        currencyDigitsAfterDecimal:
          type: integer
          format: int32
        currencyInMultiplesOf:
          type: integer
          format: int32
        greaterThanZero:
          type: boolean
        lessThanZero:
          type: boolean
        zero:
          type: boolean
    MoneyData:
      type: object
      properties:
        amount:
          type: number
        currency:
          type: string
      required:
      - amount
      - currency
    MultiPart:
      type: object
      properties:
        bodyParts:
          type: array
          items:
            $ref: '#/components/schemas/BodyPart'
        contentDisposition:
          $ref: '#/components/schemas/ContentDisposition'
        entity:
          type: object
        headers:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          properties:
            empty:
              type: boolean
        mediaType:
          $ref: '#/components/schemas/MediaType'
        messageBodyWorkers:
          $ref: '#/components/schemas/MessageBodyWorkers'
        parameterizedHeaders:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ParameterizedHeader'
          properties:
            empty:
              type: boolean
        parent:
          $ref: '#/components/schemas/MultiPart'
        providers:
          $ref: '#/components/schemas/Providers'
    MultivaluedMapStringParameterizedHeader:
      type: object
      additionalProperties:
        type: array
        items:
          $ref: '#/components/schemas/ParameterizedHeader'
      properties:
        empty:
          type: boolean
    MultivaluedMapStringString:
      type: object
      additionalProperties:
        type: array
        items:
          type: string
      properties:
        empty:
          type: boolean
    NoteData:
      type: object
      properties:
        clientId:
          type: integer
          format: int64
        createdById:
          type: integer
          format: int64
        createdByUsername:
          type: string
        createdOn:
          type: string
          format: date-time
        depositAccountId:
          type: integer
          format: int64
        groupId:
          type: integer
          format: int64
        id:
          type: integer
          format: int64
        loanId:
          type: integer
          format: int64
        loanTransactionId:
          type: integer
          format: int64
        note:
          type: string
        noteType:
          $ref: '#/components/schemas/EnumOptionData'
        savingAccountId:
          type: integer
          format: int64
        updatedById:
          type: integer
          format: int64
        updatedByUsername:
          type: string
        updatedOn:
          type: string
          format: date-time
    Office:
      type: object
      properties:
        children:
          type: array
          items:
            $ref: '#/components/schemas/Office'
        externalId:
          $ref: '#/components/schemas/ExternalId'
        hierarchy:
          type: string
        id:
          type: integer
          format: int64
        name:
          type: string
        new:
          type: boolean
        openingDate:
          type: string
          format: date
        openingLocalDate:
          type: string
          format: date
        parent:
          $ref: '#/components/schemas/Office'
    OfficeData:
      type: object
      properties:
        dateFormat:
          type: string
        externalId:
          $ref: '#/components/schemas/ExternalId'
        hierarchy:
          type: string
        id:
          type: integer
          format: int64
        locale:
          type: string
        name:
          type: string
        nameDecorated:
          type: string
        openingDate:
          type: string
          format: date
        parentId:
          type: integer
          format: int64
        parentName:
          type: string
        rowIndex:
          type: integer
          format: int32
    PageCashierTransactionData:
      type: object
      properties:
        pageItems:
          type: array
          items:
            $ref: '#/components/schemas/CashierTransactionData'
        totalFilteredRecords:
          type: integer
          format: int32
    PageClientSearchData:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/ClientSearchData'
        empty:
          type: boolean
        first:
          type: boolean
        last:
          type: boolean
        number:
          type: integer
          format: int32
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/Pageable'
        size:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/Sort'
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
    PageExternalTransferData:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/ExternalTransferData'
        empty:
          type: boolean
        first:
          type: boolean
        last:
          type: boolean
        number:
          type: integer
          format: int32
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/Pageable'
        size:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/Sort'
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
    PageJournalEntryData:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/JournalEntryData'
        empty:
          type: boolean
        first:
          type: boolean
        last:
          type: boolean
        number:
          type: integer
          format: int32
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/Pageable'
        size:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/Sort'
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
    Pageable:
      type: object
      properties:
        offset:
          type: integer
          format: int64
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        paged:
          type: boolean
        sort:
          $ref: '#/components/schemas/Sort'
        unpaged:
          type: boolean
    PagedLocalRequestAdvancedQueryData:
      type: object
      properties:
        dateFormat:
          type: string
        dateTimeFormat:
          type: string
        locale:
          type: string
        localeObject:
          type: object
          properties:
            country:
              type: string
            displayCountry:
              type: string
            displayLanguage:
              type: string
            displayName:
              type: string
            displayScript:
              type: string
            displayVariant:
              type: string
            extensionKeys:
              type: array
              items:
                type: string
              uniqueItems: true
            iso3Country:
              type: string
            iso3Language:
              type: string
            language:
              type: string
            script:
              type: string
            unicodeLocaleAttributes:
              type: array
              items:
                type: string
              uniqueItems: true
            unicodeLocaleKeys:
              type: array
              items:
                type: string
              uniqueItems: true
            variant:
              type: string
        page:
          type: integer
          format: int32
        request:
          $ref: '#/components/schemas/AdvancedQueryData'
        size:
          type: integer
          format: int32
        sorts:
          type: array
          items:
            $ref: '#/components/schemas/SortOrder'
    PagedLocalRequestAdvancedQueryRequest:
      type: object
      properties:
        dateFormat:
          type: string
        dateTimeFormat:
          type: string
        locale:
          type: string
        localeObject:
          type: object
          properties:
            country:
              type: string
            displayCountry:
              type: string
            displayLanguage:
              type: string
            displayName:
              type: string
            displayScript:
              type: string
            displayVariant:
              type: string
            extensionKeys:
              type: array
              items:
                type: string
              uniqueItems: true
            iso3Country:
              type: string
            iso3Language:
              type: string
            language:
              type: string
            script:
              type: string
            unicodeLocaleAttributes:
              type: array
              items:
                type: string
              uniqueItems: true
            unicodeLocaleKeys:
              type: array
              items:
                type: string
              uniqueItems: true
            variant:
              type: string
        page:
          type: integer
          format: int32
        request:
          $ref: '#/components/schemas/AdvancedQueryRequest'
        size:
          type: integer
          format: int32
        sorts:
          type: array
          items:
            $ref: '#/components/schemas/SortOrder'
    PagedRequestClientTextSearch:
      type: object
      properties:
        page:
          type: integer
          format: int32
        request:
          $ref: '#/components/schemas/ClientTextSearch'
        size:
          type: integer
          format: int32
        sorts:
          type: array
          items:
            $ref: '#/components/schemas/SortOrder'
    PagedRequestExternalAssetOwnerSearchRequest:
      type: object
      properties:
        page:
          type: integer
          format: int32
        request:
          $ref: '#/components/schemas/ExternalAssetOwnerSearchRequest'
        size:
          type: integer
          format: int32
        sorts:
          type: array
          items:
            $ref: '#/components/schemas/SortOrder'
    ParameterizedHeader:
      type: object
      properties:
        parameters:
          type: object
          additionalProperties:
            type: string
        value:
          type: string
    PaymentAllocationOrder:
      type: object
      example: []
      properties:
        order:
          type: integer
          format: int32
          example: 1
        paymentAllocationRule:
          type: string
          example: DUE_PAST_PENALTY
    PaymentDetailData:
      type: object
      properties:
        accountNumber:
          type: string
          example: acc123
        bankNumber:
          type: string
          example: ban123
        checkNumber:
          type: string
          example: che123
        id:
          type: integer
          format: int64
          example: 62
        paymentType:
          $ref: '#/components/schemas/PaymentType'
        receiptNumber:
          type: string
          example: rec123
        routingCode:
          type: string
          example: rou123
    PaymentType:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 11
        isSystemDefined:
          type: boolean
          example: true
        name:
          type: string
          example: DOWN_PAYMENT
    PaymentTypeData:
      type: object
      properties:
        codeName:
          type: string
        description:
          type: string
        id:
          type: integer
          format: int64
        isCashPayment:
          type: boolean
        isSystemDefined:
          type: boolean
        name:
          type: string
        position:
          type: integer
          format: int32
    PaymentTypeToGLAccountMapper:
      type: object
      properties:
        fundSourceAccount:
          $ref: '#/components/schemas/GLAccountData'
        paymentType:
          $ref: '#/components/schemas/PaymentTypeData'
    Permission:
      type: object
      properties:
        code:
          type: string
        grouping:
          type: string
        id:
          type: integer
          format: int64
        new:
          type: boolean
    PortfolioAccountData:
      type: object
      properties:
        accountNo:
          type: string
        amtForTransfer:
          type: number
        clientId:
          type: integer
          format: int64
        clientName:
          type: string
        currency:
          $ref: '#/components/schemas/CurrencyData'
        currencyCode:
          type: string
        externalId:
          type: string
        fieldOfficerId:
          type: integer
          format: int64
        fieldOfficerName:
          type: string
        groupId:
          type: integer
          format: int64
        groupName:
          type: string
        id:
          type: integer
          format: int64
        productId:
          type: integer
          format: int64
        productName:
          type: string
    PostAccountNumberFormatsRequest:
      type: object
      description: PostAccountNumberFormatsRequest
      properties:
        accountType:
          type: integer
          format: int64
          example: 1
        prefixType:
          type: integer
          format: int64
          example: 101
    PostAccountNumberFormatsResponse:
      type: object
      description: PostAccountNumberFormatsResponse
      properties:
        resourceId:
          type: integer
          format: int64
          example: 4
    PostAccountTransfersRefundByTransferRequest:
      type: object
      description: PostAccountTransfersRefundByTransferRequest
      properties:
        dateFormat:
          type: string
          example: dd MMMM yyyy
        fromAccountId:
          type: integer
          format: int64
          example: 2
        fromAccountType:
          type: integer
          format: int32
          example: 1
        fromClientId:
          type: integer
          format: int64
          example: 1
        fromOfficeId:
          type: integer
          format: int64
          example: 1
        locale:
          type: string
          example: en
        toAccountId:
          type: integer
          format: int64
          example: 1
        toAccountType:
          type: integer
          format: int32
          example: 2
        toClientId:
          type: integer
          format: int64
          example: 1
        toOfficeId:
          type: integer
          format: int64
          example: 1
        transferAmount:
          type: number
          format: float
          example: 130
        transferDate:
          type: string
          example: 31 October 2014
        transferDescription:
          type: string
          example: Transfer refund to my savings account
    PostAccountTransfersRefundByTransferResponse:
      type: object
      description: PostAccountTransfersRefundByTransferResponse
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
        savingsId:
          type: integer
          format: int64
          example: 1
    PostAccountTransfersRequest:
      type: object
      description: PostAccountTransfersRequest
      properties:
        dateFormat:
          type: string
          example: dd MMMM yyyy
        fromAccountId:
          type: integer
          format: int64
          example: 1
        fromAccountType:
          type: integer
          format: int32
          example: 2
        fromClientId:
          type: integer
          format: int64
          example: 1
        fromOfficeId:
          type: integer
          format: int64
          example: 1
        locale:
          type: string
          example: en
        toAccountId:
          type: integer
          format: int64
          example: 2
        toAccountType:
          type: integer
          format: int32
          example: 2
        toClientId:
          type: integer
          format: int64
          example: 1
        toOfficeId:
          type: integer
          format: int64
          example: 1
        transferAmount:
          type: number
          format: float
          example: 112.45
        transferDate:
          type: string
          example: 01 August 2011
        transferDescription:
          type: string
          example: A description of the receiveTransfer
    PostAccountTransfersResponse:
      type: object
      description: PostAccountTransfersResponse
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
        savingsId:
          type: integer
          format: int64
          example: 1
    PostAccountingRulesRequest:
      type: object
      description: PostAccountingRulesRequest
      properties:
        accountToCredit:
          type: integer
          format: int64
          example: 9
        accountToDebit:
          type: integer
          format: int64
          example: 21
        description:
          type: string
          example: Employee salary
        name:
          type: string
          example: test
        officeId:
          type: integer
          format: int64
          example: 1
    PostAccountingRulesResponse:
      type: object
      description: PostAccountingRulesResponse
      properties:
        officeId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int64
          example: 1
    PostAccountsCharges:
      type: object
      properties:
        amount:
          type: integer
          format: int32
          example: 1
        chargeId:
          type: integer
          format: int64
          example: 20
    PostAccountsRequestedShares:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 35
    PostAccountsTypeAccountIdRequest:
      type: object
      description: PostAccountsTypeAccountIdRequest
      properties:
        requestedShares:
          type: array
          items:
            $ref: '#/components/schemas/PostAccountsRequestedShares'
          uniqueItems: true
    PostAccountsTypeAccountIdResponse:
      type: object
      description: PostAccountsTypeAccountIdResponse
      properties:
        resourceId:
          type: integer
          format: int64
          example: 5
    PostAccountsTypeRequest:
      type: object
      description: PostAccountsTypeRequest
      properties:
        allowDividendCalculationForInactiveClients:
          type: boolean
          example: true
        applicationDate:
          type: string
          example: 01 May 2016
        charges:
          type: array
          items:
            $ref: '#/components/schemas/PostAccountsCharges'
          uniqueItems: true
        clientId:
          type: integer
          format: int64
          example: 7
        dateFormat:
          type: string
          example: dd MMMM yyyy
        externalId:
          type: string
          example: "1"
        locale:
          type: string
          example: en
        lockinPeriodFrequency:
          type: integer
          format: int32
          example: 1
        lockinPeriodFrequencyType:
          type: integer
          format: int32
          example: 0
        minimumActivePeriod:
          type: integer
          format: int32
          example: 1
        minimumActivePeriodFrequencyType:
          type: integer
          format: int32
          example: 0
        productId:
          type: integer
          format: int64
          example: 1
        requestedShares:
          type: integer
          format: int32
          example: 100
        savingsAccountId:
          type: integer
          format: int64
          example: 13
        submittedDate:
          type: string
          example: 01 May 2016
    PostAccountsTypeResponse:
      type: object
      description: PostAccountsTypeResponse
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
    PostAdhocQuerySearchRequest:
      type: object
      description: PostAdhocQuerySearchRequest
      properties:
        dateFormat:
          type: string
          example: dd MMMM yyyy
        includeOutStandingAmountPercentage:
          type: boolean
          example: true
        includeOutstandingAmount:
          type: boolean
          example: true
        loanDateOption:
          type: string
          example: approvalDate
        loanFromDate:
          type: string
          format: date
          example: 2013-01-01
        loanToDate:
          type: string
          format: date
          example: 2014-01-27
        locale:
          type: string
          example: en
        maxOutstandingAmount:
          type: integer
          format: int64
          example: 10000
        minOutstandingAmount:
          type: integer
          format: int64
          example: 100
        outStandingAmountPercentage:
          type: integer
          format: int64
          example: 80
        outStandingAmountPercentageCondition:
          type: string
          example: <=
        outstandingAmountCondition:
          type: string
          example: between
    PostAdhocQuerySearchResponse:
      type: object
      description: PostAdhocQuerySearchResponse
      properties:
        loanOutStanding:
          type: integer
          format: int64
        loanProductName:
          type: string
          example: 01 BC3M
        officeName:
          type: string
          example: HFC
        percentage:
          type: integer
          format: int64
    PostAuthenticationRequest:
      type: object
      description: PostAuthenticationRequest
      properties:
        password:
          type: string
          example: password
        username:
          type: string
          example: mifos
      required:
      - password
      - username
    PostAuthenticationResponse:
      type: object
      description: PostAuthenticationResponse
      properties:
        authenticated:
          type: boolean
          example: true
        base64EncodedAuthenticationKey:
          type: string
          example: bWlmb3M6cGFzc3dvcmQ=
        officeId:
          type: integer
          format: int64
          example: 1
        officeName:
          type: string
          example: Head Office
        organisationalRole:
          $ref: '#/components/schemas/EnumOptionData'
        permissions:
          type: array
          example: ALL_FUNCTIONS
          items:
            type: string
            example: ALL_FUNCTIONS
        roles:
          type: array
          items:
            $ref: '#/components/schemas/RoleData'
        staffDisplayName:
          type: string
          example: "Director, Program"
        staffId:
          type: integer
          format: int64
          example: 1
        userId:
          type: integer
          format: int64
          example: 1
        username:
          type: string
          example: mifos
    PostCentersCenterIdRequest:
      type: object
      description: PostCentersCenterIdRequest
      properties:
        closureDate:
          type: string
          example: 05 May 2014
        closureReasonId:
          type: integer
          format: int64
          example: 32
        dateFormat:
          type: string
          example: dd MMMM yyyy
        locale:
          type: string
          example: en
    PostCentersCenterIdResponse:
      type: object
      description: PostCentersCenterIdResponse
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
    PostCentersRequest:
      type: object
      description: PostCentersRequest
      properties:
        active:
          type: boolean
          example: false
        name:
          type: string
          example: First Center (No groups)
        officeId:
          type: integer
          format: int64
          example: 1
    PostCentersResponse:
      type: object
      description: PostCentersResponse
      properties:
        groupId:
          type: integer
          format: int64
          example: 8
        officeId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int64
          example: 8
    PostChargesRequest:
      type: object
      description: PostChargesRequest
      properties:
        active:
          type: boolean
          example: true
        amount:
          type: number
          format: double
          example: 230.56
        chargeAppliesTo:
          type: integer
          format: int32
          example: 1
        chargeCalculationType:
          type: integer
          format: int32
          example: 1
        chargePaymentMode:
          type: integer
          format: int32
          example: 1
        chargeTimeType:
          type: integer
          format: int32
          example: 1
        currencyCode:
          type: string
          example: USD
        locale:
          type: string
          example: en
        monthDayFormat:
          type: string
          example: dd MMMM
        name:
          type: string
          example: Loan Service fee
        penalty:
          type: boolean
          example: false
    PostChargesResponse:
      type: object
      description: PostChargesResponse
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
    PostClientClientIdAddressesRequest:
      type: object
      description: PostClientClientIdAddressesRequest
      properties:
        addressLine1:
          type: string
          example: Kandivali
        addressLine2:
          type: string
          example: plot47
        addressLine3:
          type: string
          example: charkop
        city:
          type: string
          example: Mumbai
        countryId:
          type: integer
          format: int64
          example: 802
        isActive:
          type: boolean
          example: true
        postalCode:
          type: integer
          format: int64
          example: 400064
        stateProvinceId:
          type: integer
          format: int64
          example: 800
        street:
          type: string
          example: Ipca
    PostClientClientIdAddressesResponse:
      type: object
      description: PostClientClientIdAddressesResponse
      properties:
        resourceId:
          type: integer
          format: int64
          example: 15
    PostClientCollateralRequest:
      type: object
      description: PostClientCollateralRequest
      properties:
        collateralId:
          type: integer
          format: int64
          example: 1
        locale:
          type: string
          example: en
        quantity:
          type: number
          example: 10
    PostClientCollateralResponse:
      type: object
      description: PostClientCollateralResponse
      properties:
        clientId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int64
          example: 14
    PostClientsAddressRequest:
      type: object
      description: Address requests
      properties:
        addressLine1:
          type: string
          example: Kandivali
        addressLine2:
          type: string
          example: plot47
        addressLine3:
          type: string
          example: charkop
        addressTypeId:
          type: integer
          format: int64
          example: 1
        city:
          type: string
          example: Mumbai
        countryId:
          type: integer
          format: int64
          example: 802
        isActive:
          type: boolean
          example: true
        postalCode:
          type: integer
          format: int64
          example: 400064
        stateProvinceId:
          type: integer
          format: int64
          example: 800
        street:
          type: string
          example: Ipca
    PostClientsClientIdChargesChargeIdRequest:
      type: object
      description: PostClientsClientIdChargesChargeIdRequest
      properties:
        amount:
          type: integer
          format: int32
          example: 200
        dateFormat:
          type: string
          example: dd MMMM yyyy
        externalId:
          type: string
          example: 3e7791ce-aa10-11ec-b909-0242ac120002
        locale:
          type: string
          example: en
        transactionDate:
          type: string
          example: 01 September 2015
    PostClientsClientIdChargesChargeIdResponse:
      type: object
      description: PostClientsClientIdChargesChargeIdResponse
      properties:
        clientId:
          type: integer
          format: int64
          example: 189
        officeId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int64
          example: 157
        transactionId:
          type: integer
          format: int64
          example: 221
    PostClientsClientIdChargesRequest:
      type: object
      description: PostClientsClientIdChargesRequest
      properties:
        amount:
          type: integer
          format: int32
          example: 100
        chargeId:
          type: integer
          format: int64
          example: 226
        dateFormat:
          type: string
          example: dd MMMM yyyy
        dueDate:
          type: string
          example: 01 September 2015
        locale:
          type: string
          example: en
    PostClientsClientIdChargesResponse:
      type: object
      description: PostClientsClientIdChargesResponse
      properties:
        chargeId:
          type: integer
          format: int64
          example: 189
        officeId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int64
          example: 164
    PostClientsClientIdIdentifiersRequest:
      type: object
      description: PostClientsClientIdIdentifiersRequest
      properties:
        description:
          type: string
          example: Document has been verified
        documentKey:
          type: string
          example: KA-54677
        documentTypeId:
          type: integer
          format: int64
          example: 1
    PostClientsClientIdIdentifiersResponse:
      type: object
      description: PostClientsClientIdIdentifiersResponse
      properties:
        clientId:
          type: integer
          format: int64
          example: 1
        officeId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int64
          example: 3
    PostClientsClientIdRequest:
      type: object
      description: PostClientsClientIdRequest
      properties:
        activationDate:
          type: string
          example: 03 August 2021
        dateFormat:
          type: string
          example: dd MMMM yyyy
        locale:
          type: string
          example: en
    PostClientsClientIdResponse:
      type: object
      description: PostClientsClientIdResponse
      properties:
        clientId:
          type: integer
          format: int64
          example: 2
        officeId:
          type: integer
          format: int64
          example: 2
        resourceExternalId:
          type: string
          example: 123-456
        resourceId:
          type: integer
          format: int64
          example: 2
    PostClientsClientIdTransactionsTransactionIdResponse:
      type: object
      description: PostClientsClientIdTransactionsTransactionIdResponse
      properties:
        clientId:
          type: integer
          format: int64
          example: 189
        officeId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int64
          example: 222
    PostClientsDatatable:
      type: object
      description: List of PostClientsDatatable
      properties:
        data:
          type: object
          additionalProperties:
            type: object
            example: data
          example: data
        registeredTableName:
          type: string
          example: Client Beneficiary information
    PostClientsRequest:
      type: object
      description: PostClientsRequest
      properties:
        activationDate:
          type: string
          example: 04 March 2009
        active:
          type: boolean
          example: true
        address:
          type: array
          description: Address requests
          items:
            $ref: '#/components/schemas/PostClientsAddressRequest'
        datatables:
          type: array
          description: List of PostClientsDatatable
          items:
            $ref: '#/components/schemas/PostClientsDatatable'
        dateFormat:
          type: string
          example: dd MMMM yyyy
        dateOfBirth:
          type: string
          format: date
        emailAddress:
          type: string
          example: test@test.com
        externalId:
          type: string
          example: "123"
        firstname:
          type: string
          example: Client_FirstName
        fullname:
          type: string
          example: Client of group
        groupId:
          type: integer
          format: int64
          example: 1
        lastname:
          type: string
          example: Client_LastName
        legalFormId:
          type: integer
          format: int64
          example: 1
        locale:
          type: string
          example: en
        middlename:
          type: string
          example: Client_MiddleName
        mobileNo:
          type: string
          example: "+353851239876"
        officeId:
          type: integer
          format: int64
          example: 1
    PostClientsResponse:
      type: object
      description: PostClientsResponse
      properties:
        clientId:
          type: integer
          format: int64
          example: 2
        groupId:
          type: integer
          format: int64
          example: 1
        officeId:
          type: integer
          format: int64
          example: 1
        resourceExternalId:
          type: string
          example: 123-456
        resourceId:
          type: integer
          format: int64
          example: 2
    PostCodeValueDataResponse:
      type: object
      description: PostCodeValueDataResponse
      properties:
        resourceId:
          type: integer
          format: int64
          example: 4
    PostCodeValuesDataRequest:
      type: object
      description: PostCodeValuesDataRequest
      properties:
        description:
          type: string
          example: Passport information
        isActive:
          type: boolean
          example: true
        name:
          type: string
          example: Passport
        position:
          type: integer
          format: int32
          example: 0
    PostCodesRequest:
      type: object
      description: PostCodesRequest
      properties:
        name:
          type: string
          example: MyNewCode
    PostCodesResponse:
      type: object
      description: PostCodesResponse
      properties:
        resourceId:
          type: integer
          format: int64
          example: 4
    PostCollateralManagementProductRequest:
      type: object
      description: PostCollateralManagementProductRequest
      properties:
        basePrice:
          type: number
          example: 4500
        currency:
          type: string
          example: USD
        name:
          type: string
          example: gold
        pctToBase:
          type: number
          example: 80
        quality:
          type: string
          example: 22kt
        unitType:
          type: string
          example: gm
    PostCollateralManagementProductResponse:
      type: object
      description: PostCollateralManagementProductResponse
      properties:
        resourceId:
          type: integer
          format: int64
          example: 14
    PostCollectionSheetBulkRepaymentTransactions:
      type: object
      properties:
        loanId:
          type: integer
          format: int64
          example: 10
        paymentTypeId:
          type: integer
          format: int64
          example: 19
        receiptNumber:
          type: integer
          format: int64
          example: 1245356
        transactionAmount:
          type: number
          format: double
          example: 1221.36
    PostCollectionSheetChanges:
      type: object
      properties:
        SavingsTransactions:
          type: array
          example: []
          items:
            type: integer
            format: int32
        dateFormat:
          type: string
          example: dd MMMM yyyy
        loanTransactions:
          type: array
          example:
          - 15
          items:
            type: integer
            format: int32
        locale:
          type: string
          example: en
    PostCollectionSheetRequest:
      type: object
      description: PostCollectionSheetRequest
      properties:
        actualDisbursementDate:
          type: string
          example: 04 May 2014
        bulkDisbursementTransactions:
          type: array
          items:
            type: integer
            format: int32
        bulkRepaymentTransactions:
          $ref: '#/components/schemas/PostCollectionSheetBulkRepaymentTransactions'
        bulkSavingsDueTransactions:
          type: array
          items:
            type: integer
            format: int32
        dateFormat:
          type: string
          example: dd MMMM yyyy
        locale:
          type: string
          example: en
        transactionDate:
          type: string
          example: 04 May 2014
    PostCollectionSheetResponse:
      type: object
      description: PostCollectionSheetResponse
      properties:
        changes:
          $ref: '#/components/schemas/PostCollectionSheetChanges'
        groupId:
          type: integer
          format: int64
          example: 10
        resourceId:
          type: integer
          format: int64
          example: 10
    PostColumnHeaderData:
      type: object
      properties:
        code:
          type: string
          description: "Used in Code Value fields. Column name becomes: code_cd_name.\
            \ Mandatory if using type Dropdown, otherwise an error is returned."
          example: Gender
        indexed:
          type: boolean
          description: Defaults to false
          example: true
        length:
          type: integer
          format: int64
          description: "Length of the text field. Mandatory if type String is used,\
            \ otherwise an error is returned."
          example: 1653
        mandatory:
          type: boolean
          description: Defaults to false
          example: true
        name:
          type: string
          example: DOB
        type:
          type: string
          description: "Any of them: Boolean | Date | DateTime | Decimal | Dropdown\
            \ | Number | String | Text"
          example: String
        unique:
          type: boolean
          description: Defaults to false
          example: true
      required:
      - name
      - type
    PostCreateRescheduleLoansRequest:
      type: object
      description: PostCreateRescheduleLoansRequest
      properties:
        adjustedDueDate:
          type: string
          example: 20 September 2011
        dateFormat:
          type: string
          example: dd MMMM yyyy
        extraTerms:
          type: integer
          format: int32
          example: 1
        graceOnInterest:
          type: integer
          format: int32
          example: 1
        graceOnPrincipal:
          type: integer
          format: int32
          example: 1
        loanId:
          type: integer
          format: int64
          example: 1
        locale:
          type: string
          example: en
        newInterestRate:
          type: number
          example: 1.1
        rescheduleFromDate:
          type: string
          example: 20 September 2011
        rescheduleReasonComment:
          type: string
          example: comment
        rescheduleReasonId:
          type: integer
          format: int64
          example: 1
        submittedOnDate:
          type: string
          example: 20 September 2011
    PostCreateRescheduleLoansResponse:
      type: object
      description: 'PostCreateRescheduleLoansResponse '
      properties:
        clientId:
          type: integer
          format: int64
          example: 12
        loanId:
          type: integer
          format: int64
          example: 18
        officeId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int64
          example: 12
    PostDataTablesAppTableIdResponse:
      type: object
      description: 'PostDataTablesAppTableIdResponse '
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
    PostDataTablesRegisterDatatableAppTable:
      type: object
      description: PostDataTablesRegisterDatatableAppTable
    PostDataTablesRequest:
      type: object
      description: PostDataTablesRequest
      properties:
        apptableName:
          type: string
          example: m_client
        columns:
          type: array
          items:
            $ref: '#/components/schemas/PostColumnHeaderData'
        datatableName:
          type: string
          example: extra_client_details
        entitySubType:
          type: string
          example: abc
        multiRow:
          type: boolean
          description: "Allows to create multiple entries in the Data Table. Optional,\
            \ defaults to false. If this property is not provided Data Table will\
            \ allow only one entry."
          example: true
      required:
      - apptableName
      - columns
      - datatableName
    PostDataTablesResponse:
      type: object
      description: PostDataTablesResponse
      properties:
        resourceIdentifier:
          type: string
          example: extra_client_details
    PostDelinquencyBucketRequest:
      type: object
      description: PostDelinquencyBucketRequest
      properties:
        name:
          type: string
          example: Delinquent 1
        ranges:
          type: array
          example:
          - 1
          - 2
          - 3
          items:
            type: integer
            format: int64
    PostDelinquencyBucketResponse:
      type: object
      description: PostDelinquencyBucketResponse
      properties:
        resourceId:
          type: integer
          format: int32
          example: 1
    PostDelinquencyRangeRequest:
      type: object
      description: PostDelinquencyRangeRequest
      properties:
        classification:
          type: string
          example: Delinquent 1
        locale:
          type: string
          example: en
        maximumAgeDays:
          type: integer
          format: int32
          example: 3
        minimumAgeDays:
          type: integer
          format: int32
          example: 1
    PostDelinquencyRangeResponse:
      type: object
      description: PostDelinquencyRangeResponse
      properties:
        resourceId:
          type: integer
          format: int32
          example: 1
    PostEntityDatatableChecksTemplateRequest:
      type: object
      description: PostEntityDatatableChecksTemplateRequest
      properties:
        datatableName:
          type: string
          example: Additional Details
        entity:
          type: string
          example: m_loan
        productId:
          type: integer
          format: int64
          example: 1
        status:
          type: integer
          format: int64
          example: 100
    PostEntityDatatableChecksTemplateResponse:
      type: object
      description: PostEntityDatatableChecksTemplateResponse
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
    PostEntityTypeEntityIdDocumentsResponse:
      type: object
      description: PostEntityTypeEntityIdDocumentsResponse
      properties:
        resourceId:
          type: integer
          format: int64
          example: 3
        resourceIdentifier:
          type: string
          example: "3"
    PostFinancialActivityAccountsRequest:
      type: object
      description: PostFinancialActivityAccountsRequest
      properties:
        financialActivityId:
          type: integer
          format: int64
          example: 200
        glAccountId:
          type: integer
          format: int64
          example: 2
    PostFinancialActivityAccountsResponse:
      type: object
      description: PostFinancialActivityAccountsResponse
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
    PostFixedDepositAccountsAccountIdRequest:
      type: object
      description: PostFixedDepositAccountsAccountIdRequest
    PostFixedDepositAccountsAccountIdResponse:
      type: object
      description: PostFixedDepositAccountsAccountIdResponse
      properties:
        clientId:
          type: integer
          format: int64
          example: 1
        officeId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int64
          example: 1
        savingsId:
          type: integer
          format: int64
          example: 1
    PostFixedDepositAccountsRequest:
      type: object
      description: PostFixedDepositAccountsRequest
      properties:
        clientId:
          type: integer
          format: int64
          example: 1
        dateFormat:
          type: string
          example: dd MMMM yyyy
        depositAmount:
          type: number
          format: float
          example: 5000
        depositPeriod:
          type: integer
          format: int32
          example: 6
        depositPeriodFrequencyId:
          type: integer
          format: int64
          example: 2
        locale:
          type: string
          example: en
        productId:
          type: integer
          format: int64
          example: 1
        submittedOnDate:
          type: string
          example: 01 March 2014
    PostFixedDepositAccountsResponse:
      type: object
      description: PostFixedDepositAccountsResponse
      properties:
        clientId:
          type: integer
          format: int64
          example: 1
        officeId:
          type: integer
          format: int64
          example: 2
        resourceId:
          type: integer
          format: int64
          example: 1
        savingsId:
          type: integer
          format: int64
          example: 1
    PostFixedDepositProductsChartSlabs:
      type: object
      properties:
        annualInterestRate:
          type: number
          format: double
          example: 4.5
        description:
          type: string
          example: from 0 to 90 days
        fromPeriod:
          type: integer
          format: int32
          example: 0
        periodType:
          type: integer
          format: int32
          example: 1
        toPeriod:
          type: integer
          format: int32
          example: 90
    PostFixedDepositProductsCharts:
      type: object
      properties:
        chartSlabs:
          type: array
          items:
            $ref: '#/components/schemas/PostFixedDepositProductsChartSlabs'
          uniqueItems: true
        dateFormat:
          type: string
          example: dd MMMM yyyy
        fromDate:
          type: string
          example: 01 Jan 2014
        locale:
          type: string
          example: en
    PostFixedDepositProductsRequest:
      type: object
      description: PostFixedDepositProductsRequest
      properties:
        accountingRule:
          type: integer
          format: int32
          example: 1
        charts:
          type: array
          items:
            $ref: '#/components/schemas/PostFixedDepositProductsCharts'
          uniqueItems: true
        currencyCode:
          type: string
          example: USD
        description:
          type: string
          example: "Daily compounding using Daily Balance, 5% per year, 365 days in\
            \ year"
        digitsAfterDecimal:
          type: integer
          format: int32
          example: 2
        inMultiplesOf:
          type: integer
          format: int32
          example: 0
        interestCalculationDaysInYearType:
          type: integer
          format: int32
          example: 365
        interestCalculationType:
          type: integer
          format: int32
          example: 1
        interestCompoundingPeriodType:
          type: integer
          format: int32
          example: 1
        interestPostingPeriodType:
          type: integer
          format: int32
          example: 4
        locale:
          type: string
          example: en
        maxDepositTerm:
          type: integer
          format: int32
          example: 5
        maxDepositTermTypeId:
          type: integer
          format: int32
          example: 3
        minDepositTerm:
          type: integer
          format: int32
          example: 1
        minDepositTermTypeId:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: Fixed deposit product
        preClosurePenalApplicable:
          type: boolean
          example: true
        preClosurePenalInterest:
          type: number
          format: double
          example: 1.75
        preClosurePenalInterestOnTypeId:
          type: integer
          format: int32
          example: 1
        shortName:
          type: string
          example: FD01
    PostFixedDepositProductsResponse:
      type: object
      description: PostFixedDepositProductsResponse
      properties:
        resourceId:
          type: integer
          format: int32
          example: 1
    PostFloatingRatesRatePeriods:
      type: object
      properties:
        dateFormat:
          type: string
          example: dd MMMM yyyy
        fromDate:
          type: string
          example: 19 November 2015
        interestRate:
          type: number
          format: double
          example: 10
        locale:
          type: string
          example: en
    PostFloatingRatesRequest:
      type: object
      description: PostFloatingRatesRequest
      properties:
        isActive:
          type: boolean
          example: true
        isBaseLendingRate:
          type: boolean
          example: true
        name:
          type: string
          example: Floating Rate 1
        ratePeriods:
          type: array
          items:
            $ref: '#/components/schemas/PostFloatingRatesRatePeriods'
          uniqueItems: true
    PostFloatingRatesResponse:
      type: object
      description: PostFloatingRatesResponse
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
    PostFundsRequest:
      type: object
      description: PostFundsRequest
      properties:
        name:
          type: string
          example: EU Agri Fund
    PostFundsResponse:
      type: object
      description: PostFundsResponse
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
    PostGLAccountsRequest:
      type: object
      description: PostGLAccountsRequest
      properties:
        description:
          type: string
          example: Desc
        glCode:
          type: string
          example: "100001"
        manualEntriesAllowed:
          type: boolean
          example: true
        name:
          type: string
          example: Cash at Bangalore
        parentId:
          type: integer
          format: int64
          example: 1
        tagId:
          type: integer
          format: int64
          example: 10
        type:
          type: integer
          format: int32
          example: 1
        usage:
          type: integer
          format: int32
          example: 1
    PostGLAccountsResponse:
      type: object
      description: PostGLAccountsResponse
      properties:
        resourceId:
          type: integer
          format: int64
          example: 22
    PostGlClosuresRequest:
      type: object
      description: PostGLCLosuresRequest
      properties:
        closingDate:
          type: string
          format: date
        comments:
          type: string
          example: The accountants are heading for a carribean vacation
        dateFormat:
          type: string
          example: dd MMMM yyyy
        locale:
          type: string
          example: en
        officeId:
          type: integer
          format: int64
          example: 1
    PostGlClosuresResponse:
      type: object
      description: PostGlClosuresResponse
      properties:
        officeId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int64
          example: 9
    PostGroupsGroupIdClients:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
    PostGroupsGroupIdCommandUnassignStaffChanges:
      type: object
    PostGroupsGroupIdCommandUnassignStaffRequest:
      type: object
      description: PostGroupsGroupIdCommandUnassignStaffRequest
      properties:
        staffId:
          type: integer
          format: int64
          example: 1
    PostGroupsGroupIdCommandUnassignStaffResponse:
      type: object
      description: PostGroupsGroupIdCommandUnassignStaffResponse
      properties:
        changes:
          $ref: '#/components/schemas/PostGroupsGroupIdCommandUnassignStaffChanges'
        groupId:
          type: integer
          format: int64
          example: 1
        officeId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int64
          example: 1
    PostGroupsGroupIdRequest:
      type: object
      description: PostGroupsGroupIdRequest
      properties:
        clients:
          type: array
          items:
            $ref: '#/components/schemas/PostGroupsGroupIdClients'
          uniqueItems: true
        destinationGroupId:
          type: integer
          format: int64
          example: 2
    PostGroupsGroupIdResponse:
      type: object
      description: PostGroupsGroupIdResponse
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
    PostGroupsRequest:
      type: object
      description: PostGroupsRequest
      properties:
        active:
          type: boolean
          example: false
        name:
          type: string
          example: Pending Group
        officeId:
          type: integer
          format: int64
          example: 1
    PostGroupsResponse:
      type: object
      description: PostGroupsResponse
      properties:
        groupId:
          type: integer
          format: int64
          example: 2
        officeId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int64
          example: 2
    PostHolidaysHolidayIdRequest:
      type: object
      description: PostHolidaysHolidayIdRequest
    PostHolidaysHolidayIdResponse:
      type: object
      description: PostHolidaysHolidayIdResponse
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
    PostHolidaysRequest:
      type: object
      description: PostHolidaysRequest
      properties:
        dateFormat:
          type: string
          example: dd MMMM yyyy
        description:
          type: string
          example: Good Friday
        fromDate:
          type: string
          format: date
        locale:
          type: string
          example: en
        name:
          type: string
          example: Good Friday
        offices:
          type: array
          items:
            $ref: '#/components/schemas/PostHolidaysRequestOffices'
        repaymentsRescheduledTo:
          type: string
          format: date
        toDate:
          type: string
          format: date
    PostHolidaysRequestOffices:
      type: object
      properties:
        officeId:
          type: integer
          format: int64
          example: 1
    PostHolidaysResponse:
      type: object
      description: PostHolidaysResponse
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
    PostHookRequest:
      type: object
      description: PostHookRequest
      properties:
        config:
          type: array
          items:
            $ref: '#/components/schemas/Field'
        displayName:
          type: string
          example: Kremlin
        events:
          type: array
          items:
            $ref: '#/components/schemas/Event'
        isActive:
          type: boolean
          example: true
        name:
          type: string
          example: Web
        templateId:
          type: integer
          format: int64
          example: 1
    PostHookResponse:
      type: object
      description: PostHookResponse
      properties:
        resourceId:
          type: integer
          format: int64
          example: 4
    PostInitiateTransferRequest:
      type: object
      description: PostInitiateTransferRequest
      properties:
        dateFormat:
          type: string
          example: yyyy-MM-dd
        locale:
          type: string
          example: en
        ownerExternalId:
          type: string
          example: 1234567890987654321abc
        purchasePriceRatio:
          type: string
          example: "1.2345678"
        settlementDate:
          type: string
          example: 2023-5-23
        transferExternalId:
          type: string
          example: 36efeb06-d835-48a1-99eb-09bd1d348c1e
    PostInitiateTransferResponse:
      type: object
      description: PostInitiateTransferResponse
      properties:
        changes:
          $ref: '#/components/schemas/ExternalAssetOwnerTransferChangesData'
        dateFormat:
          type: string
          example: yyyy-MM-dd
        locale:
          type: string
          example: en
        resourceExternalId:
          type: string
          description: receiveTransfer external ID
          example: 36efeb06-d835-48a1-99eb-09bd1d348c1e
        resourceId:
          type: integer
          format: int64
          description: receiveTransfer ID
          example: 1
        subResourceExternalId:
          type: string
          description: loan external ID
          example: 36efeb06-d835-48a1-99eb-09bd1d348c2e
        subResourceId:
          type: integer
          format: int64
          description: loan ID
          example: 2
    PostInterestRateChartsChartIdChartSlabsIncentives:
      type: object
      properties:
        amount:
          type: number
          example: -1
        attributeName:
          type: integer
          format: int32
          example: 2
        attributeValue:
          type: string
          example: "11"
        conditionType:
          type: integer
          format: int32
          example: 2
        entityType:
          type: integer
          format: int32
          example: 2
        incentiveType:
          type: integer
          format: int32
          example: 2
    PostInterestRateChartsChartIdChartSlabsRequest:
      type: object
      description: PostInterestRateChartsChartIdChartSlabsRequest
      properties:
        annualInterestRate:
          type: number
          format: double
          example: 5
        description:
          type: string
          example: 5% interest from 1 day till 180 days of deposit
        fromPeriod:
          type: integer
          format: int32
          example: 1
        incentives:
          type: array
          items:
            $ref: '#/components/schemas/PostInterestRateChartsChartIdChartSlabsIncentives'
          uniqueItems: true
        locale:
          type: string
          example: en
        periodType:
          type: integer
          format: int32
          example: 0
        toPeriod:
          type: integer
          format: int32
          example: 180
    PostInterestRateChartsChartIdChartSlabsResponse:
      type: object
      description: PostInterestRateChartsChartIdChartSlabsResponse
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
    PostInterestRateChartsRequest:
      type: object
      description: PostInterestRateChartsRequest
      properties:
        dateFormat:
          type: string
          example: dd MMMM yyyy
        description:
          type: string
          example: This chart is applicable for year 2014
        fromDate:
          type: string
          example: 01 Jan 2014
        locale:
          type: string
          example: en
        name:
          type: string
          example: Chart - 2014
        type:
          type: string
          example: Document
    PostInterestRateChartsResponse:
      type: object
      description: PostInterestRateChartsResponse
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
    PostJournalEntriesResponse:
      type: object
      description: PostJournalEntriesResponse
      properties:
        officeId:
          type: integer
          format: int64
          description: "1"
        transactionId:
          type: string
          description: RS9MCISID4WK1ZM
    PostJournalEntriesTransactionIdRequest:
      type: object
      description: PostJournalEntriesTransactionIdRequest
      properties:
        officeId:
          type: integer
          format: int64
          description: "1"
    PostJournalEntriesTransactionIdResponse:
      type: object
      description: PostJournalEntriesTransactionIdResponse
      properties:
        officeId:
          type: integer
          format: int64
          description: "1"
    PostLinkDelinkAccountsToFromPocketResponse:
      type: object
      description: PostLinkDelinkAccountsToFromPocketResponse
      properties:
        resourceId:
          type: integer
          format: int32
          example: 6
    PostLoanChanges:
      type: object
      properties:
        removedEntityIds:
          type: array
          example:
          - 21
          - 22
          items:
            type: integer
            format: int32
    PostLoanProductsRequest:
      type: object
      description: PostLoanProductsRequest
      properties:
        accountMovesOutOfNPAOnlyOnArrearsCompletion:
          type: boolean
          example: false
        accountingRule:
          type: integer
          format: int32
          example: 3
        allowApprovedDisbursedAmountsOverApplied:
          type: boolean
          example: true
        allowAttributeOverrides:
          $ref: '#/components/schemas/AllowAttributeOverrides'
        allowPartialPeriodInterestCalcualtion:
          type: boolean
          example: true
        allowVariableInstallments:
          type: boolean
          example: false
        amortizationType:
          type: integer
          format: int32
          example: 1
        canDefineInstallmentAmount:
          type: boolean
          example: true
        canUseForTopup:
          type: boolean
          example: false
        chargeOffExpenseAccountId:
          type: integer
          format: int64
          example: 12
        chargeOffFraudExpenseAccountId:
          type: integer
          format: int64
          example: 13
        charges:
          type: array
          items:
            $ref: '#/components/schemas/ChargeData'
        closeDate:
          type: string
          example: 10 July 2022
        creditAllocation:
          type: array
          items:
            $ref: '#/components/schemas/CreditAllocationData'
        currencyCode:
          type: string
          example: USD
        dateFormat:
          type: string
          example: dd MMMM yyyy
        daysInMonthType:
          type: integer
          format: int32
          example: 1
        daysInYearType:
          type: integer
          format: int32
          example: 1
        delinquencyBucketId:
          type: integer
          format: int64
          example: 1
        description:
          type: string
          example: non-interest bearing product
        digitsAfterDecimal:
          type: integer
          format: int32
          example: 2
        disallowExpectedDisbursements:
          type: boolean
          example: true
        disbursedAmountPercentageForDownPayment:
          type: number
          example: 5.5
        dueDaysForRepaymentEvent:
          type: integer
          format: int32
          example: 3
        enableAutoRepaymentForDownPayment:
          type: boolean
          example: false
        enableDownPayment:
          type: boolean
          example: false
        enableInstallmentLevelDelinquency:
          type: boolean
          example: false
        externalId:
          type: string
          example: 2075e308-d4a8-44d9-8203-f5a947b8c2f4
        feeToIncomeAccountMappings:
          type: array
          items:
            $ref: '#/components/schemas/GetLoanFeeToIncomeAccountMappings'
        fixedPrincipalPercentagePerInstallment:
          type: number
          example: 5.5
        fundId:
          type: integer
          format: int64
          example: 3
        fundSourceAccountId:
          type: integer
          format: int64
          example: 4
        goodwillCreditAccountId:
          type: integer
          format: int64
          example: 48
        graceOnArrearsAgeing:
          type: integer
          format: int32
          example: 3
        graceOnInterestPayment:
          type: integer
          format: int32
          example: 3
        graceOnPrincipalPayment:
          type: integer
          format: int32
          example: 3
        holdGuaranteeFunds:
          type: boolean
          example: false
        inArrearsTolerance:
          type: integer
          format: int32
          example: 90
        inMultiplesOf:
          type: integer
          format: int32
          example: 1
        includeInBorrowerCycle:
          type: boolean
          example: false
        incomeFromChargeOffFeesAccountId:
          type: integer
          format: int64
          example: 11
        incomeFromChargeOffInterestAccountId:
          type: integer
          format: int64
          example: 20
        incomeFromChargeOffPenaltyAccountId:
          type: integer
          format: int64
          example: 11
        incomeFromFeeAccountId:
          type: integer
          format: int64
          example: 37
        incomeFromGoodwillCreditFeesAccountId:
          type: integer
          format: int64
          example: 11
        incomeFromGoodwillCreditInterestAccountId:
          type: integer
          format: int64
          example: 20
        incomeFromGoodwillCreditPenaltyAccountId:
          type: integer
          format: int64
          example: 11
        incomeFromPenaltyAccountId:
          type: integer
          format: int64
          example: 35
        incomeFromRecoveryAccountId:
          type: integer
          format: int64
          example: 15
        installmentAmountInMultiplesOf:
          type: integer
          format: int32
          example: 1
        interestCalculationPeriodType:
          type: integer
          format: int32
          example: 1
        interestOnLoanAccountId:
          type: integer
          format: int64
          example: 34
        interestRateFrequencyType:
          type: integer
          format: int32
          example: 2
        interestRatePerPeriod:
          type: number
          format: double
          example: 1.75
        interestRateVariationsForBorrowerCycle:
          type: array
          example: []
          items:
            type: integer
            format: int32
        interestRecalculationCompoundingMethod:
          type: integer
          format: int32
          example: 1
        interestType:
          type: integer
          format: int32
          example: 0
        isEqualAmortization:
          type: boolean
          example: false
        isInterestRecalculationEnabled:
          type: boolean
          example: false
        isLinkedToFloatingInterestRates:
          type: boolean
          example: false
        loanPortfolioAccountId:
          type: integer
          format: int64
          example: 8
        loanScheduleProcessingType:
          type: string
          example: HORIZONTAL
        loanScheduleType:
          type: string
          example: CUMULATIVE
        locale:
          type: string
          example: en_GB
        maxInterestRatePerPeriod:
          type: number
          format: double
          example: 23.4
        maxNumberOfRepayments:
          type: integer
          format: int32
          example: 1
        maxPrincipal:
          type: number
          format: double
          example: 15000.0
        maxTrancheCount:
          type: integer
          format: int32
          example: 3
        minInterestRatePerPeriod:
          type: number
          format: double
          example: 0
        minNumberOfRepayments:
          type: integer
          format: int32
          example: 1
        minPrincipal:
          type: number
          format: double
          example: 5000.0
        minimumDaysBetweenDisbursalAndFirstRepayment:
          type: integer
          format: int32
          example: 30
        multiDisburseLoan:
          type: boolean
          example: true
        name:
          type: string
          example: LP Accrual Accounting
        numberOfRepaymentVariationsForBorrowerCycle:
          type: array
          example: []
          items:
            type: integer
            format: int32
        numberOfRepayments:
          type: integer
          format: int32
          example: 12
        outstandingLoanBalance:
          type: number
          format: double
          example: 36000.0
        overAppliedCalculationType:
          type: string
          example: percentage
        overAppliedNumber:
          type: integer
          format: int32
          example: 50
        overDueDaysForRepaymentEvent:
          type: integer
          format: int32
          example: 3
        overdueDaysForNPA:
          type: integer
          format: int32
          example: 179
        overpaymentLiabilityAccountId:
          type: integer
          format: int64
          example: 2
        paymentAllocation:
          type: array
          items:
            $ref: '#/components/schemas/AdvancedPaymentData'
        paymentChannelToFundSourceMappings:
          type: array
          items:
            $ref: '#/components/schemas/GetLoanPaymentChannelToFundSourceMappings'
        penaltyToIncomeAccountMappings:
          type: array
          items:
            $ref: '#/components/schemas/ChargeToGLAccountMapper'
        preClosureInterestCalculationStrategy:
          type: integer
          format: int32
          example: 1
        principal:
          type: number
          format: double
          example: 10000.0
        principalThresholdForLastInstallment:
          type: integer
          format: int32
          example: 50
        principalVariationsForBorrowerCycle:
          type: array
          example: []
          items:
            type: integer
            format: int32
        rates:
          type: array
          items:
            $ref: '#/components/schemas/RateData'
        recalculationCompoundingFrequencyInterval:
          type: integer
          format: int32
          example: 1
        recalculationCompoundingFrequencyOnDayType:
          type: integer
          format: int32
          example: 1
        recalculationCompoundingFrequencyType:
          type: integer
          format: int32
          example: 1
        recalculationRestFrequencyInterval:
          type: integer
          format: int32
          example: 1
        recalculationRestFrequencyType:
          type: integer
          format: int32
          example: 50
        receivableFeeAccountId:
          type: integer
          format: int64
          example: 11
        receivableInterestAccountId:
          type: integer
          format: int64
          example: 9
        receivablePenaltyAccountId:
          type: integer
          format: int64
          example: 10
        repaymentEvery:
          type: integer
          format: int32
          example: 1
        repaymentFrequencyType:
          type: integer
          format: int64
          example: 2
        repaymentStartDateType:
          type: integer
          format: int32
          example: 1
        rescheduleStrategyMethod:
          type: integer
          format: int32
          example: 2
        shortName:
          type: string
          example: LPAA
        startDate:
          type: string
          example: 10 July 2022
        transactionProcessingStrategyCode:
          type: string
          example: mifos-standard-strategy
        transfersInSuspenseAccountId:
          type: integer
          format: int64
          example: 5
        useBorrowerCycle:
          type: boolean
          example: false
        writeOffAccountId:
          type: integer
          format: int64
          example: 41
    PostLoanProductsResponse:
      type: object
      description: PostLoanProductsResponse
      properties:
        resourceId:
          type: integer
          format: int64
          example: 3
    PostLoansDelinquencyActionRequest:
      type: object
      description: PostLoansDelinquencyActionRequest
      properties:
        action:
          type: string
          example: pause
        dateFormat:
          type: string
          example: yyyy-MM-dd
        endDate:
          type: string
          example: 2013-02-20
        locale:
          type: string
          example: en
        startDate:
          type: string
          example: 2013-01-02
    PostLoansDelinquencyActionResponse:
      type: object
      description: PostLoansDelinquencyActionResponse
      properties:
        clientId:
          type: integer
          format: int64
          example: 1
        officeId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int64
          example: 1
    PostLoansDisbursementData:
      type: object
      description: List of PostLoansDisbursementData
      properties:
        expectedDisbursementDate:
          type: string
          format: date
        principal:
          type: number
          format: double
          example: 1000.0
    PostLoansLoanIdChanges:
      type: object
      description: PostLoansLoanIdChanges
      properties:
        approvedOnDate:
          type: string
          example: 28 June 2022
        dateFormat:
          type: string
          example: dd MMMM yyyy
        locale:
          type: string
          example: en
        note:
          type: string
          example: Loan approval note
        status:
          $ref: '#/components/schemas/PostLoansLoanIdStatus'
    PostLoansLoanIdChargesChargeIdChanges:
      type: object
      properties:
        amount:
          type: number
          format: double
          example: 100.0
        chargeId:
          type: integer
          format: int64
          example: 1
        date:
          type: number
          format: double
        dueDate:
          type: string
          format: date
        externalId:
          type: string
          example: 786444UUUYYH7
        feeChargesPortion:
          type: number
          format: double
          example: 100.0
        id:
          type: integer
          format: int64
          example: 1
        installmentNumber:
          type: integer
          format: int64
          example: 1
        interestPortion:
          type: number
          format: double
          example: 100.0
        locale:
          type: string
          example: en
        outstandingLoanBalance:
          type: number
          format: double
          example: 100.0
        penaltyChargesPortion:
          type: number
          format: double
          example: 100.0
        principalPortion:
          type: number
          format: double
          example: 100.0
        transactionDate:
          type: string
          format: date
    PostLoansLoanIdChargesChargeIdRequest:
      type: object
      description: PostLoansLoanIdChargesChargeIdRequest
      properties:
        accountNumber:
          type: string
          example: acc123
        amount:
          type: number
          format: double
          example: 100.0
        bankNumber:
          type: string
          example: ban123
        chargeId:
          type: integer
          format: int64
          example: 1
        checkNumber:
          type: string
          example: che123
        dateFormat:
          type: string
          example: dd MMMM yyyy
        dueDate:
          type: string
          example: 19 September 2013
        externalId:
          type: string
          example: 786444UUUYYH7
        installmentNumber:
          type: integer
          format: int64
          example: 1
        locale:
          type: string
          example: en
        note:
          type: string
          example: An optional note
        paymentTypeId:
          type: integer
          format: int64
          example: 3
        receiptNumber:
          type: string
          example: rec123
        routingCode:
          type: string
          example: rou123
        transactionDate:
          type: string
          example: 19 September 2013
    PostLoansLoanIdChargesChargeIdResponse:
      type: object
      description: PostLoansLoanIdChargesChargeIdResponse
      properties:
        changes:
          $ref: '#/components/schemas/PostLoansLoanIdChargesChargeIdChanges'
        clientId:
          type: integer
          format: int64
          example: 1
        loanId:
          type: integer
          format: int64
          example: 6
        officeId:
          type: integer
          format: int64
          example: 1
        resourceExternalId:
          type: string
          example: 786444UUUYYH7
        resourceId:
          type: integer
          format: int64
          example: 12
        savingsId:
          type: integer
          format: int64
          example: 1
        subResourceExternalId:
          type: string
          example: 786444UUUYYH7
        subResourceId:
          type: integer
          format: int64
          example: 12
    PostLoansLoanIdChargesRequest:
      type: object
      description: ' PostLoansLoanIdChargesRequest'
      properties:
        amount:
          type: number
          format: double
          example: 100.0
        chargeId:
          type: integer
          format: int64
          example: 2
        dateFormat:
          type: string
          example: dd MMMM yyyy
        dueDate:
          type: string
          example: 29 April 2013
        externalId:
          type: string
          example: 786444UUUYYH7
        locale:
          type: string
          example: en
    PostLoansLoanIdChargesResponse:
      type: object
      description: ' PostLoansLoanIdChargesResponse'
      properties:
        clientId:
          type: integer
          format: int64
          example: 1
        loanId:
          type: integer
          format: int64
          example: 1
        officeId:
          type: integer
          format: int64
          example: 1
        resourceExternalId:
          type: string
          example: 95174ff9-1a75-4d72-a413-6f9b1cb988b7
        resourceId:
          type: integer
          format: int64
          example: 31
    PostLoansLoanIdCollateralsRequest:
      type: object
      description: PostLoansLoanIdCollateralsRequest
      properties:
        collateralTypeId:
          type: integer
          format: int64
          example: 9
    PostLoansLoanIdCollateralsResponse:
      type: object
      description: PostLoansLoanIdCollateralsResponse
      properties:
        resourceId:
          type: integer
          format: int64
          example: 12
    PostLoansLoanIdDisbursementData:
      type: object
      description: List of PostLoansLoanIdDisbursementData
      properties:
        expectedDisbursementDate:
          type: string
          format: date
        principal:
          type: number
          format: double
          example: 22000
    PostLoansLoanIdRequest:
      type: object
      description: PostLoansLoanIdRequest
      properties:
        actualDisbursementDate:
          type: string
          example: 28 June 2022
        approvedLoanAmount:
          type: number
          example: 1000
        approvedOnDate:
          type: string
          example: 28 June 2022
        assignmentDate:
          type: string
          example: 02 September 2014
        dateFormat:
          type: string
          example: dd MMMM yyyy
        disbursementData:
          type: array
          description: List of PostLoansLoanIdDisbursementData
          items:
            $ref: '#/components/schemas/PostLoansLoanIdDisbursementData'
        expectedDisbursementDate:
          type: string
          example: 28 June 2022
        externalId:
          type: string
          example: 3e7791ce-aa10-11ec-b909-0242ac120002
        fromLoanOfficerId:
          type: integer
          format: int32
        locale:
          type: string
          example: en
        note:
          type: string
          example: Description of disbursement details.
        paymentTypeId:
          type: integer
          format: int32
          example: 3
        rejectedOnDate:
          type: string
          example: 28 June 2022
        toLoanOfficerId:
          type: integer
          format: int32
          example: 2
        transactionAmount:
          type: number
          example: 5000.33
        unassignedDate:
          type: string
          example: 02 September 2014
        withdrawnOnDate:
          type: string
          example: 28 June 2022
    PostLoansLoanIdResponse:
      type: object
      description: PostLoansLoanIdResponse
      properties:
        changes:
          $ref: '#/components/schemas/PostLoansLoanIdChanges'
        clientId:
          type: integer
          format: int64
          example: 6
        loanId:
          type: integer
          format: int64
          example: 3
        officeId:
          type: integer
          format: int32
          example: 2
        resourceExternalId:
          type: string
          example: 95174ff9-1a75-4d72-a413-6f9b1cb988b7
        resourceId:
          type: integer
          format: int64
          example: 3
        subResourceExternalId:
          type: string
          example: b4f8fefd-a14d-4487-8d80-6f2fb0e07836
        subResourceId:
          type: integer
          format: int64
          example: 22
    PostLoansLoanIdScheduleRequest:
      type: object
      description: PostLoansLoanIdScheduleRequest
    PostLoansLoanIdScheduleResponse:
      type: object
      description: PostLoansLoanIdScheduleResponse
      properties:
        changes:
          $ref: '#/components/schemas/PostLoanChanges'
        loanId:
          type: integer
          format: int64
          example: 1
    PostLoansLoanIdStatus:
      type: object
      description: PostLoansLoanIdStatus
      properties:
        active:
          type: boolean
          example: true
        closed:
          type: boolean
          example: false
        closedObligationsMet:
          type: boolean
          example: false
        closedRescheduled:
          type: boolean
          example: false
        closedWrittenOff:
          type: boolean
          example: false
        code:
          type: string
          example: loanStatusType.approved
        id:
          type: integer
          format: int64
          example: 300
        overpaid:
          type: boolean
          example: false
        pendingApproval:
          type: boolean
          example: false
        value:
          type: string
          example: Approved
        waitingForDisbursal:
          type: boolean
          example: false
    PostLoansLoanIdTransactionsRequest:
      type: object
      description: PostLoansLoanIdTransactionsRequest
      properties:
        accountNumber:
          type: string
          example: acc123
        bankNumber:
          type: string
          example: ban123
        chargeOffReasonId:
          type: integer
          format: int64
          example: 1
        checkNumber:
          type: string
          example: che123
        dateFormat:
          type: string
          example: dd MMMM yyyy
        dueDate:
          type: string
          example: 28 June 2022
        externalId:
          type: string
          example: 3e7791ce-aa10-11ec-b909-0242ac120002
        frequency:
          type: string
          example: frequency
        loanChargeId:
          type: integer
          format: int64
          example: 3
        locale:
          type: string
          example: en_GB
        note:
          type: string
          example: An optional note about why your adjusting or changing the transaction.
        numberOfInstallments:
          type: integer
          format: int32
        paymentTypeId:
          type: integer
          format: int64
          example: 3
        receiptNumber:
          type: string
          example: rec123
        reversalExternalId:
          type: string
          example: 3f7791cf-bb10-11ec-b909-0242ac120012
        routingCode:
          type: string
          example: rou123
        startDate:
          type: string
          example: startDate
        transactionAmount:
          type: number
          format: double
          example: 50000.0
        transactionDate:
          type: string
          example: 28 June 2022
        writeoffReasonId:
          type: integer
          format: int64
          example: 1
    PostLoansLoanIdTransactionsResponse:
      type: object
      description: PostLoansLoanIdTransactionsResponse
      properties:
        changes:
          $ref: '#/components/schemas/PostLoansLoanIdTransactionsResponseChanges'
        clientId:
          type: integer
          format: int64
          example: 1
        loanId:
          type: integer
          format: int64
          example: 1
        officeId:
          type: integer
          format: int64
          example: 1
        resourceExternalId:
          type: string
          example: 95174ff9-1a75-4d72-a413-6f9b1cb988b7
        resourceId:
          type: integer
          format: int64
          example: 22
        subResourceExternalId:
          type: string
          example: 95174ff9-1a75-4d72-a413-6f9b1cb988b7
        subResourceId:
          type: integer
          format: int64
          example: 22
    PostLoansLoanIdTransactionsResponseChanges:
      type: object
      properties:
        dateFormat:
          type: string
          example: dd MMMM yyyy
        externalId:
          type: string
          example: 4ff9b1cb988b7
        locale:
          type: string
          example: en_GB
        note:
          type: string
          example: An optional note about why your adjusting or changing the transaction.
        paymentTypeId:
          type: integer
          format: int64
          example: 1
        reversalExternalId:
          type: string
          example: 95174ff9-1a75-4d72-a413-6f9b1cb988b7
        transactionAmount:
          type: string
          example: "50,000.00"
        transactionDate:
          type: string
          example: 28 June 2022
    PostLoansLoanIdTransactionsTransactionIdRequest:
      type: object
      description: PostLoansLoanIdTransactionsTransactionIdRequest
      properties:
        dateFormat:
          type: string
          example: dd MMMM yyyy
        externalId:
          type: string
          example: 4ff9b1cb988b7
        locale:
          type: string
          example: en_GB
        note:
          type: string
          example: An optional note about why your adjusting or changing the transaction.
        paymentTypeId:
          type: integer
          format: int64
          example: 1
        reversalExternalId:
          type: string
          example: 95174ff9-1a75-4d72-a413-6f9b1cb988b7
        transactionAmount:
          type: number
          format: double
        transactionDate:
          type: string
          example: 28 June 2022
    PostLoansRepaymentSchedulePeriods:
      type: object
      properties:
        dueDate:
          type: string
          format: date
        feeChargesDue:
          type: integer
          format: int64
          example: 0
        feeChargesOutstanding:
          type: integer
          format: int64
          example: 0
        period:
          type: integer
          format: int32
          example: 0
        principalDisbursed:
          type: integer
          format: int64
          example: 100000
        principalLoanBalanceOutstanding:
          type: integer
          format: int64
          example: 100000
        totalActualCostOfLoanForPeriod:
          type: integer
          format: int64
          example: 0
        totalDueForPeriod:
          type: integer
          format: int64
          example: 0
        totalOriginalDueForPeriod:
          type: integer
          format: int64
          example: 0
        totalOutstandingForPeriod:
          type: integer
          format: int64
          example: 0
        totalOverdue:
          type: integer
          format: int64
          example: 0
    PostLoansRequest:
      type: object
      description: PostLoansRequest
      properties:
        amortizationType:
          type: integer
          format: int32
          example: 1
        clientId:
          type: integer
          format: int64
          example: 1
        dateFormat:
          type: string
          example: dd MMMM yyyy
        daysInYearType:
          type: integer
          format: int32
          enum:
          - null
          example: 360
        disbursementData:
          type: array
          description: List of PostLoansDisbursementData
          items:
            $ref: '#/components/schemas/PostLoansDisbursementData'
        expectedDisbursementDate:
          type: string
          example: 20 September 2011
        externalId:
          type: string
          example: 786444UUUYYH7
        fixedPrincipalPercentagePerInstallment:
          type: number
          example: 5.5
        graceOnArrearsAgeing:
          type: integer
          format: int32
          example: 1
        graceOnInterestCharged:
          type: integer
          format: int32
          example: 1
        graceOnInterestPayment:
          type: integer
          format: int32
          example: 1
        graceOnPrincipalPayment:
          type: integer
          format: int32
          example: 1
        interestCalculationPeriodType:
          type: integer
          format: int32
          example: 1
        interestRatePerPeriod:
          type: number
          example: 2
        interestType:
          type: integer
          format: int32
          example: 0
        loanScheduleProcessingType:
          type: string
          example: HORIZONTAL
        loanTermFrequency:
          type: integer
          format: int32
          example: 12
        loanTermFrequencyType:
          type: integer
          format: int32
          example: 2
        loanType:
          type: string
          example: individual
        locale:
          type: string
          example: en_GB
        maxOutstandingLoanBalance:
          type: number
          description: Maximum allowed outstanding balance
        numberOfRepayments:
          type: integer
          format: int32
          example: 12
        principal:
          type: number
          example: 1000.0
        productId:
          type: integer
          format: int64
          example: 1
        repaymentEvery:
          type: integer
          format: int32
          example: 1
        repaymentFrequencyType:
          type: integer
          format: int32
          example: 2
        repaymentsStartingFromDate:
          type: string
          format: date
        submittedOnDate:
          type: string
          example: 20 September 2011
        transactionProcessingStrategyCode:
          type: string
          example: mifos-standard-strategy
    PostLoansResponse:
      type: object
      description: PostLoansResponse
      properties:
        clientId:
          type: integer
          format: int64
          example: 1
        currency:
          $ref: '#/components/schemas/GetLoansLoanIdCurrency'
        loanId:
          type: integer
          format: int64
          example: 1
        loanTermInDays:
          type: integer
          format: int32
          example: 366
        officeId:
          type: integer
          format: int64
          example: 2
        periods:
          type: array
          items:
            $ref: '#/components/schemas/PostLoansRepaymentSchedulePeriods'
          uniqueItems: true
        resourceExternalId:
          type: string
          example: 95174ff9-1a75-4d72-a413-6f9b1cb988b7
        resourceId:
          type: integer
          format: int64
          example: 1
        totalFeeChargesCharged:
          type: integer
          format: int64
          example: 0
        totalInterestCharged:
          type: number
          format: double
          example: 13471.52
        totalOutstanding:
          type: integer
          format: int64
          example: 0
        totalPenaltyChargesCharged:
          type: integer
          format: int64
          example: 0
        totalPrincipalDisbursed:
          type: integer
          format: int64
          example: 100000
        totalPrincipalExpected:
          type: integer
          format: int64
          example: 100000
        totalPrincipalPaid:
          type: integer
          format: int64
          example: 0
        totalRepayment:
          type: integer
          format: int64
          example: 0
        totalRepaymentExpected:
          type: number
          format: double
          example: 113471.52
        totalWaived:
          type: integer
          format: int64
          example: 0
        totalWrittenOff:
          type: integer
          format: int64
          example: 0
    PostMakerCheckersResponse:
      type: object
      description: PostMakerCheckersResponse
      properties:
        auditId:
          type: integer
          format: int64
          example: 1
    PostNewShareApplicationResponse:
      type: object
      description: PostNewShareApplicationResponse
      properties:
        resourceId:
          type: integer
          format: int32
          example: 12
    PostNewTransferResponse:
      type: object
      description: PostNewTransferResponse
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
        savingsId:
          type: integer
          format: int64
          example: 1
    PostOfficesRequest:
      type: object
      description: PostOfficesRequest
      properties:
        dateFormat:
          type: string
          example: dd MMMM yyyy
        externalId:
          type: string
          example: SYS54-88
        locale:
          type: string
          example: en
        name:
          type: string
          example: Good Friday
        openingDate:
          type: string
          format: date
        parentId:
          type: integer
          format: int64
          example: 2
    PostOfficesResponse:
      type: object
      description: PostOfficesResponse
      properties:
        officeId:
          type: integer
          format: int64
          example: 3
        resourceId:
          type: integer
          format: int64
          example: 3
    PostPaymentTypesRequest:
      type: object
      description: PostPaymentTypesRequest
      properties:
        codeName:
          type: string
          example: REPAYMENT_REFUND
        description:
          type: string
          example: cash payment type
        isCashPayment:
          type: boolean
          example: true
        isSystemDefined:
          type: boolean
          example: false
        name:
          type: string
          example: cash
        position:
          type: integer
          format: int32
          example: 1
    PostPaymentTypesResponse:
      type: object
      description: PostPaymentTypesResponse
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
    PostProductsChargesSelected:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 20
    PostProductsMarketPricePeriods:
      type: object
      properties:
        dateFormat:
          type: string
          example: dd MMMM yyyy
        fromDate:
          type: string
          example: 04 May 2016
        locale:
          type: string
          example: en
        shareValue:
          type: integer
          format: int32
          example: 2
    PostProductsTypeRequest:
      type: object
      description: PostProductsTypeRequest
      properties:
        accountingRule:
          type: integer
          format: int32
          example: 1
        allowDividendCalculationForInactiveClients:
          type: boolean
          example: true
        chargesSelected:
          type: array
          items:
            $ref: '#/components/schemas/PostProductsChargesSelected'
          uniqueItems: true
        currencyCode:
          type: string
          example: USD
        description:
          type: string
          example: Description
        digitsAfterDecimal:
          type: integer
          format: int32
          example: 2
        inMultiplesOf:
          type: integer
          format: int32
          example: 1
        locale:
          type: string
          example: en
        lockinPeriodFrequency:
          type: integer
          format: int32
          example: 1
        lockinPeriodFrequencyType:
          type: integer
          format: int32
          example: 1
        marketPricePeriods:
          type: array
          items:
            $ref: '#/components/schemas/PostProductsMarketPricePeriods'
          uniqueItems: true
        maximumShares:
          type: integer
          format: int32
          example: 30
        minimumActivePeriodForDividends:
          type: integer
          format: int32
          example: 1
        minimumShares:
          type: integer
          format: int32
          example: 10
        minimumactiveperiodFrequencyType:
          type: integer
          format: int32
          example: 0
        name:
          type: string
          example: Share Product
        nominalShares:
          type: integer
          format: int32
          example: 20
        sharesIssued:
          type: integer
          format: int32
          example: 1000
        shortName:
          type: string
          example: SP
        totalShares:
          type: integer
          format: int32
          example: 1000
        unitPrice:
          type: integer
          format: int32
          example: 1
    PostProductsTypeResponse:
      type: object
      description: PostProductsTypeResponse
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
    PostProvisioningCriteriaRequest:
      type: object
      description: PostProvisioningCriteriaRequest
      properties:
        criteriaName:
          type: string
          example: High Risk Products Criteria
        loanProducts:
          type: array
          items:
            $ref: '#/components/schemas/LoanProductData'
        provisioningcriteria:
          type: array
          items:
            $ref: '#/components/schemas/ProvisioningCriteriaDefinitionData'
    PostProvisioningCriteriaResponse:
      type: object
      description: PostProvisioningCriteriaResponse
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
    PostProvisioningEntriesRequest:
      type: object
      description: PostProvisioningEntriesRequest
      properties:
        createjournalentries:
          type: string
          example: "true"
        date:
          type: string
          example: 16 October 2015
        dateFormat:
          type: string
          example: dd MMMM yyyy
        entries:
          type: string
        locale:
          type: string
          example: en
        provisioningentry:
          type: string
    PostProvisioningEntriesResponse:
      type: object
      description: PostProvisioningEntriesResponse
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
    PostRecurringChanges:
      type: object
      properties:
        accountNumber:
          type: string
          example: acc123
        bankNumber:
          type: string
          example: ban123
        checkNumber:
          type: string
          example: che123
        receiptNumber:
          type: string
          example: rec123
        routingCode:
          type: string
          example: rou123
    PostRecurringDepositAccountsAccountIdRequest:
      type: object
      description: PostRecurringDepositAccountsAccountIdRequest
    PostRecurringDepositAccountsAccountIdResponse:
      type: object
      description: PostRecurringDepositAccountsAccountIdResponse
      properties:
        clientId:
          type: integer
          format: int64
          example: 1
        officeId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int64
          example: 1
        savingsId:
          type: integer
          format: int64
          example: 1
    PostRecurringDepositAccountsRecurringDepositAccountIdTransactionsRequest:
      type: object
      description: PostRecurringDepositAccountsRecurringDepositAccountIdTransactionsRequest
      properties:
        accountNumber:
          type: string
          example: acc123
        bankNumber:
          type: string
          example: ban123
        checkNumber:
          type: string
          example: che123
        dateFormat:
          type: string
          example: dd MMMM yyyy
        locale:
          type: string
          example: en
        paymentTypeId:
          type: integer
          format: int32
          example: 14
        receiptNumber:
          type: string
          example: rec123
        routingCode:
          type: string
          example: rou123
        transactionAmount:
          type: number
          format: double
          example: 500
        transactionDate:
          type: string
          example: 27 May 2013
    PostRecurringDepositAccountsRecurringDepositAccountIdTransactionsResponse:
      type: object
      description: PostRecurringDepositAccountsRecurringDepositAccountIdTransactionsResponse
      properties:
        changes:
          $ref: '#/components/schemas/PostRecurringChanges'
        clientId:
          type: integer
          format: int64
          example: 2
        officeId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int64
          example: 47
        savingsId:
          type: integer
          format: int64
          example: 1
    PostRecurringDepositAccountsRecurringDepositAccountIdTransactionsTransactionIdResponse:
      type: object
      description: PostRecurringDepositAccountsRecurringDepositAccountIdTransactionsTransactionIdResponse
      properties:
        changes:
          $ref: '#/components/schemas/PostRecurringChanges'
        clientId:
          type: integer
          format: int64
          example: 2
        officeId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int64
          example: 48
        savingsId:
          type: integer
          format: int64
          example: 1
    PostRecurringDepositAccountsRequest:
      type: object
      description: PostRecurringDepositAccountsRequest
      properties:
        clientId:
          type: integer
          format: int64
          example: 1
        dateFormat:
          type: string
          example: dd MMMM yyyy
        depositAmount:
          type: number
          format: float
          example: 10000
        depositPeriod:
          type: integer
          format: int32
          example: 20
        depositPeriodFrequencyId:
          type: integer
          format: int32
          example: 1
        isCalendarInherited:
          type: boolean
          example: false
        locale:
          type: string
          example: en
        mandatoryRecommendedDepositAmount:
          type: integer
          format: int64
          example: 2000
        productId:
          type: integer
          format: int64
          example: 1
        recurringFrequency:
          type: integer
          format: int32
          example: 2
        recurringFrequencyType:
          type: integer
          format: int32
          example: 1
        submittedOnDate:
          type: string
          example: 02 June 2014
    PostRecurringDepositAccountsResponse:
      type: object
      description: PostRecurringDepositAccountsResponse
      properties:
        clientId:
          type: integer
          format: int64
          example: 1
        officeId:
          type: integer
          format: int64
          example: 2
        resourceId:
          type: integer
          format: int64
          example: 1
        savingsId:
          type: integer
          format: int64
          example: 1
    PostRecurringDepositProductsChartSlabs:
      type: object
      properties:
        annualInterestRate:
          type: number
          format: double
          example: 4.5
        description:
          type: string
          example: from 0 to 90 days
        fromPeriod:
          type: integer
          format: int32
          example: 0
        periodType:
          type: integer
          format: int32
          example: 1
        toPeriod:
          type: integer
          format: int32
          example: 90
    PostRecurringDepositProductsCharts:
      type: object
      properties:
        chartSlabs:
          type: array
          items:
            $ref: '#/components/schemas/PostRecurringDepositProductsChartSlabs'
          uniqueItems: true
        dateFormat:
          type: string
          example: dd MMMM yyyy
        fromDate:
          type: string
          example: 01 Jan 2014
        locale:
          type: string
          example: en
    PostRecurringDepositProductsRequest:
      type: object
      description: PostRecurringDepositProductsRequest
      properties:
        accountingRule:
          type: integer
          format: int32
          example: 1
        charts:
          type: array
          items:
            $ref: '#/components/schemas/PostRecurringDepositProductsCharts'
          uniqueItems: true
        currencyCode:
          type: string
          example: USD
        depositAmount:
          type: integer
          format: int64
          example: 10000
        description:
          type: string
          example: "Daily compounding using Daily Balance, 5% per year, 365 days in\
            \ year"
        digitsAfterDecimal:
          type: integer
          format: int32
          example: 2
        inMultiplesOf:
          type: integer
          format: int32
          example: 0
        interestCalculationDaysInYearType:
          type: integer
          format: int32
          example: 365
        interestCalculationType:
          type: integer
          format: int32
          example: 1
        interestCompoundingPeriodType:
          type: integer
          format: int32
          example: 1
        interestPostingPeriodType:
          type: integer
          format: int32
          example: 4
        locale:
          type: string
          example: en
        maxDepositAmount:
          type: integer
          format: int64
          example: 1000000
        maxDepositTerm:
          type: integer
          format: int32
          example: 5
        maxDepositTermTypeId:
          type: integer
          format: int32
          example: 3
        minDepositAmount:
          type: integer
          format: int64
          example: 100
        minDepositTerm:
          type: integer
          format: int32
          example: 1
        minDepositTermTypeId:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: Recurring deposit product
        preClosurePenalApplicable:
          type: boolean
          example: true
        preClosurePenalInterest:
          type: number
          format: double
          example: 1.75
        preClosurePenalInterestOnTypeId:
          type: integer
          format: int32
          example: 1
        recurringDepositFrequency:
          type: integer
          format: int32
          example: 1
        recurringDepositFrequencyTypeId:
          type: integer
          format: int32
          example: 2
        shortName:
          type: string
          example: RD01
    PostRecurringDepositProductsResponse:
      type: object
      description: PostRecurringDepositProductsResponse
      properties:
        resourceId:
          type: integer
          format: int32
          example: 1
    PostReportMailingJobsRequest:
      type: object
      description: PostReportMailingJobsRequest
      properties:
        dateFormat:
          type: string
          example: dd-MM-yyyy HH:mm:ss
        description:
          type: string
          example: Client Numbers Report
        emailMessage:
          type: string
          example: Client Numbers Report
        emailRecipients:
          type: string
          example: info@musonisystem.com
        emailSubject:
          type: string
          example: Client Numbers Report
        isActive:
          type: boolean
          example: true
        locale:
          type: string
          example: en_GB
        name:
          type: string
          example: Client Numbers Report
        recurrence:
          type: string
          example: "FREQ=WEEKLY;INTERVAL=1;BYDAY=MO,WE,FR"
        startDateTime:
          type: string
          format: date-time
        stretchyReportId:
          type: integer
          format: int64
          example: 120
        stretchyReportParamMap:
          type: string
          example: "{\"startDate\":\"2016-07-01\",\"endDate\":\"2016-08-02\",\"selectOffice\"\
            :\"1\",\"environementUrl\":\"environementUrl\"}"
    PostReportMailingJobsResponse:
      type: object
      description: PostReportMailingJobsResponse
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
    PostReportsResponse:
      type: object
      description: PostReportsResponse
      properties:
        resourceId:
          type: integer
          format: int64
          example: 132
    PostRepostRequest:
      type: object
      description: PostRepostRequest
      properties:
        description:
          type: string
          example: Just An Example
        reportCategory:
          type: string
          example: Loan
        reportName:
          type: string
          example: Completely New Report
        reportParameters:
          type: array
          items:
            $ref: '#/components/schemas/ReportParameterData'
        reportSql:
          type: string
          example: select 'very good sql' as AComment
        reportSubType:
          type: string
        reportType:
          type: string
          example: Table
    PostResourceTypeResourceIdNotesRequest:
      type: object
      description: PostResourceTypeResourceIdNotesRequest
      properties:
        note:
          type: string
          example: a note about the client
    PostResourceTypeResourceIdNotesResponse:
      type: object
      description: PostResourceTypeResourceIdNotesResponse
      properties:
        clientId:
          type: integer
          format: int64
          example: 1
        officeId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int32
          example: 76
    PostRolesRequest:
      type: object
      description: PostRolesRequest
      properties:
        description:
          type: string
          example: A description outlining the purpose of this role in relation to
            the application.
        name:
          type: string
          example: Another Role Name
    PostRolesResponse:
      type: object
      description: PostRolesResponse
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
    PostRolesRoleIdResponse:
      type: object
      description: PostRolesRoleIdResponse
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
    PostRunaccrualsRequest:
      type: object
      description: runaccrualsRequest
      properties:
        dateFormat:
          type: string
          example: dd MMMM yyyy
        locale:
          type: string
          example: en
        tillDate:
          type: string
          description: which specifies periodic accruals should happen till the given
            Date
          example: 04 June 2014
      required:
      - tillDate
    PostSavingsAccountBulkReversalTransactionsRequest:
      type: object
      description: PostSavingsAccountBulkReversalTransactionsRequest
      properties:
        isBulk:
          type: string
          example: "true"
    PostSavingsAccountTransactionsRequest:
      type: object
      description: PostSavingsAccountTransactionsRequest
      properties:
        dateFormat:
          type: string
          example: dd MMMM yyyy
        lienAllowed:
          type: string
          example: "true"
        locale:
          type: string
          example: en
        paymentTypeId:
          type: integer
          format: int32
          example: 1
        reasonForBlock:
          type: string
          example: String
        transactionAmount:
          type: number
          example: 1000
        transactionDate:
          type: string
          example: 27 March 2022
    PostSavingsAccountTransactionsResponse:
      type: object
      description: PostSavingsAccountTransactionsResponse
      properties:
        clientId:
          type: integer
          format: int64
          example: 1
        officeId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int64
          example: 1
        savingsId:
          type: integer
          format: int64
          example: 1
    PostSavingsAccountsAccountIdChanges:
      type: object
    PostSavingsAccountsAccountIdRequest:
      type: object
      description: PostSavingsAccountsAccountIdRequest
      properties:
        activatedOnDate:
          type: string
          example: 05 September 2014
        approvedOnDate:
          type: string
          example: 05 September 2014
        dateFormat:
          type: string
          example: dd MMMM yyyy
        locale:
          type: string
          example: en
    PostSavingsAccountsAccountIdResponse:
      type: object
      description: PostSavingsAccountsAccountIdResponse
      properties:
        changes:
          $ref: '#/components/schemas/PostSavingsAccountsAccountIdChanges'
        clientId:
          type: integer
          format: int32
          example: 8
        officeId:
          type: integer
          format: int32
          example: 2
        resourceId:
          type: integer
          format: int32
          example: 8
    PostSavingsAccountsRequest:
      type: object
      description: PostSavingsAccountsRequest
      properties:
        clientId:
          type: integer
          format: int32
          example: 1
        dateFormat:
          type: string
          example: dd MMMM yyyy
        externalId:
          type: string
          example: "123"
        locale:
          type: string
          example: en
        productId:
          type: integer
          format: int32
          example: 1
        submittedOnDate:
          type: string
          example: 01 March 2011
    PostSavingsAccountsResponse:
      type: object
      description: PostSavingsAccountsResponse
      properties:
        clientId:
          type: integer
          format: int32
          example: 1
        officeId:
          type: integer
          format: int32
          example: 2
        resourceId:
          type: integer
          format: int32
          example: 1
        savingsId:
          type: integer
          format: int32
          example: 1
    PostSavingsAccountsSavingsAccountIdChargesRequest:
      type: object
      description: PostSavingsAccountsSavingsAccountIdChargesRequest
      properties:
        amount:
          type: number
          format: float
          example: 100
        chargeId:
          type: integer
          format: int64
          example: 2
        dateFormat:
          type: string
          example: dd MMMM yyyy
        dueDate:
          type: string
          example: 29 April 2013
        locale:
          type: string
          example: en
    PostSavingsAccountsSavingsAccountIdChargesResponse:
      type: object
      description: PostSavingsAccountsSavingsAccountIdChargesResponse
      properties:
        clientId:
          type: integer
          format: int64
          example: 1
        officeId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int64
          example: 6
        savingsId:
          type: integer
          format: int64
          example: 1
    PostSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdRequest:
      type: object
      description: PostSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdRequest
      properties:
        amount:
          type: number
          format: float
          example: 60
        dateFormat:
          type: string
          example: dd MMMM yyyy
        dueDate:
          type: string
          example: 12 September 2013
        locale:
          type: string
          example: en
    PostSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdResponse:
      type: object
      description: PostSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdResponse
      properties:
        clientId:
          type: integer
          format: int64
          example: 1
        officeId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int64
          example: 2
        savingsId:
          type: integer
          format: int64
          example: 1
    PostSavingsCharges:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
    PostSavingsProductsRequest:
      type: object
      description: PostSavingsProductsRequest
      properties:
        accountMappingForPayment:
          type: string
          example: accountMappingForPayment
        accountingRule:
          type: integer
          format: int32
          example: 1
        charges:
          type: array
          items:
            $ref: '#/components/schemas/PostSavingsCharges'
          uniqueItems: true
        currencyCode:
          type: string
          example: USD
        description:
          type: string
          example: "Daily compounding using Daily Balance, 5% per year, 365 days in\
            \ year"
        digitsAfterDecimal:
          type: integer
          format: int32
          example: 2
        inMultiplesOf:
          type: integer
          format: int32
          example: 0
        interestCalculationDaysInYearType:
          type: integer
          format: int32
          example: 365
        interestCalculationType:
          type: integer
          format: int32
          example: 1
        interestCompoundingPeriodType:
          type: integer
          format: int32
          example: 1
        interestPostingPeriodType:
          type: integer
          format: int32
          example: 4
        locale:
          type: string
          example: en
        name:
          type: string
          example: Passbook Savings
        nominalAnnualInterestRate:
          type: number
          format: double
          example: 5.0
        shortName:
          type: string
          example: PBSV
    PostSavingsProductsResponse:
      type: object
      description: PostSavingsProductsResponse
      properties:
        resourceId:
          type: integer
          format: int32
          example: 1
    PostSelfAuthenticationResponse:
      type: object
      description: PostSelfAuthenticationResponse
      properties:
        authenticated:
          type: boolean
          example: true
        base64EncodedAuthenticationKey:
          type: string
          example: bWlmb3M6cGFzc3dvcmQ=
        clients:
          type: array
          example: "1, 2, 3"
          items:
            type: integer
            format: int32
        isSelfServiceUser:
          type: boolean
          example: true
        officeId:
          type: integer
          format: int32
          example: 1
        officeName:
          type: string
          example: Head Office
        organisationalRole:
          $ref: '#/components/schemas/GetSelfUserDetailsOrganisationalRole'
        permissions:
          type: array
          example: ALL_FUNCTIONS
          items:
            type: string
            example: ALL_FUNCTIONS
        roles:
          type: array
          items:
            $ref: '#/components/schemas/GetSelfUserDetailsRoles'
          uniqueItems: true
        staffDisplayName:
          type: string
          example: "Director, Program"
        staffId:
          type: integer
          format: int32
          example: 1
        userId:
          type: integer
          format: int32
          example: 1
        username:
          type: string
          example: mifos
    PostSelfBeneficiariesTPTRequest:
      type: object
      description: PostSelfBeneficiariesTPTRequest
      properties:
        accountNumber:
          type: integer
          format: int64
          example: 1
        accountType:
          type: integer
          format: int32
          example: 1
        locale:
          type: string
          example: en_GB
        name:
          type: string
          example: beneficiary nick name
        officeName:
          type: string
          example: HEAD OFFICE
        transferLimit:
          type: integer
          format: int32
          example: 1000
    PostSelfBeneficiariesTPTResponse:
      type: object
      description: PostSelfBeneficiariesTPTResponse
      properties:
        resourceId:
          type: integer
          format: int32
          example: 5
    PostSelfLoansData:
      type: object
      properties:
        Activation_Date:
          type: string
          example: 01 December 2016 00:00
        dateFormat:
          type: string
          example: dd MMMM yyyy HH:mm
        locale:
          type: string
          example: en
    PostSelfLoansDatatables:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/PostSelfLoansData'
        registeredTableName:
          type: string
          example: Date Loan Field
    PostSelfLoansDisbursementData:
      type: object
      properties:
        approvedPrincipal:
          type: integer
          format: int64
          example: 22000
        expectedDisbursementDate:
          type: string
          example: 01 November 2013
        principal:
          type: integer
          format: int64
          example: 22000
    PostSelfLoansLoanIdChanges:
      type: object
      properties:
        closedOnDate:
          type: string
          example: 20 September 2011
        dateFormat:
          type: string
          example: dd MMMM yyyy
        locale:
          type: string
          example: en
        status:
          $ref: '#/components/schemas/PostSelfLoansLoanIdStatus'
        withdrawnOnDate:
          type: string
          example: 20 September 2011
    PostSelfLoansLoanIdRequest:
      type: object
      description: PostSelfLoansLoanIdRequest
      properties:
        dateFormat:
          type: string
          example: dd MMMM yyyy
        locale:
          type: string
          example: en
        note:
          type: string
          example: Reason loan applicant withdrew from application.
        withdrawnOnDate:
          type: string
          example: 20 September 2011
    PostSelfLoansLoanIdResponse:
      type: object
      description: PostSelfLoansLoanIdResponse
      properties:
        changes:
          $ref: '#/components/schemas/PostSelfLoansLoanIdChanges'
        clientId:
          type: integer
          format: int32
          example: 1
        loanId:
          type: integer
          format: int32
          example: 2
        officeId:
          type: integer
          format: int32
          example: 1
        resourceId:
          type: integer
          format: int32
          example: 2
    PostSelfLoansLoanIdStatus:
      type: object
      properties:
        active:
          type: boolean
          example: false
        closed:
          type: boolean
          example: false
        closedObligationsMet:
          type: boolean
          example: false
        closedRescheduled:
          type: boolean
          example: false
        closedWrittenOff:
          type: boolean
          example: false
        code:
          type: string
          example: loanStatusType.withdrawn.by.client
        description:
          type: string
          example: Withdrawn by applicant
        id:
          type: integer
          format: int32
          example: 400
        overpaid:
          type: boolean
          example: false
        pendingApproval:
          type: boolean
          example: false
        waitingForDisbursal:
          type: boolean
          example: false
    PostSelfLoansRequest:
      type: object
      description: PostSelfLoansRequest
      properties:
        amortizationType:
          type: integer
          format: int32
          example: 1
        clientId:
          type: integer
          format: int32
          example: 1
        datatables:
          type: array
          items:
            $ref: '#/components/schemas/PostSelfLoansDatatables'
          uniqueItems: true
        dateFormat:
          type: string
          example: dd MMMM yyyy
        disbursementData:
          type: array
          items:
            $ref: '#/components/schemas/PostSelfLoansDisbursementData'
          uniqueItems: true
        expectedDisbursementDate:
          type: string
          example: 10 Jun 2013
        fixedEmiAmount:
          type: integer
          format: int32
          example: 1100
        interestCalculationPeriodType:
          type: integer
          format: int32
          example: 1
        interestRatePerPeriod:
          type: integer
          format: int32
          example: 10
        interestType:
          type: integer
          format: int32
          example: 0
        linkAccountId:
          type: integer
          format: int32
          example: 1
        loanTermFrequency:
          type: integer
          format: int32
          example: 12
        loanTermFrequencyType:
          type: integer
          format: int32
          example: 2
        loanType:
          type: string
          example: individual
        locale:
          type: string
          example: en_GB
        maxOutstandingLoanBalance:
          type: integer
          format: int64
          example: 35000
        numberOfRepayments:
          type: integer
          format: int32
          example: 10
        principal:
          type: number
          format: double
        productId:
          type: integer
          format: int32
          example: 1
        repaymentEvery:
          type: integer
          format: int32
          example: 1
        repaymentFrequencyType:
          type: integer
          format: int32
          example: 2
        submittedOnDate:
          type: string
          example: 10 Jun 2013
        transactionProcessingStrategyCode:
          type: string
          example: mifos-standard-strategy
    PostSelfLoansResponse:
      type: object
      description: PostSelfLoansResponse
      properties:
        clientId:
          type: integer
          format: int32
          example: 1
        loanId:
          type: integer
          format: int32
          example: 1
        officeId:
          type: integer
          format: int32
          example: 1
        resourceId:
          type: integer
          format: int32
          example: 1
    PostStaffRequest:
      type: object
      description: PostStaffRequest
      properties:
        dateFormat:
          type: string
          example: dd MMMM yyyy
        externalId:
          type: string
          example: 17H
        firstname:
          type: string
          example: John
        isActive:
          type: boolean
          example: true
        isLoanOfficer:
          type: boolean
          example: true
        joiningDate:
          type: string
          format: date
        lastname:
          type: string
          example: Doe
        locale:
          type: string
          example: en
        mobileNo:
          type: string
          example: "+353851239876"
        officeId:
          type: integer
          format: int64
          example: 1
    PostStandingInstructionsRequest:
      type: object
      description: PostStandingInstructionsRequest
      properties:
        amount:
          type: integer
          format: int32
          example: 221
        dateFormat:
          type: string
          example: dd MMMM yyyy
        fromAccountId:
          type: integer
          format: int64
          example: 1
        fromAccountType:
          type: integer
          format: int32
          example: 2
        fromClientId:
          type: integer
          format: int64
          example: 1
        fromOfficeId:
          type: integer
          format: int64
          example: 1
        instructionType:
          type: integer
          format: int32
          example: 1
        locale:
          type: string
          description: en
        monthDayFormat:
          type: string
          example: dd MMMM
        name:
          type: string
          example: standing instruction
        priority:
          type: integer
          format: int32
          example: 2
        recurrenceFrequency:
          type: integer
          format: int32
          example: 2
        recurrenceInterval:
          type: integer
          format: int32
          example: 1
        recurrenceOnMonthDay:
          type: string
          example: 02 April
        recurrenceType:
          type: integer
          format: int32
          example: 1
        status:
          type: integer
          format: int32
          example: 1
        toAccountId:
          type: integer
          format: int64
          example: 3
        toAccountType:
          type: integer
          format: int32
          example: 2
        toClientId:
          type: integer
          format: int64
          example: 1
        toOfficeId:
          type: integer
          format: int64
          example: 1
        transferType:
          type: integer
          format: int32
          example: 1
        validFrom:
          type: string
          example: 08 April 2014
    PostStandingInstructionsResponse:
      type: object
      description: PostStandingInstructionsResponse
      properties:
        clientId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int32
          example: 65
    PostSurveySurveyNameApptableIdRequest:
      type: object
      description: PostSurveySurveyNameApptableIdRequest
      properties:
        date:
          type: string
          format: date-time
        dateFormat:
          type: string
          format: date-time
        locale:
          type: string
          example: en_GB
        ppi_businessoccupation_cd_q3_businessoccupation:
          type: integer
          format: int64
          example: 180
        ppi_floortype_cd_q5_floortype:
          type: integer
          format: int64
          example: 188
        ppi_fryingpans_cd_q10_fryingpans:
          type: integer
          format: int64
          example: 201
        ppi_habitablerooms_cd_q4_habitablerooms:
          type: integer
          format: int64
          example: 184
        ppi_highestschool_cd_q2_highestschool:
          type: integer
          format: int64
          example: 174
        ppi_household_members_cd_q1_householdmembers:
          type: integer
          format: int64
          example: 167
        ppi_irons_cd_q7_irons:
          type: integer
          format: int64
          example: 193
        ppi_lightingsource_cd_q6_lightingsource:
          type: integer
          format: int64
          example: 190
        ppi_mosquitonets_cd_q8_mosquitonets:
          type: integer
          format: int64
          example: 195
        ppi_towels_cd_q9_towels:
          type: integer
          format: int64
          example: 198
    PostSurveySurveyNameApptableIdResponse:
      type: object
      description: PostSurveySurveyNameApptableIdResponse
      properties:
        clientId:
          type: integer
          format: int64
          example: 87
        officeId:
          type: integer
          format: int64
          example: 2
        resourceId:
          type: integer
          format: int64
          example: 87
    PostTaxesComponentsRequest:
      type: object
      description: PostTaxesComponentsRequest
      properties:
        creditAccountType:
          type: integer
          format: int32
          example: 2
        creditAcountId:
          type: integer
          format: int32
          example: 4
        dateFormat:
          type: string
          example: dd MMMM yyyy
        locale:
          type: string
          example: en
        name:
          type: string
          example: tax component 1
        percentage:
          type: number
          format: float
          example: 10
        startDate:
          type: string
          example: 11 April 2016
    PostTaxesComponentsResponse:
      type: object
      description: PostTaxesComponentsResponse
      properties:
        resourceId:
          type: integer
          format: int32
          example: 1
    PostTaxesGroupRequest:
      type: object
      description: PostTaxesGroupRequest
      properties:
        dateFormat:
          type: string
          example: dd MMMM yyyy
        locale:
          type: string
          example: en
        name:
          type: string
          example: tax group 1
        taxComponents:
          type: array
          items:
            $ref: '#/components/schemas/PostTaxesGroupTaxComponents'
          uniqueItems: true
    PostTaxesGroupResponse:
      type: object
      description: PostTaxesGroupResponse
      properties:
        resourceId:
          type: integer
          format: int32
          example: 1
    PostTaxesGroupTaxComponents:
      type: object
      properties:
        startDate:
          type: string
          example: 11 April 2016
        taxComponentId:
          type: integer
          format: int64
          example: 7
    PostTellersRequest:
      type: object
      description: PostTellersRequest
      properties:
        dateFormat:
          type: string
          example: dd-MM-yyyy
        description:
          type: string
          example: cash handling
        locale:
          type: string
          example: en
        name:
          type: string
          example: Teller3
        officeId:
          type: integer
          format: int64
          example: 1
        startDate:
          type: string
          format: date
        status:
          type: string
          enum:
          - INVALID
          - PENDING
          - ACTIVE
          - INACTIVE
          - CLOSED
          example: ACTIVE
    PostTellersResponse:
      type: object
      description: PostTellersResponse
      properties:
        officeId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int64
          example: 5
    PostTellersTellerIdCashiersCashierIdAllocateRequest:
      type: object
      description: PostTellersTellerIdCashiersCashierIdAllocateRequest
      properties:
        currencyCode:
          type: string
          example: USD
        dateFormat:
          type: string
          example: dd-MM-yyyy
        locale:
          type: string
          example: en
        txnAmount:
          type: number
          example: 5000
        txnDate:
          type: string
          format: date
        txnNote:
          type: string
          example: allocating cash
    PostTellersTellerIdCashiersCashierIdAllocateResponse:
      type: object
      description: PostTellersTellerIdCashiersCashierIdAllocateResponse
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
        subResourceId:
          type: integer
          format: int64
          example: 4
    PostTellersTellerIdCashiersCashierIdSettleRequest:
      type: object
      description: PostTellersTellerIdCashiersCashierIdSettleRequest
      properties:
        currencyCode:
          type: string
          example: USD
        dateFormat:
          type: string
          example: dd-MM-yyyy
        locale:
          type: string
          example: en
        txnAmount:
          type: number
          example: 2000
        txnDate:
          type: string
          format: date
        txnNote:
          type: string
          example: cash settlement
    PostTellersTellerIdCashiersCashierIdSettleResponse:
      type: object
      description: PostTellersTellerIdCashiersCashierIdSettleResponse
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
        subResourceId:
          type: integer
          format: int64
          example: 5
    PostTellersTellerIdCashiersRequest:
      type: object
      description: PostTellersTellerIdCashiersRequest
      properties:
        dateFormat:
          type: string
          example: dd-MM-yyyy
        description:
          type: string
          example: teller cash handling
        endDate:
          type: string
          format: date
        isFullDay:
          type: boolean
          example: true
        locale:
          type: string
          example: en
        staffId:
          type: integer
          format: int64
          example: 3
        startDate:
          type: string
          format: date
    PostTellersTellerIdCashiersResponse:
      type: object
      description: PostTellersTellerIdCashiersResponse
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
        subResourceId:
          type: integer
          format: int64
          example: 2
    PostTemplatesRequest:
      type: object
      description: PostTemplatesRequest
      properties:
        entity:
          type: integer
          format: int64
          example: 1
        id:
          type: integer
          format: int64
          example: 1
        mappers:
          type: array
          items:
            $ref: '#/components/schemas/TemplateMapper'
        name:
          type: string
          example: Text
        text:
          type: string
          example: "This is a loan for {{loan.clientName}}"
        type:
          type: integer
          format: int64
          example: 0
    PostTemplatesResponse:
      type: object
      description: PostTemplatesResponse
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
    PostUpdateRescheduleLoanChanges:
      type: object
      properties:
        approvedByUserId:
          type: integer
          format: int64
          example: 1
        approvedOnDate:
          type: string
          example: 05/02/2022
        dateFormat:
          type: string
          example: en
        locale:
          type: string
          example: en
    PostUpdateRescheduleLoansRequest:
      type: object
      description: PostUpdateRescheduleLoansRequest
      properties:
        approvedOnDate:
          type: string
          example: 20 September 2011
        dateFormat:
          type: string
          example: dd MMMM yyyy
        locale:
          type: string
          example: en
        rejectedOnDate:
          type: string
          example: 20 September 2011
    PostUpdateRescheduleLoansResponse:
      type: object
      description: 'PostUpdateRescheduleLoansResponse '
      properties:
        changes:
          $ref: '#/components/schemas/PostUpdateRescheduleLoanChanges'
        clientId:
          type: integer
          format: int64
          example: 12
        loanId:
          type: integer
          format: int64
          example: 18
        officeId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int64
          example: 12
    PostUsersRequest:
      type: object
      description: PostUsersRequest
      properties:
        clients:
          type: array
          example:
          - 2
          - 3
          items:
            type: integer
            format: int64
        email:
          type: string
          example: whatever@mifos.org
        firstname:
          type: string
          example: Test
        isSelfServiceUser:
          type: boolean
          example: true
        lastname:
          type: string
          example: User
        officeId:
          type: integer
          format: int64
          example: 1
        password:
          type: string
          example: password
        passwordNeverExpires:
          type: boolean
          example: true
        repeatPassword:
          type: string
          example: repeatPassword
        roles:
          type: array
          example:
          - 2
          - 3
          items:
            type: integer
            format: int64
        sendPasswordToEmail:
          type: boolean
          example: true
        staffId:
          type: integer
          format: int64
          example: 1
        username:
          type: string
          example: newuser
    PostUsersResponse:
      type: object
      description: PostUsersResponse
      properties:
        officeId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int64
          example: 11
    PostalAddress:
      type: object
      properties:
        addressLine1:
          type: string
        addressLine2:
          type: string
        city:
          type: string
        country:
          type: string
        postalCode:
          type: string
        stateProvince:
          type: string
    ProcessingResultLookup:
      type: object
      properties:
        id:
          type: integer
          format: int64
        processingResult:
          type: string
    Providers:
      type: object
    ProvisioningCriteriaDefinitionData:
      type: object
      properties:
        categoryId:
          type: integer
          format: int64
        categoryName:
          type: string
        expenseAccount:
          type: integer
          format: int64
        expenseCode:
          type: string
        expenseName:
          type: string
        id:
          type: integer
          format: int64
        liabilityAccount:
          type: integer
          format: int64
        liabilityCode:
          type: string
        liabilityName:
          type: string
        maxAge:
          type: integer
          format: int64
        minAge:
          type: integer
          format: int64
        provisioningPercentage:
          type: number
    ProvisioningEntryData:
      type: object
      properties:
        createdById:
          type: integer
          format: int64
        createdDate:
          type: string
          format: date
        createdUser:
          type: string
        id:
          type: integer
          format: int64
        journalEntry:
          type: boolean
        modifiedById:
          type: integer
          format: int64
        modifiedUser:
          type: string
        provisioningEntries:
          type: array
          items:
            $ref: '#/components/schemas/LoanProductProvisioningEntryData'
        reservedAmount:
          type: number
    PutAccountNumberFormatsRequest:
      type: object
      description: PutAccountNumberFormatsRequest
      properties:
        prefixType:
          type: integer
          format: int64
          example: 1
    PutAccountNumberFormatsResponse:
      type: object
      description: PutAccountNumberFormatsResponse
      properties:
        changes:
          $ref: '#/components/schemas/PutAccountNumberFormatschangesSwagger'
        resourceId:
          type: integer
          format: int64
          example: 2
    PutAccountNumberFormatschangesSwagger:
      type: object
      properties:
        prefixType:
          type: integer
          format: int64
    PutAccountingRulesRequest:
      type: object
      description: PutAccountingRulesRequest
      properties:
        name:
          type: string
          example: Employee Salary posting rule
    PutAccountingRulesResponse:
      type: object
      description: PutAccountingRulesResponse
      properties:
        changes:
          $ref: '#/components/schemas/PutAccountingRulesResponsechangesSwagger'
        resourceId:
          type: integer
          format: int64
          example: 1
    PutAccountingRulesResponsechangesSwagger:
      type: object
      properties:
        name:
          type: string
          example: Employee Salary posting rule
    PutAccountsChanges:
      type: object
      properties:
        applicationDate:
          type: string
          example: 01 April 2016
        dateFormat:
          type: string
          example: dd MMMM yyyy
        locale:
          type: string
          example: en
        requestedShares:
          type: integer
          format: int32
          example: 20
    PutAccountsTypeAccountIdRequest:
      type: object
      description: PutAccountsTypeAccountIdRequest
      properties:
        applicationDate:
          type: string
          example: 01 April 2016
        dateFormat:
          type: string
          example: dd MMMM yyyy
        locale:
          type: string
          example: en
        requestedShares:
          type: integer
          format: int32
          example: 20
    PutAccountsTypeAccountIdResponse:
      type: object
      description: PutAccountsTypeAccountIdResponse
      properties:
        changes:
          $ref: '#/components/schemas/PutAccountsChanges'
        resourceId:
          type: integer
          format: int64
          example: 1
    PutCachechangesSwagger:
      type: object
      properties:
        cacheType:
          type: integer
          format: int64
          example: 2
    PutCachesRequest:
      type: object
      description: PutCachesRequest
      properties:
        cacheType:
          type: integer
          format: int64
          example: 2
    PutCachesResponse:
      type: object
      description: PutCachesResponse
      properties:
        cacheType:
          $ref: '#/components/schemas/PutCachechangesSwagger'
    PutCentersCenterIdRequest:
      type: object
      description: PutCentersCenterIdRequest
      properties:
        name:
          type: string
          example: First Center (No groups)
    PutCentersCenterIdResponse:
      type: object
      description: PutCentersCenterIdResponse
      properties:
        changes:
          $ref: '#/components/schemas/PutCentersChanges'
        groupId:
          type: integer
          format: int64
          example: 8
        officeId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int64
          example: 8
    PutCentersChanges:
      type: object
      properties:
        name:
          type: string
          example: First Center (No groups) - modified
    PutChargeTransactionChangesRequest:
      type: object
      description: PutChargeTransactionChangesRequest
      properties:
        id:
          type: integer
          format: int64
          example: 1
        loanId:
          type: integer
          format: int64
          example: 2
    PutChargeTransactionChangesResponse:
      type: object
      description: PutChargeTransactionChangesResponse
      properties:
        changes:
          $ref: '#/components/schemas/PutChargeTransactionChangesResponseChanges'
        clientId:
          type: integer
          format: int64
          example: 1
        loanId:
          type: integer
          format: int64
          example: 1
        officeId:
          type: integer
          format: int64
          example: 1
        resourceExternalId:
          type: string
          example: 95174ff9-1a75-4d72-a413-6f9b1cb988b7
        resourceId:
          type: integer
          format: int64
          example: 22
        subResourceExternalId:
          type: string
          example: 95174ff9-1a75-4d72-a413-6f9b1cb988b7
        subResourceId:
          type: integer
          format: int64
          example: 22
    PutChargeTransactionChangesResponseChanges:
      type: object
      properties:
        amount:
          type: number
          format: double
          example: 10.0
        date:
          type: string
          format: date
        externalId:
          type: string
          example: 95174ff9-1a75-4d72-a413-6f9b1cb988b7
        feeChargesPortion:
          type: number
          format: double
          example: 10.0
        id:
          type: integer
          format: int64
          example: 1
        interestPortion:
          type: number
          format: double
          example: 10.0
        outstandingLoanBalance:
          type: number
          format: double
          example: 10.0
        penaltyChargesPortion:
          type: number
          format: double
          example: 10.0
        principalPortion:
          type: number
          format: double
          example: 10.0
    PutChargesChargeIdRequest:
      type: object
      description: PutChargesChargeIdRequest
      properties:
        name:
          type: string
          example: Loan service fee(changed)
    PutChargesChargeIdResponse:
      type: object
      description: PutChargesChargeIdResponse
      properties:
        changes:
          $ref: '#/components/schemas/PutChargesChargeIdRequest'
        resourceId:
          type: integer
          format: int64
          example: 1
    PutClientClientIdAddressesRequest:
      type: object
      description: PutClientClientIdAddressesRequest
      properties:
        addressId:
          type: integer
          format: int64
          example: 67
        street:
          type: string
          example: goldensource
    PutClientClientIdAddressesResponse:
      type: object
      description: PutClientClientIdAddressesResponse
      properties:
        resourceId:
          type: integer
          format: int64
          example: 67
    PutClientCollateralRequest:
      type: object
      description: PutClientCollateralRequest
      properties:
        locale:
          type: string
          example: en
        quantity:
          type: number
          example: 14
    PutClientCollateralResponse:
      type: object
      description: PutClientCollateralResponse
      properties:
        changes:
          $ref: '#/components/schemas/PutClientCollateralRequest'
        clientId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int64
          example: 12
    PutClientsClientIdIdentifiersIdentifierIdRequest:
      type: object
      description: PutClientsClientIdIdentifiersIdentifierIdRequest
      properties:
        description:
          type: string
          example: Document has been updated
        documentKey:
          type: string
          example: KA-94667
        documentTypeId:
          type: integer
          format: int64
          example: 4
    PutClientsClientIdIdentifiersIdentifierIdResponse:
      type: object
      description: PutClientsClientIdIdentifiersIdentifierIdResponse
      properties:
        changes:
          $ref: '#/components/schemas/PutClientsClientIdIdentifiersIdentifierIdRequest'
        clientId:
          type: integer
          format: int64
          example: 1
        officeId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int64
          example: 3
    PutClientsClientIdRequest:
      type: object
      description: PutClientsClientIdRequest
      properties:
        externalId:
          type: string
          example: 786444UUUYYH7
        resourceExternalId:
          type: string
          example: 123-456
    PutClientsClientIdResponse:
      type: object
      description: PutClientsClientIdResponse
      properties:
        changes:
          $ref: '#/components/schemas/PutClientsClientIdRequest'
        clientId:
          type: integer
          format: int64
          example: 1
        officeId:
          type: integer
          format: int64
          example: 1
        resourceExternalId:
          type: string
          example: 123-456
        resourceId:
          type: integer
          format: int64
          example: 1
    PutCodeValueDataResponse:
      type: object
      description: PutCodeValueDataResponse
      properties:
        changes:
          $ref: '#/components/schemas/PutCodeValuechangesSwagger'
        resourceId:
          type: integer
          format: int64
          example: 4
    PutCodeValuechangesSwagger:
      type: object
      properties:
        description:
          type: string
          example: Passport information
        name:
          type: string
          example: Passport
        position:
          type: integer
          format: int32
          example: 0
    PutCodeValuesDataRequest:
      type: object
      description: PutCodeValuesDataRequest
      properties:
        description:
          type: string
          example: Passport information
        isActive:
          type: boolean
          example: true
        name:
          type: string
          example: Passport
        position:
          type: integer
          format: int32
          example: 0
    PutCodesApichangesSwagger:
      type: object
      properties:
        name:
          type: string
          example: MyNewCode(changed)
    PutCodesRequest:
      type: object
      description: PutCodesRequest
      properties:
        name:
          type: string
          example: MyNewCode(changed)
    PutCodesResponse:
      type: object
      description: PutCodesResponse
      properties:
        changes:
          $ref: '#/components/schemas/PutCodesApichangesSwagger'
        resourceId:
          type: integer
          format: int64
          example: 4
    PutCollateralProductRequest:
      type: object
      description: PutCollateralProductRequest
      properties:
        basePrice:
          type: number
          example: 4500
        currency:
          type: string
          example: USD
        name:
          type: string
          example: gold
        pctToBase:
          type: number
          example: 80
        quality:
          type: string
          example: 22kt
        unitType:
          type: string
          example: gm
    PutCollateralProductResponse:
      type: object
      description: PutCollateralProductResponse
      properties:
        changes:
          $ref: '#/components/schemas/PutCollateralProductRequest'
        resourceId:
          type: integer
          format: int64
          example: 12
    PutCurrenciesRequest:
      type: object
      description: PutCurrenciesRequest
      properties:
        currencies:
          type: array
          example:
          - KES
          - BND
          - LBP
          - GHC
          - USD
          - XOF
          - AED
          - AMD
          items:
            type: string
            example: "[\"KES\",\"BND\",\"LBP\",\"GHC\",\"USD\",\"XOF\",\"AED\",\"\
              AMD\"]"
    PutCurrenciesResponse:
      type: object
      description: PutCurrenciesResponse
      properties:
        currencies:
          type: array
          example:
          - KES
          - BND
          - LBP
          - GHC
          - USD
          - XOF
          - AED
          - AMD
          items:
            type: string
            example: "[\"KES\",\"BND\",\"LBP\",\"GHC\",\"USD\",\"XOF\",\"AED\",\"\
              AMD\"]"
    PutDataTablesAppTableIdDatatableIdResponse:
      type: object
      description: 'PutDataTablesAppTableIdDatatableIdResponse '
      properties:
        changes:
          type: object
          additionalProperties:
            type: object
        clientId:
          type: integer
          format: int64
          example: 1
        loanId:
          type: integer
          format: int64
          example: 1
        officeId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int64
          example: 1
    PutDataTablesAppTableIdResponse:
      type: object
      description: PutDataTablesAppTableIdResponse
      properties:
        changes:
          type: object
          additionalProperties:
            type: object
        clientId:
          type: integer
          format: int64
          example: 1
        loanId:
          type: integer
          format: int64
          example: 1
        officeId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int64
          example: 1
    PutDataTablesRequest:
      type: object
      description: PutDataTablesRequest
      properties:
        addColumns:
          type: array
          items:
            $ref: '#/components/schemas/PutDataTablesRequestAddColumns'
        apptableName:
          type: string
          example: m_client
        changeColumns:
          type: array
          items:
            $ref: '#/components/schemas/PutDataTablesRequestChangeColumns'
        dropColumns:
          type: array
          items:
            $ref: '#/components/schemas/PutDataTablesRequestDropColumns'
    PutDataTablesRequestAddColumns:
      type: object
      properties:
        code:
          type: string
          example: Gender
        indexed:
          type: boolean
          description: Defaults to false
          example: true
        mandatory:
          type: boolean
          example: true
        name:
          type: string
          example: Question
        type:
          type: string
          example: Dropdown
        unique:
          type: boolean
          example: true
    PutDataTablesRequestChangeColumns:
      type: object
      properties:
        code:
          type: string
          example: Gender
        indexed:
          type: boolean
          description: Defaults to false
          example: true
        mandatory:
          type: boolean
          example: true
        name:
          type: string
          example: Question
        newCode:
          type: string
          example: Gender2
        newName:
          type: string
          example: Question 2
        unique:
          type: boolean
          example: true
    PutDataTablesRequestDropColumns:
      type: object
      properties:
        name:
          type: string
          example: Gender_cd_Question
    PutDataTablesResponse:
      type: object
      description: PutDataTablesResponse
      properties:
        resourceIdentifier:
          type: string
          example: extra_client_details
    PutDelinquencyBucketResponse:
      type: object
      description: PutDelinquencyBucketResponse
      properties:
        resourceId:
          type: integer
          format: int32
          example: 1
    PutDelinquencyRangeResponse:
      type: object
      description: PutDelinquencyRangeResponse
      properties:
        changes:
          $ref: '#/components/schemas/PostDelinquencyRangeRequest'
        resourceId:
          type: integer
          format: int32
          example: 1
    PutEntityTypeEntityIdDocumentsResponse:
      type: object
      description: PutEntityTypeEntityIdDocumentsResponse
      properties:
        changes:
          $ref: '#/components/schemas/PutEntityTypeEntityIdDocumentsResponseChangesSwagger'
        resourceId:
          type: integer
          format: int64
          example: 3
        resourceIdentifier:
          type: string
          example: "3"
    PutEntityTypeEntityIdDocumentsResponseChangesSwagger:
      type: object
    PutExternalEventConfigurationsRequest:
      type: object
      description: PutExternalEventConfigurationsRequest
      properties:
        externalEventConfigurations:
          type: object
          additionalProperties:
            type: boolean
            example: false
          example: |-
            "CentersCreateBusinessEvent":true,
            "ClientActivateBusinessEvent":true
    PutExternalServiceRequest:
      type: object
      description: PutExternalServiceRequest
      properties:
        password:
          type: string
          example: XXXX
        username:
          type: string
          example: test@mifos.org
    PutFinancialActivityAccountsResponse:
      type: object
      description: PutFinancialActivityAccountsResponse
      properties:
        comments:
          $ref: '#/components/schemas/PutFinancialActivityAccountscommentsSwagger'
        resourceId:
          type: integer
          format: int64
          example: 1
    PutFinancialActivityAccountscommentsSwagger:
      type: object
      properties:
        glAccountId:
          type: integer
          format: int64
          example: 1
    PutFixedDepositAccountsAccountIdRequest:
      type: object
      description: PutFixedDepositAccountsAccountIdRequest
      properties:
        depositAmount:
          type: number
          format: float
          example: 6000
        locale:
          type: string
          example: en
    PutFixedDepositAccountsAccountIdResponse:
      type: object
      description: PutFixedDepositAccountsAccountIdResponse
      properties:
        changes:
          $ref: '#/components/schemas/PutFixedDepositAccountsChanges'
        clientId:
          type: integer
          format: int64
          example: 1
        officeId:
          type: integer
          format: int64
          example: 2
        resourceId:
          type: integer
          format: int64
          example: 1
        savingsId:
          type: integer
          format: int64
          example: 1
    PutFixedDepositAccountsChanges:
      type: object
      properties:
        depositAmount:
          type: number
          format: float
          example: 6000
        locale:
          type: string
          example: en
    PutFixedDepositProductsChanges:
      type: object
      properties:
        description:
          type: string
          example: Fixed deposit product new offerings
        minDepositTerm:
          type: integer
          format: int32
          example: 5
    PutFixedDepositProductsProductIdRequest:
      type: object
      description: PutFixedDepositProductsProductIdRequest
      properties:
        description:
          type: string
          example: Fixed deposit product new offerings
        locale:
          type: string
          example: en
        minDepositTerm:
          type: integer
          format: int32
          example: 5
        minDepositTermTypeId:
          type: integer
          format: int32
          example: 1
    PutFixedDepositProductsProductIdResponse:
      type: object
      description: PutFixedDepositProductsProductIdResponse
      properties:
        changes:
          $ref: '#/components/schemas/PutFixedDepositProductsChanges'
        resourceId:
          type: integer
          format: int32
          example: 1
    PutFloatingRatesChanges:
      type: object
      properties:
        ratePeriods:
          type: array
          items:
            $ref: '#/components/schemas/PostFloatingRatesRatePeriods'
          uniqueItems: true
    PutFloatingRatesFloatingRateIdRequest:
      type: object
      description: PutFloatingRatesFloatingRateIdRequest
      properties:
        isActive:
          type: boolean
          example: true
        isBaseLendingRate:
          type: boolean
          example: true
        name:
          type: string
          example: Floating Rate 1
        ratePeriods:
          type: array
          items:
            $ref: '#/components/schemas/PostFloatingRatesRatePeriods'
          uniqueItems: true
    PutFloatingRatesFloatingRateIdResponse:
      type: object
      description: PutFloatingRatesFloatingRateIdResponse
      properties:
        changes:
          $ref: '#/components/schemas/PutFloatingRatesChanges'
        resourceId:
          type: integer
          format: int64
          example: 1
    PutFundsFundIdRequest:
      type: object
      description: PutFundsFundIdRequest
      properties:
        name:
          type: string
          example: EU Agri Fund (2010-2020)
    PutFundsFundIdResponse:
      type: object
      description: PutFundsFundIdResponse
      properties:
        changes:
          $ref: '#/components/schemas/PutFundsFundIdRequest'
        resourceId:
          type: integer
          format: int64
          example: 1
    PutGLAccountsRequest:
      type: object
      description: PutGLAccountsRequest
      properties:
        description:
          type: string
          example: Desc
        disabled:
          type: boolean
          example: false
        glCode:
          type: string
          example: "100001"
        manualEntriesAllowed:
          type: boolean
          example: true
        name:
          type: string
          example: Cash at Bangalore
        parentId:
          type: integer
          format: int64
          example: 1
        tagId:
          type: integer
          format: int64
          example: 10
        type:
          type: integer
          format: int32
          example: 1
        usage:
          type: integer
          format: int32
          example: 1
    PutGLAccountsResponse:
      type: object
      description: PutGLAccountsResponse
      properties:
        changes:
          $ref: '#/components/schemas/PutGLAccountsResponsechangesSwagger'
        resourceId:
          type: integer
          format: int64
          example: 1
    PutGLAccountsResponsechangesSwagger:
      type: object
      properties:
        name:
          type: string
          example: Cash at Bangalore
    PutGlClosuresRequest:
      type: object
      description: PutGlClosuresRequest
      properties:
        comments:
          type: string
          example: All transactions verified by Johnny Cash
    PutGlClosuresResponse:
      type: object
      description: PutGlClosuresResponse
      properties:
        comments:
          type: string
          example: All transactions verified by Johnny Cash
        officeId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int64
          example: 9
    PutGlobalConfigurationsRequest:
      type: object
      description: PutGlobalConfigurationsRequest
      properties:
        dateFormat:
          type: string
          example: dd MMMM yyyy
        dateValue:
          type: string
          example: 20 September 2011
        enabled:
          type: boolean
          example: true
        locale:
          type: string
          example: en
        stringValue:
          type: string
          example: random text
        value:
          type: integer
          format: int64
          example: 2
    PutGlobalConfigurationsResponse:
      type: object
      description: PutGlobalConfigurationsResponse
      properties:
        changes:
          $ref: '#/components/schemas/PutGlobalConfigurationsResponsechangesSwagger'
        resourceId:
          type: integer
          format: int64
          example: 4
    PutGlobalConfigurationsResponsechangesSwagger:
      type: object
      properties:
        dateValue:
          type: string
          example: 20 September 2011
        enabled:
          type: boolean
          example: true
        stringValue:
          type: string
          example: random text
        value:
          type: integer
          format: int64
          example: 2
    PutGroupsGroupIdChanges:
      type: object
      properties:
        name:
          type: string
          example: First Group (changed)
    PutGroupsGroupIdRequest:
      type: object
      description: PutGroupsGroupIdRequest
      properties:
        name:
          type: string
          example: First Group (changed)
    PutGroupsGroupIdResponse:
      type: object
      description: PutGroupsGroupIdResponse
      properties:
        changes:
          $ref: '#/components/schemas/PutGroupsGroupIdChanges'
        groupId:
          type: integer
          format: int64
          example: 1
        officeId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int64
          example: 1
    PutHolidaysHolidayIdRequest:
      type: object
      description: PutHolidaysHolidayIdRequest
      properties:
        description:
          type: string
          example: Holiday for Independence day celebration
        name:
          type: string
          example: Independence day
    PutHolidaysHolidayIdResponse:
      type: object
      description: PutHolidaysHolidayIdResponse
      properties:
        changes:
          $ref: '#/components/schemas/PutHolidaysHolidayIdResponseChanges'
        resourceId:
          type: integer
          format: int64
          example: 1
    PutHolidaysHolidayIdResponseChanges:
      type: object
      properties:
        description:
          type: string
          example: Holiday for Independence day celebration
        name:
          type: string
          example: Independence day
    PutHookRequest:
      type: object
      description: PutHookRequest
      properties:
        config:
          type: array
          items:
            $ref: '#/components/schemas/Field'
        displayName:
          type: string
          example: Kremlin
        events:
          type: array
          items:
            $ref: '#/components/schemas/Event'
        isActive:
          type: boolean
          example: true
        name:
          type: string
          example: Web
        templateId:
          type: integer
          format: int64
          example: 1
    PutHookResponse:
      type: object
      description: PutHookResponse
      properties:
        changes:
          $ref: '#/components/schemas/PutHookResponseChangesSwagger'
        resourceId:
          type: integer
          format: int64
          example: 4
    PutHookResponseChangesSwagger:
      type: object
      properties:
        config:
          type: array
          items:
            $ref: '#/components/schemas/Field'
        displayName:
          type: string
          example: Kremlin
        events:
          type: array
          example: 1
          items:
            $ref: '#/components/schemas/Event'
    PutInterestRateChartsChartIdChartSlabsChartSlabIdRequest:
      type: object
      description: PutInterestRateChartsChartIdChartSlabsChartSlabIdRequest
      properties:
        annualInterestRate:
          type: number
          format: double
          example: 6
        description:
          type: string
          example: Interest rate changed to 6%
    PutInterestRateChartsChartIdChartSlabsChartSlabIdResponse:
      type: object
      description: PutInterestRateChartsChartIdChartSlabsChartSlabIdResponse
      properties:
        changes:
          $ref: '#/components/schemas/PutInterestRateChartsChartIdChartSlabsChartSlabIdRequest'
        resourceId:
          type: integer
          format: int64
          example: 1
    PutInterestRateChartsChartIdRequest:
      type: object
      description: PutInterestRateChartsChartIdRequest
      properties:
        description:
          type: string
          example: Interest rate chart for 2014
        name:
          type: string
          example: Interest rate chart for 2014
    PutInterestRateChartsChartIdResponse:
      type: object
      description: PutInterestRateChartsChartIdResponse
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
    PutJobsJobIDRequest:
      type: object
      description: PutJobsJobsIDRequest
      properties:
        active:
          type: boolean
          example: false
        cronExpression:
          type: string
          example: 0 0 22 1/1 * ? *
        displayName:
          type: string
          example: Update loan Summary
    PutLoanChanges:
      type: object
      properties:
        locale:
          type: string
          example: en_GB
        principal:
          type: number
          format: double
    PutLoanProductsProductIdRequest:
      type: object
      description: PutLoanProductsProductIdRequest
      properties:
        accountMovesOutOfNPAOnlyOnArrearsCompletion:
          type: boolean
          example: false
        accountingRule:
          type: integer
          format: int32
          example: 3
        allowApprovedDisbursedAmountsOverApplied:
          type: boolean
          example: true
        allowAttributeOverrides:
          $ref: '#/components/schemas/AllowAttributeOverrides'
        allowPartialPeriodInterestCalcualtion:
          type: boolean
          example: true
        allowVariableInstallments:
          type: boolean
          example: false
        amortizationType:
          type: integer
          format: int32
          example: 1
        canDefineInstallmentAmount:
          type: boolean
          example: true
        canUseForTopup:
          type: boolean
          example: false
        chargeOffExpenseAccountId:
          type: integer
          format: int64
          example: 12
        chargeOffFraudExpenseAccountId:
          type: integer
          format: int64
          example: 13
        charges:
          type: array
          items:
            $ref: '#/components/schemas/ChargeData'
        closeDate:
          type: string
          example: 10 July 2022
        creditAllocation:
          type: array
          example: []
          items:
            $ref: '#/components/schemas/CreditAllocationData'
        currencyCode:
          type: string
          example: USD
        dateFormat:
          type: string
          example: dd MMMM yyyy
        daysInMonthType:
          type: integer
          format: int64
          example: 1
        daysInYearType:
          type: integer
          format: int64
          example: 1
        delinquencyBucketId:
          type: integer
          format: int64
          example: 1
        description:
          type: string
          example: non-interest bearing product
        digitsAfterDecimal:
          type: integer
          format: int32
          example: 2
        disallowExpectedDisbursements:
          type: boolean
          example: true
        disbursedAmountPercentageForDownPayment:
          type: number
          example: 5.5
        dueDaysForRepaymentEvent:
          type: integer
          format: int32
          example: 3
        enableAutoRepaymentForDownPayment:
          type: boolean
          example: false
        enableDownPayment:
          type: boolean
          example: false
        enableInstallmentLevelDelinquency:
          type: boolean
          example: false
        feeToIncomeAccountMappings:
          type: array
          items:
            $ref: '#/components/schemas/GetLoanFeeToIncomeAccountMappings'
        fixedPrincipalPercentagePerInstallment:
          type: number
          example: 5.5
        fundId:
          type: integer
          format: int64
          example: 3
        fundSourceAccountId:
          type: integer
          format: int64
          example: 4
        goodwillCreditAccountId:
          type: integer
          format: int64
          example: 48
        graceOnArrearsAgeing:
          type: integer
          format: int32
          example: 3
        graceOnInterestPayment:
          type: integer
          format: int32
          example: 3
        graceOnPrincipalPayment:
          type: integer
          format: int32
          example: 3
        holdGuaranteeFunds:
          type: boolean
          example: false
        inArrearsTolerance:
          type: integer
          format: int32
          example: 90
        inMultiplesOf:
          type: integer
          format: int32
          example: 1
        includeInBorrowerCycle:
          type: boolean
          example: false
        incomeFromChargeOffFeesAccountId:
          type: integer
          format: int64
          example: 11
        incomeFromChargeOffInterestAccountId:
          type: integer
          format: int64
          example: 20
        incomeFromChargeOffPenaltyAccountId:
          type: integer
          format: int64
          example: 11
        incomeFromFeeAccountId:
          type: integer
          format: int64
          example: 37
        incomeFromGoodwillCreditFeesAccountId:
          type: integer
          format: int64
          example: 11
        incomeFromGoodwillCreditInterestAccountId:
          type: integer
          format: int64
          example: 20
        incomeFromGoodwillCreditPenaltyAccountId:
          type: integer
          format: int64
          example: 11
        incomeFromPenaltyAccountId:
          type: integer
          format: int64
          example: 35
        incomeFromRecoveryAccountId:
          type: integer
          format: int64
          example: 15
        installmentAmountInMultiplesOf:
          type: integer
          format: int32
          example: 1
        interestCalculationPeriodType:
          type: integer
          format: int32
          example: 1
        interestOnLoanAccountId:
          type: integer
          format: int64
          example: 34
        interestRateFrequencyType:
          type: integer
          format: int32
          example: 2
        interestRatePerPeriod:
          type: number
          format: double
          example: 1.75
        interestRateVariationsForBorrowerCycle:
          type: array
          example: []
          items:
            type: integer
            format: int32
        interestRecalculationCompoundingMethod:
          type: integer
          format: int32
          example: 1
        interestType:
          type: integer
          format: int32
          example: 0
        isEqualAmortization:
          type: boolean
          example: false
        isInterestRecalculationEnabled:
          type: boolean
          example: false
        isLinkedToFloatingInterestRates:
          type: boolean
          example: false
        loanPortfolioAccountId:
          type: integer
          format: int64
          example: 8
        loanScheduleProcessingType:
          type: string
          example: HORIZONTAL
        loanScheduleType:
          type: string
          example: CUMULATIVE
        locale:
          type: string
          example: en_GB
        maxInterestRatePerPeriod:
          type: number
          format: double
          example: 23.4
        maxNumberOfRepayments:
          type: integer
          format: int32
          example: 1
        maxPrincipal:
          type: number
          format: double
          example: 15000.0
        maxTrancheCount:
          type: integer
          format: int32
          example: 3
        minInterestRatePerPeriod:
          type: number
          format: double
          example: 0
        minNumberOfRepayments:
          type: integer
          format: int32
          example: 1
        minPrincipal:
          type: number
          format: double
          example: 5000.0
        minimumDaysBetweenDisbursalAndFirstRepayment:
          type: integer
          format: int32
          example: 30
        multiDisburseLoan:
          type: boolean
          example: true
        name:
          type: string
          example: LP Accrual Accounting
        numberOfRepaymentVariationsForBorrowerCycle:
          type: array
          example: []
          items:
            type: integer
            format: int32
        numberOfRepayments:
          type: integer
          format: int32
          example: 12
        outstandingLoanBalance:
          type: number
          format: double
          example: 36000.0
        overAppliedCalculationType:
          type: string
          example: percentage
        overAppliedNumber:
          type: integer
          format: int32
          example: 50
        overDueDaysForRepaymentEvent:
          type: integer
          format: int32
          example: 3
        overdueDaysForNPA:
          type: integer
          format: int32
          example: 179
        overpaymentLiabilityAccountId:
          type: integer
          format: int64
          example: 2
        paymentAllocation:
          type: array
          example: []
          items:
            $ref: '#/components/schemas/AdvancedPaymentData'
        paymentChannelToFundSourceMappings:
          type: array
          items:
            $ref: '#/components/schemas/GetLoanPaymentChannelToFundSourceMappings'
        penaltyToIncomeAccountMappings:
          type: array
          items:
            $ref: '#/components/schemas/ChargeToGLAccountMapper'
        preClosureInterestCalculationStrategy:
          type: integer
          format: int32
          example: 1
        principal:
          type: number
          format: double
          example: 10000.0
        principalThresholdForLastInstallment:
          type: integer
          format: int32
          example: 50
        principalVariationsForBorrowerCycle:
          type: array
          example: []
          items:
            type: integer
            format: int32
        rates:
          type: array
          items:
            $ref: '#/components/schemas/RateData'
        recalculationCompoundingFrequencyInterval:
          type: integer
          format: int32
          example: 1
        recalculationCompoundingFrequencyOnDayType:
          type: integer
          format: int32
          example: 1
        recalculationCompoundingFrequencyType:
          type: integer
          format: int32
          example: 1
        recalculationRestFrequencyInterval:
          type: integer
          format: int32
          example: 1
        recalculationRestFrequencyType:
          type: integer
          format: int32
          example: 50
        receivableFeeAccountId:
          type: integer
          format: int64
          example: 11
        receivableInterestAccountId:
          type: integer
          format: int64
          example: 9
        receivablePenaltyAccountId:
          type: integer
          format: int64
          example: 10
        repaymentEvery:
          type: integer
          format: int32
          example: 1
        repaymentFrequencyType:
          type: integer
          format: int32
          example: 2
        repaymentStartDateType:
          type: integer
          format: int32
          example: 1
        rescheduleStrategyMethod:
          type: integer
          format: int32
          example: 2
        shortName:
          type: string
          example: LPAA
        startDate:
          type: string
          example: 10 July 2022
        transactionProcessingStrategyCode:
          type: string
          example: mifos-standard-strategy
        transfersInSuspenseAccountId:
          type: integer
          format: int64
          example: 5
        useBorrowerCycle:
          type: boolean
          example: false
        writeOffAccountId:
          type: integer
          format: int64
          example: 41
    PutLoanProductsProductIdResponse:
      type: object
      description: PutLoanProductsProductIdResponse
      properties:
        changes:
          $ref: '#/components/schemas/PutLoanChanges'
        resourceId:
          type: integer
          format: int64
          example: 1
    PutLoansLoanIdChanges:
      type: object
      properties:
        fraud:
          type: boolean
          example: false
        locale:
          type: string
          example: en
        principal:
          type: integer
          format: int64
          example: 5000
    PutLoansLoanIdChargesChargeIdRequest:
      type: object
      description: ' PutLoansLoanIdChargesChargeIdRequest'
      properties:
        amount:
          type: number
          format: double
          example: 60.0
        dateFormat:
          type: string
          example: dd MMMM yyyy
        dueDate:
          type: string
          example: 27 March 2013
        locale:
          type: string
          example: en
    PutLoansLoanIdChargesChargeIdResponse:
      type: object
      description: PutLoansLoanIdChargesChargeIdResponse
      properties:
        changes:
          $ref: '#/components/schemas/PutLoansLoanIdChargesChargeIdRequest'
        clientId:
          type: integer
          format: int64
          example: 1
        loanId:
          type: integer
          format: int64
          example: 1
        officeId:
          type: integer
          format: int64
          example: 1
        resourceExternalId:
          type: string
          example: 95174ff9-1a75-4d72-a413-6f9b1cb988b7
        resourceId:
          type: integer
          format: int64
          example: 6
    PutLoansLoanIdCollateral:
      type: object
      properties:
        clientCollateralId:
          type: integer
          format: int64
          example: 1
        quantity:
          type: number
          example: 1
    PutLoansLoanIdCollateralsCollateralIdResponse:
      type: object
      description: PutLoansLoanIdCollateralsCollateralIdResponse
      properties:
        changes:
          $ref: '#/components/schemas/PutLoansLoandIdCollateralsCollateralIdRequest'
        loanId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int64
          example: 12
    PutLoansLoanIdDisbursementData:
      type: object
      properties:
        dateFormat:
          type: string
          example: dd MMMM yyyy
        expectedDisbursementDate:
          type: string
        interestType:
          type: integer
          format: int32
          example: 1
        isEqualAmortization:
          type: boolean
          example: true
        locale:
          type: string
          example: en
        netDisbursalAmount:
          type: number
          example: 1
        principal:
          type: number
          example: 1
    PutLoansLoanIdRequest:
      type: object
      description: PutLoansLoanIdRequest
      properties:
        amortizationType:
          type: integer
          format: int32
          example: 1
        charges:
          type: array
          items:
            $ref: '#/components/schemas/PutLoansLoanIdChanges'
        clientId:
          type: integer
          format: int64
          example: 1
        collateral:
          type: array
          items:
            $ref: '#/components/schemas/PutLoansLoanIdCollateral'
        createStandingInstructionAtDisbursement:
          type: boolean
          example: true
        dateFormat:
          type: string
          example: dd MMMM yyyy
        disbursementData:
          type: array
          items:
            $ref: '#/components/schemas/PutLoansLoanIdDisbursementData'
        expectedDisbursementDate:
          type: string
          example: 04 March 2014
        fixedPrincipalPercentagePerInstallment:
          type: number
          example: 5.5
        fraud:
          type: boolean
          example: true
        graceOnArrearsAgeing:
          type: integer
          format: int32
          example: 1
        interestCalculationPeriodType:
          type: integer
          format: int32
          example: 0
        interestChargedFromDate:
          type: string
        interestRatePerPeriod:
          type: number
          example: 2
        interestType:
          type: integer
          format: int32
          example: 0
        isEqualAmortization:
          type: boolean
          example: true
        isTopup:
          type: boolean
          example: true
        linkAccountId:
          type: integer
          format: int64
          example: 1
        loanIdToClose:
          type: integer
          format: int64
          example: 1
        loanScheduleProcessingType:
          type: string
          example: HORIZONTAL
        loanTermFrequency:
          type: integer
          format: int32
          example: 10
        loanTermFrequencyType:
          type: integer
          format: int32
          example: 0
        loanType:
          type: string
          example: individual
        locale:
          type: string
          example: en
        maxOutstandingLoanBalance:
          type: integer
          format: int64
          example: 1
        numberOfRepayments:
          type: integer
          format: int32
          example: 10
        principal:
          type: integer
          format: int64
          example: 5000
        productId:
          type: integer
          format: int64
          example: 1
        repaymentEvery:
          type: integer
          format: int32
          example: 1
        repaymentFrequencyDayOfWeekType:
          type: integer
          format: int32
          example: 1
        repaymentFrequencyNthDayType:
          type: integer
          format: int32
          example: 1
        repaymentFrequencyType:
          type: integer
          format: int32
          example: 0
        repaymentsStartingFromDate:
          type: string
        submittedOnDate:
          type: string
        transactionProcessingStrategyCode:
          type: string
          example: mifos-standard-strategy
    PutLoansLoanIdResponse:
      type: object
      description: PutLoansLoanIdResponse
      properties:
        changes:
          $ref: '#/components/schemas/PutLoansLoanIdChanges'
        clientId:
          type: integer
          format: int64
          example: 1
        loanId:
          type: integer
          format: int64
          example: 1
        officeId:
          type: integer
          format: int64
          example: 2
        resourceExternalId:
          type: string
          example: 95174ff9-1a75-4d72-a413-6f9b1cb988b7
        resourceId:
          type: integer
          format: int64
          example: 1
    PutLoansLoandIdCollateralsCollateralIdRequest:
      type: object
      description: PutLoansLoandIdCollateralsCollateralIdRequest
      properties:
        description:
          type: string
          example: 22 Carat Gold chain weighing 12 grams
    PutNotesChanges:
      type: object
      properties:
        note:
          type: string
          example: a note about the client
    PutOfficesOfficeIdRequest:
      type: object
      description: PutOfficesOfficeIdRequest
      properties:
        dateFormat:
          type: string
          example: dd MMMM yyyy
        externalId:
          type: string
          example: SYS54-88
        locale:
          type: string
          example: en
        name:
          type: string
          example: Name is updated
        openingDate:
          type: string
          example: 01 July 2007
    PutOfficesOfficeIdResponse:
      type: object
      description: PutOfficesOfficeIdResponse
      properties:
        changes:
          $ref: '#/components/schemas/PutOfficesOfficeIdResponseChanges'
        officeId:
          type: integer
          format: int64
          example: 3
        resourceId:
          type: integer
          format: int64
          example: 3
    PutOfficesOfficeIdResponseChanges:
      type: object
      properties:
        name:
          type: string
          example: Name is updated
    PutPasswordPreferencesTemplateRequest:
      type: object
      description: PutPasswordPreferencesTemplateRequest
      properties:
        validationPolicyId:
          type: integer
          format: int64
          example: 1
    PutPaymentTypesPaymentTypeIdRequest:
      type: object
      description: PutPaymentTypesPaymentTypeIdRequest
      properties:
        codeName:
          type: string
          example: REPAYMENT_REFUND
        description:
          type: string
          example: not a cash payment type
        isCashPayment:
          type: boolean
          example: false
        isSystemDefined:
          type: boolean
          example: false
        name:
          type: string
          example: mPay
        position:
          type: integer
          format: int32
          example: 3
    PutPaymentTypesPaymentTypeIdResponse:
      type: object
      description: PutPaymentTypesPaymentTypeIdResponse
      properties:
        resourceId:
          type: integer
          format: int64
          example: 13
    PutPermissionsRequest:
      type: object
      description: PutPermissionsRequest
      properties:
        permissions:
          type: object
          additionalProperties:
            type: boolean
            example: false
          example: |-
            "CREATE_GUARANTOR":true,
                "CREATE_CLIENT":true
    PutProductsChanges:
      type: object
      properties:
        description:
          type: string
          example: Share Product Description.
        locale:
          type: string
          example: en
        unitPrice:
          type: number
          format: double
          example: 5.0
    PutProductsTypeProductIdRequest:
      type: object
      description: PutProductsTypeProductIdRequest
      properties:
        description:
          type: string
          example: Share Product Description.
        locale:
          type: string
          example: en
        unitPrice:
          type: number
          format: double
          example: 5.0
    PutProductsTypeProductIdResponse:
      type: object
      description: PutProductsTypeProductIdResponse
      properties:
        changes:
          $ref: '#/components/schemas/PutProductsChanges'
        resourceId:
          type: integer
          format: int64
          example: 1
    PutProvisioningCriteriaRequest:
      type: object
      description: PutProvisioningCriteriaRequest
      properties:
        criteriaName:
          type: string
          example: High Risk Products Criteria
        loanProducts:
          type: array
          items:
            $ref: '#/components/schemas/LoanProductData'
        provisioningcriteria:
          type: array
          items:
            $ref: '#/components/schemas/ProvisioningCriteriaDefinitionData'
    PutProvisioningCriteriaResponse:
      type: object
      description: PutProvisioningCriteriaResponse
      properties:
        changes:
          $ref: '#/components/schemas/PutProvisioningCriteriaResponseChanges'
        resourceId:
          type: integer
          format: int64
          example: 1
    PutProvisioningCriteriaResponseChanges:
      type: object
      properties:
        criteriaName:
          type: string
          example: High Risk Products Criteria
    PutProvisioningEntriesRequest:
      type: object
      description: PutProvisioningEntriesRequest
      properties:
        command:
          type: string
          example: recreateprovisioningentry
    PutProvisioningEntriesResponse:
      type: object
      description: PutProvisioningEntriesResponse
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
    PutRecurringDepositAccountsAccountIdRequest:
      type: object
      description: PutRecurringDepositAccountsAccountIdRequest
      properties:
        depositAmount:
          type: integer
          format: int32
          example: 6000
        locale:
          type: string
          example: en
    PutRecurringDepositAccountsAccountIdResponse:
      type: object
      description: PutRecurringDepositAccountsAccountIdResponse
      properties:
        changes:
          $ref: '#/components/schemas/PutRecurringDepositAccountsChanges'
        clientId:
          type: integer
          format: int64
          example: 1
        officeId:
          type: integer
          format: int64
          example: 2
        resourceId:
          type: integer
          format: int64
          example: 1
        savingsId:
          type: integer
          format: int64
          example: 1
    PutRecurringDepositAccountsChanges:
      type: object
      properties:
        depositAmount:
          type: integer
          format: int32
          example: 6000
        locale:
          type: string
          example: en
    PutRecurringDepositProductsChanges:
      type: object
      properties:
        description:
          type: string
          example: Recurring deposit product new offerings
        minDepositTerm:
          type: integer
          format: int32
          example: 5
    PutRecurringDepositProductsRequest:
      type: object
      description: PutRecurringDepositProductsRequest
      properties:
        description:
          type: string
          example: Recurring deposit product new offerings
        locale:
          type: string
          example: en
        minDepositTerm:
          type: integer
          format: int32
          example: 5
        minDepositTermTypeId:
          type: integer
          format: int32
          example: 1
    PutRecurringDepositProductsResponse:
      type: object
      description: PutRecurringDepositProductsResponse
      properties:
        changes:
          $ref: '#/components/schemas/PutRecurringDepositProductsChanges'
        resourceId:
          type: integer
          format: int32
          example: 1
    PutReportMailingJobsRequest:
      type: object
      description: PutReportMailingJobsRequest
      properties:
        dateFormat:
          type: string
          example: dd-MM-yyyy HH:mm:ss
        locale:
          type: string
          example: en_GB
        startDateTime:
          type: string
          format: date-time
    PutReportMailingJobsResponse:
      type: object
      description: PutReportMailingJobsResponse
      properties:
        changes:
          $ref: '#/components/schemas/PutReportMailingJobsResponseChanges'
        resourceId:
          type: integer
          format: int64
          example: 1
    PutReportMailingJobsResponseChanges:
      type: object
      properties:
        startDateTime:
          type: string
          format: date-time
    PutReportRequest:
      type: object
      description: PutReportRequest
      properties:
        reportName:
          type: string
          example: Completely New Report
        reportParameters:
          type: array
          items:
            $ref: '#/components/schemas/ReportParameterData'
    PutReportResponse:
      type: object
      description: PutReportResponse
      properties:
        changes:
          $ref: '#/components/schemas/PutReportResponseChanges'
        resourceId:
          type: integer
          format: int64
          example: 132
    PutReportResponseChanges:
      type: object
      properties:
        reportName:
          type: string
          example: Changed New Report
        reportParameters:
          type: array
          items:
            $ref: '#/components/schemas/ReportParameterData'
    PutResourceTypeResourceIdNotesNoteIdRequest:
      type: object
      description: PutResourceTypeResourceIdNotesNoteIdRequest
      properties:
        note:
          type: string
          example: a note about the client
    PutResourceTypeResourceIdNotesNoteIdResponse:
      type: object
      description: PutResourceTypeResourceIdNotesNoteIdResponse
      properties:
        changes:
          $ref: '#/components/schemas/PutNotesChanges'
        clientId:
          type: integer
          format: int64
          example: 1
        officeId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int32
          example: 76
    PutRolesRoleIdPermissionsRequest:
      type: object
      description: PutRolesRoleIdPermissionsRequest
      properties:
        permissions:
          type: object
          additionalProperties:
            type: boolean
            example: false
          example: |-
            "CREATE_GUARANTOR":true,
                "CREATE_CLIENT":true
    PutRolesRoleIdPermissionsResponse:
      type: object
      description: PutRolesRoleIdPermissionsResponse
      properties:
        changes:
          $ref: '#/components/schemas/PutRolesRoleIdPermissionsResponsePermissionsChanges'
        resourceId:
          type: integer
          format: int64
          example: 8
    PutRolesRoleIdPermissionsResponsePermissionsChanges:
      type: object
      properties:
        permissions:
          type: object
          additionalProperties:
            type: boolean
            example: false
          example: |-
            "CREATE_GUARANTOR":true,
                "CREATE_CLIENT":true
    PutRolesRoleIdRequest:
      type: object
      description: PutRolesRoleIdRequest
      properties:
        description:
          type: string
          example: some description(changed)
    PutRolesRoleIdResponse:
      type: object
      description: PutRolesRoleIdResponse
      properties:
        changes:
          $ref: '#/components/schemas/PutRolesRoleIdResponseChanges'
        resourceId:
          type: integer
          format: int64
          example: 1
    PutRolesRoleIdResponseChanges:
      type: object
      properties:
        description:
          type: string
          example: some description(changed)
    PutSavingsAccountsAccountIdRequest:
      type: object
      description: PutSavingsAccountsAccountIdRequest
      properties:
        locale:
          type: string
          example: en
        nominalAnnualInterestRate:
          type: number
          format: double
          example: 5.9999999999
    PutSavingsAccountsAccountIdResponse:
      type: object
      description: PutSavingsAccountsAccountIdResponse
      properties:
        changes:
          $ref: '#/components/schemas/PutSavingsAccountsChanges'
        clientId:
          type: integer
          format: int32
          example: 1
        officeId:
          type: integer
          format: int32
          example: 2
        resourceId:
          type: integer
          format: int32
          example: 1
        savingsId:
          type: integer
          format: int32
          example: 1
    PutSavingsAccountsChanges:
      type: object
      properties:
        locale:
          type: string
          example: en
        nominalAnnualInterestRate:
          type: number
          format: double
          example: 5.9999999999
    PutSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdRequest:
      type: object
      description: PutSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdRequest
      properties:
        amount:
          type: number
          format: float
          example: 60
        dateFormat:
          type: string
          example: dd MMMM yyyy
        dueDate:
          type: string
          example: 27 March 2013
        locale:
          type: string
          example: en
    PutSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdResponse:
      type: object
      description: PutSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdResponse
      properties:
        changes:
          $ref: '#/components/schemas/PutSavingsChanges'
        clientId:
          type: integer
          format: int64
          example: 1
        officeId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int64
          example: 6
        savingsId:
          type: integer
          format: int64
          example: 1
    PutSavingsChanges:
      type: object
      properties:
        description:
          type: string
          example: Passbook Savings Lite.
        interestRate:
          type: number
          format: double
          example: 5.73
        locale:
          type: string
          example: en
    PutSavingsProductsProductIdRequest:
      type: object
      description: PutSavingsProductsProductIdRequest
      properties:
        description:
          type: string
          example: Passbook Savings Lite.
        interestRate:
          type: number
          format: double
          example: 5.73
        locale:
          type: string
          example: en
    PutSavingsProductsProductIdResponse:
      type: object
      description: PutSavingsProductsProductIdResponse
      properties:
        changes:
          $ref: '#/components/schemas/PutSavingsChanges'
        resourceId:
          type: integer
          format: int32
          example: 1
    PutSelfBeneficiariesChanges:
      type: object
      properties:
        name:
          type: string
          example: Client22
        transferLimit:
          type: integer
          format: int32
          example: 1000
    PutSelfBeneficiariesTPTBeneficiaryIdRequest:
      type: object
      description: PutSelfBeneficiariesTPTBeneficiaryIdRequest
      properties:
        name:
          type: string
          example: beneficiary nick name
        transferLimit:
          type: integer
          format: int32
          example: 1000
    PutSelfBeneficiariesTPTBeneficiaryIdResponse:
      type: object
      description: PutSelfBeneficiariesTPTBeneficiaryIdResponse
      properties:
        changes:
          $ref: '#/components/schemas/PutSelfBeneficiariesChanges'
        resourceId:
          type: integer
          format: int32
          example: 5
    PutSelfLoansChanges:
      type: object
      properties:
        locale:
          type: string
          example: en
        principal:
          type: integer
          format: int64
          example: 5000
    PutSelfLoansLoanIdRequest:
      type: object
      description: PutSelfLoansLoanIdRequest
      properties:
        amortizationType:
          type: integer
          format: int32
          example: 1
        dateFormat:
          type: string
          example: dd MMMM yyyy
        expectedDisbursementDate:
          type: string
          example: 04 March 2014
        interestCalculationPeriodType:
          type: integer
          format: int32
          example: 0
        interestRatePerPeriod:
          type: integer
          format: int32
          example: 2
        interestType:
          type: integer
          format: int32
          example: 0
        loanTermFrequency:
          type: integer
          format: int32
          example: 10
        loanTermFrequencyType:
          type: integer
          format: int32
          example: 0
        locale:
          type: string
          example: en
        numberOfRepayments:
          type: integer
          format: int32
          example: 10
        principal:
          type: integer
          format: int64
          example: 5000
        productId:
          type: integer
          format: int32
          example: 1
        repaymentEvery:
          type: integer
          format: int32
          example: 1
        repaymentFrequencyType:
          type: integer
          format: int32
          example: 0
        transactionProcessingStrategyCode:
          type: string
          example: mifos-standard-strategy
    PutSelfLoansLoanIdResponse:
      type: object
      description: PutSelfLoansLoanIdResponse
      properties:
        changes:
          $ref: '#/components/schemas/PutSelfLoansChanges'
        clientId:
          type: integer
          format: int32
          example: 1
        loanId:
          type: integer
          format: int32
          example: 1
        officeId:
          type: integer
          format: int32
          example: 2
        resourceId:
          type: integer
          format: int32
          example: 1
    PutSelfUserChanges:
      type: object
      properties:
        passwordEncoded:
          type: string
          example: 6a72a630795be86fe926ce540fc45b6b922fe5ba130f185fe806a26b5e5efcdd
    PutSelfUserRequest:
      type: object
      description: PutSelfUserRequest
      properties:
        password:
          type: string
          example: Abcd1234
        repeatPassword:
          type: string
          example: Abcd1234
    PutSelfUserResponse:
      type: object
      description: PutSelfUserResponse
      properties:
        changes:
          $ref: '#/components/schemas/PutSelfUserChanges'
        officeId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int64
          example: 6
    PutStaffRequest:
      type: object
      description: PutStaffRequest
      properties:
        externalId:
          type: string
          example: 17Hbb
        isLoanOfficer:
          type: boolean
          example: false
    PutStandingInstructionsStandingInstructionIdRequest:
      type: object
      description: PutStandingInstructionsStandingInstructionIdRequest
      properties:
        recurrenceInterval:
          type: integer
          format: int32
          example: 2
    PutStandingInstructionsStandingInstructionIdResponse:
      type: object
      description: PutStandingInstructionsStandingInstructionIdResponse
      properties:
        changes:
          $ref: '#/components/schemas/PutUpdateStandingInstructionChanges'
        resourceId:
          type: integer
          format: int32
          example: 20
    PutTaxesComponentsChanges:
      type: object
      properties:
        name:
          type: string
          example: tax component 2
        percentage:
          type: number
          format: float
          example: 15
        startDate:
          type: string
          format: date
    PutTaxesComponentsTaxComponentIdRequest:
      type: object
      description: PutTaxesComponentsTaxComponentIdRequest
      properties:
        dateFormat:
          type: string
          example: dd MMMM yyyy
        locale:
          type: string
          example: en
        name:
          type: string
          example: tax component 2
        percentage:
          type: number
          format: float
          example: 15
        startDate:
          type: string
          example: 15 April 2016
    PutTaxesComponentsTaxComponentIdResponse:
      type: object
      description: PutTaxesComponentsTaxComponentIdResponse
      properties:
        changes:
          $ref: '#/components/schemas/PutTaxesComponentsChanges'
        resourceId:
          type: integer
          format: int32
          example: 1
    PutTaxesGroupChanges:
      type: object
      properties:
        addComponents:
          type: array
          example:
          - 6
          items:
            type: integer
            format: int32
        modifiedComponents:
          type: array
          items:
            $ref: '#/components/schemas/PutTaxesGroupModifiedComponents'
          uniqueItems: true
        name:
          type: string
          example: tax group 2
    PutTaxesGroupModifiedComponents:
      type: object
      properties:
        endDate:
          type: string
          example: "Apr 22, 2016 12:00:00 AM"
        taxComponentId:
          type: integer
          format: int32
          example: 7
    PutTaxesGroupTaxComponents:
      type: object
      properties:
        endDate:
          type: string
          example: 22 April 2016
        id:
          type: integer
          format: int64
          example: 7
        taxComponentId:
          type: integer
          format: int64
          example: 7
    PutTaxesGroupTaxGroupIdRequest:
      type: object
      description: PutTaxesGroupTaxGroupIdRequest
      properties:
        dateFormat:
          type: string
          example: dd MMMM yyyy
        locale:
          type: string
          example: en
        name:
          type: string
          example: tax group 2
        taxComponents:
          type: array
          items:
            $ref: '#/components/schemas/PutTaxesGroupTaxComponents'
          uniqueItems: true
    PutTaxesGroupTaxGroupIdResponse:
      type: object
      description: PutTaxesGroupTaxGroupIdResponse
      properties:
        changes:
          $ref: '#/components/schemas/PutTaxesGroupChanges'
        resourceId:
          type: integer
          format: int32
          example: 7
    PutTellersRequest:
      type: object
      description: PutTellersRequest
      properties:
        dateFormat:
          type: string
          example: dd-MM-yyyy
        description:
          type: string
          example: teller cash handling
        endDate:
          type: string
          format: date
        locale:
          type: string
          example: en
        name:
          type: string
          example: Teller3
        officeId:
          type: integer
          format: int64
          example: 1
        startDate:
          type: string
          format: date
        status:
          type: string
          enum:
          - INVALID
          - PENDING
          - ACTIVE
          - INACTIVE
          - CLOSED
          example: ACTIVE
    PutTellersResponse:
      type: object
      description: PutTellersResponse
      properties:
        changes:
          $ref: '#/components/schemas/PutTellersResponseChanges'
        officeId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int64
          example: 5
    PutTellersResponseChanges:
      type: object
      properties:
        dateFormat:
          type: string
          example: dd-MM-yyyy
        description:
          type: string
          example: teller cash handling
        endDate:
          type: string
          format: date
        locale:
          type: string
          example: en
        startDate:
          type: string
          format: date
    PutTellersTellerIdCashiersCashierIdRequest:
      type: object
      description: PutTellersTellerIdCashiersCashierIdRequest
      properties:
        dateFormat:
          type: string
          example: dd-MM-yyyy
        description:
          type: string
          example: Cashier updated.
        endDate:
          type: string
          format: date
        isFullDay:
          type: boolean
          example: true
        locale:
          type: string
          example: en
        staffId:
          type: integer
          format: int64
          example: 1
        startDate:
          type: string
          format: date
    PutTellersTellerIdCashiersCashierIdResponse:
      type: object
      description: PutTellersTellerIdCashiersCashierIdResponse
      properties:
        changes:
          $ref: '#/components/schemas/PutTellersTellerIdCashiersCashierIdResponseChanges'
        resourceId:
          type: integer
          format: int64
          example: 1
        subResourceId:
          type: integer
          format: int64
          example: 2
    PutTellersTellerIdCashiersCashierIdResponseChanges:
      type: object
      properties:
        dateFormat:
          type: string
          example: dd-MM-yyyy
        description:
          type: string
          example: Cashier updated.
        endDate:
          type: string
          format: date
        locale:
          type: string
          example: en
    PutTemplatesTemplateIdRequest:
      type: object
      description: PutTemplatesTemplateIdRequest
      properties:
        entity:
          type: integer
          format: int64
          example: 1
        id:
          type: integer
          format: int64
          example: 1
        mappers:
          type: array
          items:
            $ref: '#/components/schemas/TemplateMapper'
        name:
          type: string
          example: Text
        text:
          type: string
          example: "This is a loan for {{loan.clientName}}"
        type:
          type: integer
          format: int64
          example: 0
    PutTemplatesTemplateIdResponse:
      type: object
      description: PutTemplatesTemplateIdResponse
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
    PutUpdateStandingInstructionChanges:
      type: object
      properties:
        recurrenceInterval:
          type: integer
          format: int32
          example: 2
    PutUsersUserIdRequest:
      type: object
      description: PutUsersUserIdRequest
      properties:
        clients:
          type: array
          example:
          - 2
          - 3
          items:
            type: integer
            format: int64
        email:
          type: string
          example: whatever@mifos.org
        firstname:
          type: string
          example: Test
        isSelfServiceUser:
          type: boolean
          example: true
        lastname:
          type: string
          example: User
        officeId:
          type: integer
          format: int64
          example: 1
        password:
          type: string
          example: password
        repeatPassword:
          type: string
          example: repeatPassword
        roles:
          type: array
          example:
          - 2
          - 3
          items:
            type: integer
            format: int64
        sendPasswordToEmail:
          type: boolean
          example: true
        staffId:
          type: integer
          format: int64
          example: 1
    PutUsersUserIdResponse:
      type: object
      description: PutUsersUserIdResponse
      properties:
        changes:
          $ref: '#/components/schemas/PutUsersUserIdResponseChanges'
        officeId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int64
          example: 11
    PutUsersUserIdResponseChanges:
      type: object
      properties:
        firstname:
          type: string
          example: Test
        passwordEncoded:
          type: string
          example: abc3326b1bb376351c7baeb4175f5e0504e33aadf6a158474a6d71de1befae51
    PutWorkingDaysRequest:
      type: object
      description: PutWorkingDaysRequest
      properties:
        extendTermForDailyRepayments:
          type: boolean
          example: true
        locale:
          type: string
          example: en
        recurrence:
          type: string
          example: "FREQ=WEEKLY;INTERVAL=1;BYDAY=MO,TU,WE,TH,FR"
        repaymentRescheduleType:
          $ref: '#/components/schemas/EnumOptionData'
    PutWorkingDaysResponse:
      type: object
      description: PutWorkingDaysResponse
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
    Question:
      type: object
      properties:
        componentKey:
          type: string
        description:
          type: string
        id:
          type: integer
          format: int64
        key:
          type: string
        new:
          type: boolean
        responses:
          type: array
          items:
            $ref: '#/components/schemas/Response'
        sequenceNo:
          type: integer
          format: int32
        survey:
          $ref: '#/components/schemas/Survey'
        text:
          type: string
    QuestionData:
      type: object
      properties:
        componentKey:
          type: string
        description:
          type: string
        id:
          type: integer
          format: int64
        key:
          type: string
        responseDatas:
          type: array
          items:
            $ref: '#/components/schemas/ResponseData'
        sequenceNo:
          type: integer
          format: int32
        text:
          type: string
    Rate:
      type: object
      properties:
        active:
          type: boolean
        approveUser:
          $ref: '#/components/schemas/AppUser'
        createdBy:
          type: integer
          format: int64
        createdDate:
          type: string
          format: date-time
        id:
          type: integer
          format: int64
        lastModifiedBy:
          type: integer
          format: int64
        lastModifiedDate:
          type: string
          format: date-time
        name:
          type: string
        new:
          type: boolean
        percentage:
          type: number
        productApply:
          type: integer
          format: int32
    RateData:
      type: object
      properties:
        active:
          type: boolean
          example: false
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: some name
        percentage:
          type: number
          example: 20
        productApply:
          $ref: '#/components/schemas/EnumOptionData'
    ReportData:
      type: object
    ReportExportType:
      type: object
      properties:
        key:
          type: string
        queryParameter:
          type: string
    ReportMailingJobRunHistoryData:
      type: object
      properties:
        endDateTime:
          type: string
          format: date-time
        errorLog:
          type: string
        errorMessage:
          type: string
        id:
          type: integer
          format: int64
        reportMailingJobId:
          type: integer
          format: int64
        startDateTime:
          type: string
          format: date-time
        status:
          type: string
    ReportMailingJobTimelineData:
      type: object
      properties:
        createdByFirstname:
          type: string
        createdByLastname:
          type: string
        createdByUsername:
          type: string
        createdOnDate:
          type: string
          format: date
        updatedByFirstname:
          type: string
        updatedByLastname:
          type: string
        updatedByUsername:
          type: string
        updatedOnDate:
          type: string
          format: date
    ReportParameterData:
      type: object
    RescheduleReasonsCodeValue:
      type: object
      properties:
        active:
          type: boolean
          example: true
        id:
          type: integer
          format: int64
          example: 1
        mandatory:
          type: boolean
          example: false
        name:
          type: string
          example: reason
    RescheduleReasonsTimeline:
      type: object
      properties:
        approvedByFirstname:
          type: string
          example: App
        approvedByLastname:
          type: string
          example: Administrator
        approvedByUsername:
          type: string
          example: mifos
        approvedOnDate:
          type: string
          format: date
        submittedByFirstname:
          type: string
          example: App
        submittedByLastname:
          type: string
          example: Administrator
        submittedByUsername:
          type: string
          example: mifos
        submittedOnDate:
          type: string
          format: date
    Response:
      type: object
      properties:
        id:
          type: integer
          format: int64
        new:
          type: boolean
        question:
          $ref: '#/components/schemas/Question'
        sequenceNo:
          type: integer
          format: int32
        text:
          type: string
        value:
          type: integer
          format: int32
    ResponseData:
      type: object
      properties:
        id:
          type: integer
          format: int64
        sequenceNo:
          type: integer
          format: int32
        text:
          type: string
        value:
          type: integer
          format: int32
    ResultsetColumnHeaderData:
      type: object
      properties:
        booleanDisplayType:
          type: boolean
        codeLookupDisplayType:
          type: boolean
        codeValueDisplayType:
          type: boolean
        columnCode:
          type: string
        columnDisplayType:
          type: string
          enum:
          - TEXT
          - STRING
          - INTEGER
          - FLOAT
          - DECIMAL
          - DATE
          - TIME
          - DATETIME
          - BOOLEAN
          - BINARY
          - CODELOOKUP
          - CODEVALUE
        columnLength:
          type: integer
          format: int64
        columnName:
          type: string
        columnType:
          type: string
          enum:
          - BIT
          - BOOLEAN
          - SMALLINT
          - TINYINT
          - INTEGER
          - MEDIUMINT
          - BIGINT
          - REAL
          - FLOAT
          - DOUBLE
          - NUMERIC
          - DECIMAL
          - SERIAL
          - SMALLSERIAL
          - BIGSERIAL
          - MONEY
          - CHAR
          - VARCHAR
          - LONGVARCHAR
          - TEXT
          - TINYTEXT
          - MEDIUMTEXT
          - LONGTEXT
          - JSON
          - DATE
          - TIME
          - TIME_WITH_TIMEZONE
          - TIMESTAMP
          - DATETIME
          - TIMESTAMP_WITH_TIMEZONE
          - INTERVAL
          - BINARY
          - VARBINARY
          - LONGVARBINARY
          - BYTEA
          - BLOB
          - TINYBLOB
          - MEDIUMBLOB
          - LONGBLOB
        columnValues:
          type: array
          items:
            $ref: '#/components/schemas/ResultsetColumnValueData'
        dateDisplayType:
          type: boolean
        dateTimeDisplayType:
          type: boolean
        decimalDisplayType:
          type: boolean
        integerDisplayType:
          type: boolean
        isColumnIndexed:
          type: boolean
        isColumnNullable:
          type: boolean
        isColumnPrimaryKey:
          type: boolean
        isColumnUnique:
          type: boolean
        mandatory:
          type: boolean
        stringDisplayType:
          type: boolean
        textDisplayType:
          type: boolean
        timeDisplayType:
          type: boolean
    ResultsetColumnValueData:
      type: object
    ResultsetRowData:
      type: object
      properties:
        row:
          type: array
          items:
            type: object
    RetrieveOneResponse:
      type: object
      description: GetStaffResponse
      properties:
        displayName:
          type: string
          example: "Doe, John"
        externalId:
          type: string
          example: 17H
        firstname:
          type: string
          example: John
        id:
          type: integer
          format: int64
          example: 1
        isActive:
          type: boolean
          example: false
        isLoanOfficer:
          type: boolean
          example: true
        joiningDate:
          type: string
          format: date
        lastname:
          type: string
          example: Doe
        officeId:
          type: integer
          format: int64
          example: 1
        officeName:
          type: string
          example: Head Office
    Role:
      type: object
      properties:
        disabled:
          type: boolean
        enabled:
          type: boolean
        id:
          type: integer
          format: int64
        name:
          type: string
        new:
          type: boolean
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/Permission'
    RoleData:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    RunReportsResponse:
      type: object
      properties:
        columnHeaders:
          type: array
          items:
            $ref: '#/components/schemas/ResultsetColumnHeaderData'
        data:
          type: array
          items:
            $ref: '#/components/schemas/ResultsetRowData'
    SavingsAccountApplicationTimelineData:
      type: object
      properties:
        activatedByFirstname:
          type: string
        activatedByLastname:
          type: string
        activatedByUsername:
          type: string
        activatedOnDate:
          type: string
          format: date
        approvedByFirstname:
          type: string
        approvedByLastname:
          type: string
        approvedByUsername:
          type: string
        approvedOnDate:
          type: string
          format: date
        closedByFirstname:
          type: string
        closedByLastname:
          type: string
        closedByUsername:
          type: string
        closedOnDate:
          type: string
          format: date
        rejectedByFirstname:
          type: string
        rejectedByLastname:
          type: string
        rejectedByUsername:
          type: string
        rejectedOnDate:
          type: string
          format: date
        submittedByFirstname:
          type: string
        submittedByLastname:
          type: string
        submittedByUsername:
          type: string
        submittedOnDate:
          type: string
          format: date
        withdrawnByFirstname:
          type: string
        withdrawnByLastname:
          type: string
        withdrawnByUsername:
          type: string
        withdrawnOnDate:
          type: string
          format: date
    SavingsAccountChargeData:
      type: object
      properties:
        accountId:
          type: integer
          format: int64
        amount:
          type: number
        amountOrPercentage:
          type: number
        amountOutstanding:
          type: number
        amountPaid:
          type: number
        amountPercentageAppliedTo:
          type: number
        amountWaived:
          type: number
        amountWrittenOff:
          type: number
        annualFee:
          type: boolean
        chargeCalculationType:
          $ref: '#/components/schemas/EnumOptionData'
        chargeData:
          $ref: '#/components/schemas/ChargeData'
        chargeId:
          type: integer
          format: int64
        chargeOptions:
          type: array
          items:
            $ref: '#/components/schemas/ChargeData'
        chargeTimeType:
          $ref: '#/components/schemas/EnumOptionData'
        currency:
          $ref: '#/components/schemas/CurrencyData'
        dueDate:
          type: string
          format: date
        feeCharge:
          type: boolean
        feeInterval:
          type: integer
          format: int32
        feeOnMonthDay:
          type: object
          properties:
            dayOfMonth:
              type: integer
              format: int32
            month:
              type: string
              enum:
              - JANUARY
              - FEBRUARY
              - MARCH
              - APRIL
              - MAY
              - JUNE
              - JULY
              - AUGUST
              - SEPTEMBER
              - OCTOBER
              - NOVEMBER
              - DECEMBER
            monthValue:
              type: integer
              format: int32
        freeWithdrawalChargeFrequency:
          type: integer
          format: int32
        id:
          type: integer
          format: int64
        inactivationDate:
          type: string
          format: date
        isActive:
          type: boolean
        isFreeWithdrawal:
          type: boolean
        name:
          type: string
        penalty:
          type: boolean
        percentage:
          type: number
        restartFrequency:
          type: integer
          format: int32
        restartFrequencyEnum:
          type: integer
          format: int32
        savingsActivation:
          type: boolean
        withdrawalFee:
          type: boolean
    SavingsAccountChargesPaidByData:
      type: object
      properties:
        amount:
          type: number
        chargeId:
          type: integer
          format: int64
        feeCharge:
          type: boolean
        penaltyCharge:
          type: boolean
        savingsAccountChargeData:
          $ref: '#/components/schemas/SavingsAccountChargeData'
    SavingsAccountData:
      type: object
      properties:
        accountNo:
          type: string
        accrualBasedAccountingEnabledOnSavingsProduct:
          type: boolean
        activatedOnDate:
          type: string
          format: date
        activationLocalDate:
          type: string
          format: date
        allowOverdraft:
          type: boolean
        annualFee:
          $ref: '#/components/schemas/SavingsAccountChargeData'
        cashBasedAccountingEnabledOnSavingsProduct:
          type: boolean
        chargeOptions:
          type: array
          items:
            $ref: '#/components/schemas/ChargeData'
        charges:
          type: array
          items:
            $ref: '#/components/schemas/SavingsAccountChargeData'
        clientData:
          $ref: '#/components/schemas/ClientData'
        clientId:
          type: integer
          format: int64
        clientName:
          type: string
        currency:
          $ref: '#/components/schemas/CurrencyData'
        datatables:
          type: array
          items:
            $ref: '#/components/schemas/DatatableData'
        dateFormat:
          type: string
        daysToDormancy:
          type: integer
          format: int32
        daysToEscheat:
          type: integer
          format: int32
        daysToInactive:
          type: integer
          format: int32
        depositType:
          $ref: '#/components/schemas/EnumOptionData'
        depositTypeId:
          type: integer
          format: int32
        enforceMinRequiredBalance:
          type: boolean
        existingReversedTransactionIds:
          type: array
          items:
            type: integer
            format: int64
          uniqueItems: true
        existingTransactionIds:
          type: array
          items:
            type: integer
            format: int64
          uniqueItems: true
        externalId:
          type: string
        fieldOfficerId:
          type: integer
          format: int64
        fieldOfficerName:
          type: string
        fieldOfficerOptions:
          type: array
          items:
            $ref: '#/components/schemas/StaffData'
        glAccountIdForInterestOnSavings:
          type: integer
          format: int64
        glAccountIdForSavingsControl:
          type: integer
          format: int64
        groupGeneralData:
          $ref: '#/components/schemas/GroupGeneralData'
        groupId:
          type: integer
          format: int64
        groupName:
          type: string
        id:
          type: integer
          format: int64
        interestCalculationDaysInYearType:
          $ref: '#/components/schemas/EnumOptionData'
        interestCalculationDaysInYearTypeId:
          type: integer
          format: int32
        interestCalculationDaysInYearTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
        interestCalculationType:
          $ref: '#/components/schemas/EnumOptionData'
        interestCalculationTypeId:
          type: integer
          format: int32
        interestCalculationTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
        interestCompoundingPeriodType:
          $ref: '#/components/schemas/EnumOptionData'
        interestCompoundingPeriodTypeId:
          type: integer
          format: int32
        interestCompoundingPeriodTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
        interestPostingPeriodType:
          $ref: '#/components/schemas/EnumOptionData'
        interestPostingPeriodTypeId:
          type: integer
          format: int32
        interestPostingPeriodTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
        isDormancyTrackingActive:
          type: boolean
        lastActiveTransactionDate:
          type: string
          format: date
        lastSavingsAccountTransaction:
          $ref: '#/components/schemas/SavingsAccountTransactionData'
        lienAllowed:
          type: boolean
        locale:
          type: string
        lockedInUntilDate:
          type: string
          format: date
        lockinPeriodFrequency:
          type: integer
          format: int32
        lockinPeriodFrequencyType:
          $ref: '#/components/schemas/EnumOptionData'
        lockinPeriodFrequencyTypeId:
          type: integer
          format: int32
        lockinPeriodFrequencyTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
        maxAllowedLienLimit:
          type: number
        minBalanceForInterestCalculation:
          type: number
        minOverdraftForInterestCalculation:
          type: number
        minRequiredBalance:
          type: number
        minRequiredOpeningBalance:
          type: number
        newSavingsAccountTransactionData:
          type: array
          items:
            $ref: '#/components/schemas/SavingsAccountTransactionData'
        nominalAnnualInterestRate:
          type: number
        nominalAnnualInterestRateOverdraft:
          type: number
        officeId:
          type: integer
          format: int64
        onHoldFunds:
          type: number
        overdraftLimit:
          type: number
        productId:
          type: integer
          format: int64
        productOptions:
          type: array
          items:
            $ref: '#/components/schemas/SavingsProductData'
        reasonForBlock:
          type: string
        rowIndex:
          type: integer
          format: int32
        savingsAccountSummaryData:
          $ref: '#/components/schemas/SavingsAccountSummaryData'
        savingsAccountTransactionData:
          type: array
          items:
            $ref: '#/components/schemas/SavingsAccountTransactionData'
        savingsAccountTransactionSummaryWrapper:
          $ref: '#/components/schemas/SavingsAccountTransactionDataSummaryWrapper'
        savingsAccountTransactionsWithPivotConfig:
          type: array
          items:
            $ref: '#/components/schemas/SavingsAccountTransactionData'
        savingsAmountOnHold:
          type: number
        savingsHelper:
          $ref: '#/components/schemas/SavingsHelper'
        savingsProduct:
          $ref: '#/components/schemas/SavingsProductData'
        savingsProductData:
          $ref: '#/components/schemas/SavingsProductData'
        savingsProductId:
          type: integer
          format: int64
        savingsProductName:
          type: string
        startInterestCalculationDate:
          type: string
          format: date
        status:
          $ref: '#/components/schemas/SavingsAccountStatusEnumData'
        subStatus:
          $ref: '#/components/schemas/SavingsAccountSubStatusEnumData'
        submittedOnDate:
          type: string
          format: date
        summary:
          $ref: '#/components/schemas/SavingsAccountSummaryData'
        taxGroup:
          $ref: '#/components/schemas/TaxGroupData'
        timeline:
          $ref: '#/components/schemas/SavingsAccountApplicationTimelineData'
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/SavingsAccountTransactionData'
        updatedTransactions:
          type: array
          items:
            $ref: '#/components/schemas/SavingsAccountTransactionData'
          writeOnly: true
        withHoldTax:
          type: boolean
        withdrawalFee:
          $ref: '#/components/schemas/SavingsAccountChargeData'
        withdrawalFeeForTransfers:
          type: boolean
        withdrawalFeeTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
    SavingsAccountStatusEnumData:
      type: object
      properties:
        active:
          type: boolean
        approved:
          type: boolean
        closed:
          type: boolean
        code:
          type: string
        id:
          type: integer
          format: int64
        matured:
          type: boolean
        prematureClosed:
          type: boolean
        rejected:
          type: boolean
        submittedAndPendingApproval:
          type: boolean
        transferInProgress:
          type: boolean
        transferOnHold:
          type: boolean
        value:
          type: string
        withdrawnByApplicant:
          type: boolean
    SavingsAccountSubStatusEnumData:
      type: object
      properties:
        block:
          type: boolean
        blockCredit:
          type: boolean
        blockDebit:
          type: boolean
        code:
          type: string
        dormant:
          type: boolean
        escheat:
          type: boolean
        id:
          type: integer
          format: int64
        inactive:
          type: boolean
        none:
          type: boolean
        value:
          type: string
    SavingsAccountSummaryData:
      type: object
      properties:
        accountBalance:
          type: number
        availableBalance:
          type: number
        currency:
          $ref: '#/components/schemas/CurrencyData'
        interestNotPosted:
          type: number
        interestPostedTillDate:
          type: string
          format: date
        lastInterestCalculationDate:
          type: string
          format: date
        prevInterestPostedTillDate:
          type: string
          format: date
        runningBalanceOnInterestPostingTillDate:
          type: number
        runningBalanceOnPivotDate:
          type: number
        totalAnnualFees:
          type: number
        totalDeposits:
          type: number
        totalFeeCharge:
          type: number
        totalInterestEarned:
          type: number
        totalInterestPosted:
          type: number
        totalOverdraftInterestDerived:
          type: number
        totalPenaltyCharge:
          type: number
        totalWithdrawalFees:
          type: number
        totalWithdrawals:
          type: number
        totalWithholdTax:
          type: number
    SavingsAccountTransactionData:
      type: object
      properties:
        accountId:
          type: integer
          format: int64
        accountNo:
          type: string
        accountNumber:
          type: string
        amount:
          type: number
        amountOnHold:
          type: boolean
        amountRelease:
          type: boolean
        annualFee:
          type: boolean
        annualFeeAndNotReversed:
          type: boolean
        balanceEndDate:
          type: string
          format: date
        balanceNumberOfDays:
          type: integer
          format: int32
        bankNumber:
          type: string
        chargeTransaction:
          type: boolean
        chargeTransactionAndNotReversed:
          type: boolean
        chargesPaidByData:
          type: array
          items:
            $ref: '#/components/schemas/SavingsAccountChargesPaidByData'
          uniqueItems: true
        checkNumber:
          type: string
        credit:
          type: boolean
        cumulativeBalance:
          type: number
        currency:
          $ref: '#/components/schemas/CurrencyData'
        date:
          type: string
          format: date
        dateFormat:
          type: string
        debit:
          type: boolean
        deposit:
          type: boolean
        depositAndNotReversed:
          type: boolean
        dividendPayoutAndNotReversed:
          type: boolean
        endOfBalanceLocalDate:
          type: string
          format: date
        entryType:
          type: string
          enum:
          - CREDIT
          - DEBIT
        feeCharge:
          type: boolean
        feeChargeAndNotReversed:
          type: boolean
        id:
          type: integer
          format: int64
        interestPosting:
          type: boolean
        interestPostingAndNotReversed:
          type: boolean
        interestedPostedAsOn:
          type: boolean
        isManualTransaction:
          type: boolean
        isReversal:
          type: boolean
        lienTransaction:
          type: boolean
        locale:
          type: string
        manualTransaction:
          type: boolean
        modifiedId:
          type: integer
          format: int64
        notReversed:
          type: boolean
        note:
          type: string
        originalTransactionId:
          type: integer
          format: int64
        outstandingChargeAmount:
          type: number
        overdraftAmount:
          type: number
        overdraftInterestAndNotReversed:
          type: boolean
        payCharge:
          type: boolean
        paymentDetailData:
          $ref: '#/components/schemas/PaymentDetailData'
        paymentTypeId:
          type: integer
          format: int64
        paymentTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/PaymentTypeData'
        penaltyCharge:
          type: boolean
        penaltyChargeAndNotReversed:
          type: boolean
        reasonForBlock:
          type: string
        receiptNumber:
          type: string
        refNo:
          type: string
        releaseTransactionId:
          type: integer
          format: int64
        reversalTransaction:
          type: boolean
        reversed:
          type: boolean
        routingCode:
          type: string
        rowIndex:
          type: integer
          format: int32
        runningBalance:
          type: number
        savingsAccountChargesPaid:
          type: array
          items:
            $ref: '#/components/schemas/SavingsAccountChargesPaidByData'
          uniqueItems: true
        savingsAccountId:
          type: integer
          format: int64
        submittedByUsername:
          type: string
        submittedOnDate:
          type: string
          format: date
        taxDetails:
          type: array
          items:
            $ref: '#/components/schemas/TaxDetailsData'
        transactionAmount:
          type: number
        transactionDate:
          type: string
          format: date
        transactionType:
          $ref: '#/components/schemas/SavingsAccountTransactionEnumData'
        transfer:
          $ref: '#/components/schemas/AccountTransferData'
        waiveCharge:
          type: boolean
        waiveFeeCharge:
          type: boolean
        waiveFeeChargeAndNotReversed:
          type: boolean
        waivePenaltyCharge:
          type: boolean
        waivePenaltyChargeAndNotReversed:
          type: boolean
        withHoldTaxAndNotReversed:
          type: boolean
        withdrawal:
          type: boolean
        withdrawalFeeAndNotReversed:
          type: boolean
    SavingsAccountTransactionDataSummaryWrapper:
      type: object
    SavingsAccountTransactionEnumData:
      type: object
      properties:
        accrual:
          type: boolean
        amountHold:
          type: boolean
        amountRelease:
          type: boolean
        annualFee:
          type: boolean
        approveTransfer:
          type: boolean
        chargeTransaction:
          type: boolean
        code:
          type: string
        credit:
          type: boolean
        debit:
          type: boolean
        deposit:
          type: boolean
        depositOrWithdrawal:
          type: boolean
        dividendPayout:
          type: boolean
        entryType:
          type: string
          enum:
          - CREDIT
          - DEBIT
        escheat:
          type: boolean
        feeDeduction:
          type: boolean
        id:
          type: integer
          format: int64
        incomeFromInterest:
          type: boolean
        initiateTransfer:
          type: boolean
        interestPosting:
          type: boolean
        overDraftInterestPosting:
          type: boolean
        overdraftFee:
          type: boolean
        overdraftInterest:
          type: boolean
        payCharge:
          type: boolean
        rejectTransfer:
          type: boolean
        transactionTypeEnum:
          type: string
          enum:
          - INVALID
          - DEPOSIT
          - WITHDRAWAL
          - INTEREST_POSTING
          - WITHDRAWAL_FEE
          - ANNUAL_FEE
          - WAIVE_CHARGES
          - PAY_CHARGE
          - DIVIDEND_PAYOUT
          - ACCRUAL
          - INITIATE_TRANSFER
          - APPROVE_TRANSFER
          - WITHDRAW_TRANSFER
          - REJECT_TRANSFER
          - WRITTEN_OFF
          - OVERDRAFT_INTEREST
          - WITHHOLD_TAX
          - ESCHEAT
          - AMOUNT_HOLD
          - AMOUNT_RELEASE
        value:
          type: string
        withdrawTransfer:
          type: boolean
        withdrawal:
          type: boolean
        withdrawalFee:
          type: boolean
        withholdTax:
          type: boolean
        writtenoff:
          type: boolean
    SavingsAccountTransactionsSearchResponse:
      type: object
      description: SavingsAccountTransactionsSearchResponse
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/GetSavingsAccountTransactionsPageItem'
          uniqueItems: true
        total:
          type: integer
          format: int64
          example: 2
    SavingsHelper:
      type: object
    SavingsProductData:
      type: object
      properties:
        accrualBasedAccountingEnabled:
          type: boolean
        allowOverdraft:
          type: boolean
        cashBasedAccountingEnabled:
          type: boolean
        currency:
          $ref: '#/components/schemas/CurrencyData'
        depositAccountType:
          type: string
        id:
          type: integer
          format: int64
        interestCalculationDaysInYearType:
          $ref: '#/components/schemas/EnumOptionData'
        interestCalculationType:
          $ref: '#/components/schemas/EnumOptionData'
        interestCompoundingPeriodType:
          $ref: '#/components/schemas/EnumOptionData'
        interestPostingPeriodType:
          $ref: '#/components/schemas/EnumOptionData'
        lockinPeriodFrequency:
          type: integer
          format: int32
        lockinPeriodFrequencyType:
          $ref: '#/components/schemas/EnumOptionData'
        maxAllowedLienLimit:
          type: number
        minRequiredBalance:
          type: number
        minRequiredOpeningBalance:
          type: number
        name:
          type: string
        nominalAnnualInterestRate:
          type: number
        overdraftLimit:
          type: number
        periodicAccrualAccounting:
          type: boolean
        upfrontAccrualAccounting:
          type: boolean
        withdrawalFeeForTransfers:
          type: boolean
    Scorecard:
      type: object
      properties:
        appUser:
          $ref: '#/components/schemas/AppUser'
        client:
          $ref: '#/components/schemas/Client'
        createdOn:
          type: string
          format: date-time
        id:
          type: integer
          format: int64
        new:
          type: boolean
        question:
          $ref: '#/components/schemas/Question'
        response:
          $ref: '#/components/schemas/Response'
        survey:
          $ref: '#/components/schemas/Survey'
        value:
          type: integer
          format: int32
    ScorecardData:
      type: object
      properties:
        clientId:
          type: integer
          format: int64
        id:
          type: integer
          format: int64
        scorecardValues:
          type: array
          items:
            $ref: '#/components/schemas/ScorecardValue'
        surveyId:
          type: integer
          format: int64
        surveyName:
          type: string
        userId:
          type: integer
          format: int64
        username:
          type: string
    ScorecardValue:
      type: object
      properties:
        createdOn:
          type: string
          format: date-time
        questionId:
          type: integer
          format: int64
        responseId:
          type: integer
          format: int64
        value:
          type: integer
          format: int32
    SingleDebitOrCreditEntryCommand:
      type: object
      properties:
        amount:
          type: number
        comments:
          type: string
        commentsChanged:
          type: boolean
        glAccountId:
          type: integer
          format: int64
        glAccountIdChanged:
          type: boolean
        glAmountChanged:
          type: boolean
        parametersPassedInRequest:
          type: array
          items:
            type: string
          uniqueItems: true
    SmsCampaignData:
      type: object
      properties:
        campaignName:
          type: string
        campaignStatus:
          $ref: '#/components/schemas/EnumOptionData'
        campaignType:
          $ref: '#/components/schemas/EnumOptionData'
        id:
          type: integer
          format: int64
        lastTriggerDate:
          type: string
          format: date
        message:
          type: string
        nextTriggerDate:
          type: string
          format: date-time
        notification:
          type: boolean
        paramValue:
          type: string
        recurrence:
          type: string
        recurrenceStartDate:
          type: string
          format: date-time
        reportName:
          type: string
        runReportId:
          type: integer
          format: int64
    Sort:
      type: object
      properties:
        empty:
          type: boolean
        sorted:
          type: boolean
        unsorted:
          type: boolean
    SortOrder:
      type: object
      properties:
        direction:
          type: string
          enum:
          - ASC
          - DESC
        property:
          type: string
    Staff:
      type: object
      properties:
        active:
          type: boolean
        displayName:
          type: string
        emailAddress:
          type: string
        externalId:
          type: string
        firstname:
          type: string
        id:
          type: integer
          format: int64
        image:
          $ref: '#/components/schemas/Image'
        joiningDate:
          type: string
          format: date
        lastname:
          type: string
        loanOfficer:
          type: boolean
        mobileNo:
          type: string
        new:
          type: boolean
        notActive:
          type: boolean
        notLoanOfficer:
          type: boolean
        office:
          $ref: '#/components/schemas/Office'
        organisationalRoleParentStaff:
          $ref: '#/components/schemas/Staff'
        organisationalRoleType:
          type: integer
          format: int32
    StaffData:
      type: object
      properties:
        displayName:
          type: string
        firstname:
          type: string
        id:
          type: integer
          format: int64
        joiningDate:
          type: string
          format: date
        lastname:
          type: string
        officeId:
          type: integer
          format: int64
        officeName:
          type: string
        rowIndex:
          type: integer
          format: int32
    SubjectName:
      type: object
      properties:
        displayName:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        middleName:
          type: string
    Survey:
      type: object
      properties:
        components:
          type: array
          items:
            $ref: '#/components/schemas/Component'
        countryCode:
          type: string
        description:
          type: string
        id:
          type: integer
          format: int64
        key:
          type: string
        name:
          type: string
        new:
          type: boolean
        questions:
          type: array
          items:
            $ref: '#/components/schemas/Question'
        validFrom:
          type: string
          format: date
        validTo:
          type: string
          format: date
    SurveyData:
      type: object
      properties:
        componentDatas:
          type: array
          items:
            $ref: '#/components/schemas/ComponentData'
        countryCode:
          type: string
        description:
          type: string
        id:
          type: integer
          format: int64
        key:
          type: string
        name:
          type: string
        questionDatas:
          type: array
          items:
            $ref: '#/components/schemas/QuestionData'
        validFrom:
          type: string
          format: date
        validTo:
          type: string
          format: date
    TableQueryData:
      type: object
      properties:
        query:
          $ref: '#/components/schemas/AdvancedQueryData'
        table:
          type: string
    TaxComponent:
      type: object
      properties:
        createdBy:
          type: integer
          format: int64
        createdDate:
          type: string
          format: date-time
        creditAccountType:
          type: integer
          format: int32
        creditAcount:
          $ref: '#/components/schemas/GLAccount'
        debitAccountType:
          type: integer
          format: int32
        debitAcount:
          $ref: '#/components/schemas/GLAccount'
        id:
          type: integer
          format: int64
        lastModifiedBy:
          type: integer
          format: int64
        lastModifiedDate:
          type: string
          format: date-time
        new:
          type: boolean
        percentage:
          type: number
        taxComponentHistories:
          type: array
          items:
            $ref: '#/components/schemas/TaxComponentHistory'
          uniqueItems: true
        taxGroupMappings:
          type: array
          items:
            $ref: '#/components/schemas/TaxGroupMappings'
          uniqueItems: true
    TaxComponentData:
      type: object
      properties:
        creditAccount:
          $ref: '#/components/schemas/GLAccountData'
        creditAccountType:
          $ref: '#/components/schemas/EnumOptionData'
        debitAccount:
          $ref: '#/components/schemas/GLAccountData'
        debitAccountType:
          $ref: '#/components/schemas/EnumOptionData'
        glAccountOptions:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/GLAccountData'
        glAccountTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
        id:
          type: integer
          format: int64
        name:
          type: string
        percentage:
          type: number
        startDate:
          type: string
          format: date
        taxComponentHistories:
          type: array
          items:
            $ref: '#/components/schemas/TaxComponentHistoryData'
    TaxComponentHistory:
      type: object
      properties:
        createdBy:
          type: integer
          format: int64
        createdDate:
          type: string
          format: date-time
        id:
          type: integer
          format: int64
        lastModifiedBy:
          type: integer
          format: int64
        lastModifiedDate:
          type: string
          format: date-time
        new:
          type: boolean
        percentage:
          type: number
    TaxComponentHistoryData:
      type: object
      properties:
        percentage:
          type: number
    TaxDetailsData:
      type: object
      properties:
        amount:
          type: number
        taxComponent:
          $ref: '#/components/schemas/TaxComponentData'
    TaxGroup:
      type: object
      properties:
        createdBy:
          type: integer
          format: int64
        createdDate:
          type: string
          format: date-time
        id:
          type: integer
          format: int64
        lastModifiedBy:
          type: integer
          format: int64
        lastModifiedDate:
          type: string
          format: date-time
        name:
          type: string
        new:
          type: boolean
        taxGroupMappings:
          type: array
          items:
            $ref: '#/components/schemas/TaxGroupMappings'
          uniqueItems: true
    TaxGroupData:
      type: object
      properties:
        taxAssociations:
          type: array
          items:
            $ref: '#/components/schemas/TaxGroupMappingsData'
    TaxGroupMappings:
      type: object
      properties:
        createdBy:
          type: integer
          format: int64
        createdDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date
        id:
          type: integer
          format: int64
        lastModifiedBy:
          type: integer
          format: int64
        lastModifiedDate:
          type: string
          format: date-time
        new:
          type: boolean
        taxComponent:
          $ref: '#/components/schemas/TaxComponent'
        taxGroup:
          $ref: '#/components/schemas/TaxGroup'
    TaxGroupMappingsData:
      type: object
      properties:
        taxComponent:
          $ref: '#/components/schemas/TaxComponentData'
    TemplateMapper:
      type: object
      properties:
        id:
          type: integer
          format: int64
        mapperkey:
          type: string
        mapperorder:
          type: integer
          format: int32
        mappervalue:
          type: string
        new:
          type: boolean
    TransactionDetailData:
      type: object
      properties:
        noteData:
          $ref: '#/components/schemas/NoteData'
        paymentDetails:
          $ref: '#/components/schemas/PaymentDetailData'
        transactionId:
          type: integer
          format: int64
        transactionType:
          $ref: '#/components/schemas/TransactionTypeEnumData'
    TransactionDetails:
      type: object
      properties:
        noteData:
          $ref: '#/components/schemas/GetResourceTypeResourceIdNotesResponse'
        paymentDetails:
          $ref: '#/components/schemas/PaymentDetailData'
        transactionId:
          type: integer
          format: int64
          example: 2
        transactionType:
          $ref: '#/components/schemas/EnumOptionType'
    TransactionProcessingStrategyData:
      type: object
      properties:
        code:
          type: string
        id:
          type: integer
          format: int64
        name:
          type: string
    TransactionTypeEnumData:
      type: object
      properties:
        code:
          type: string
        id:
          type: integer
          format: int64
        value:
          type: string
    UpdateBusinessStepConfigRequest:
      type: object
      description: UpdateBusinessStepConfigRequest
      properties:
        businessSteps:
          type: array
          items:
            $ref: '#/components/schemas/BusinessStep'
    UpdateChangesResponse:
      type: object
      properties:
        accountNo:
          type: integer
          format: int64
          example: 900800500600
        amount:
          type: number
          example: 10000
        bankName:
          type: string
          example: AMANA
        date:
          type: string
          format: date
          example: 2021-08-10
    UpdatePostDatedCheckRequest:
      type: object
      description: UpdatePostDatedCheckRequest
      properties:
        accountNo:
          type: integer
          format: int64
          example: 900800300400
        amount:
          type: number
          example: 10000
        date:
          type: string
          format: date
          example: 2021-08-10
        dateFormat:
          type: string
          example: dd MM YYYY
        locale:
          type: string
          example: en
        name:
          type: string
          example: AMANA
        repaymentDate:
          type: string
          format: date
          example: 2021-07-19
    UpdatePostDatedCheckResponse:
      type: object
      description: UpdatePostDatedCheckResponse
      properties:
        changes:
          $ref: '#/components/schemas/UpdateChangesResponse'
        resourceId:
          type: integer
          format: int32
          example: 12
    UpdateStaffResponse:
      type: object
      description: PutStaffResponse
      properties:
        officeId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int64
          example: 1
    UploadRequest:
      type: object
      properties:
        dateFormat:
          type: string
        locale:
          type: string
        uploadedInputStream:
          type: string
          format: binary
  securitySchemes:
    basicAuth:
      scheme: basic
      type: http
    tenantid:
      in: header
      name: fineract-platform-tenantid
      type: apiKey
